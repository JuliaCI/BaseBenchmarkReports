cset: moving following pidspec: 2940
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.666681128 seconds)
loading group "string"... done (took 0.545148795 seconds)
loading group "linalg"... done (took 8.985062882 seconds)
loading group "parallel"... done (took 0.173735763 seconds)
loading group "find"... done (took 4.302071973 seconds)
loading group "tuple"... done (took 2.047175039 seconds)
loading group "dates"... done (took 1.496256666 seconds)
loading group "micro"... done (took 0.205376258 seconds)
loading group "io"... done (took 0.536469817 seconds)
loading group "scalar"... done (took 51.863143756 seconds)
loading group "sparse"... done (took 13.897735339 seconds)
loading group "broadcast"... done (took 1.698540345 seconds)
loading group "union"... done (took 9.208795321 seconds)
loading group "simd"... done (took 3.078449879 seconds)
loading group "random"... done (took 11.625581619 seconds)
loading group "problem"... done (took 2.21758737 seconds)
loading group "array"... done (took 24.855068311 seconds)
loading group "misc"... done (took 1.163174266 seconds)
loading group "sort"... done (took 3.871004572 seconds)
loading group "collection"... done (took 19.442811728 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767234099 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145392666 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.194053524 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208213191 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.280920018 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160176909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155380177 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17193399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.736860598 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217817304 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137469519 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419618402 seconds)
done (took 6.349971979 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263403506 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.249020394 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194261922 seconds)
  done (took 1.144658429 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077154301 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159571847 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109574384 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096031734 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095560326 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111124964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095317701 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110074416 seconds)
  done (took 1.481950536 seconds)
done (took 3.667682037 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520369516 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879121866 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531421315 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182846096 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.30874641 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.29823805 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265417495 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220888313 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093237327 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09057051 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176842828 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.437108654 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.409099472 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957059949 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071421961 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095296142 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.157203696 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.789037338 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081507505 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.113503028 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.547392907 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.217628688 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116970711 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108666257 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186395581 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13591993 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141652826 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101970087 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669233724 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13531609 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.22180519 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084047544 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142084889 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162318837 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213199261 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110615133 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678688245 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202589902 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099452163 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103056017 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681882343 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118116588 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.206945918 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106995273 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.07128125 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16481452 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118454574 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078835463 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095185519 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102375447 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16073528 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446157529 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106254576 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193588197 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093676299 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.698211378 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099553835 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277660786 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12731249 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095983968 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091946829 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08756349 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159566758 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09344302 seconds)
  done (took 20.275430571 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171195192 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187322162 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078433696 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157285398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1234987 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102371452 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085415069 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078928734 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126578009 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179639303 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137707197 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.19183917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076815741 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090740204 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170374495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230634082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128225824 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105073545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089336209 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110712233 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122529738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112524439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091816716 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092294183 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170653633 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208820951 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112304698 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125594883 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093287854 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09791236 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1450365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147944095 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096085669 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091248941 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191768611 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109582438 seconds)
  done (took 5.355058942 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.252996884 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107048343 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248448872 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194097002 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150314311 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.178843992 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176292956 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300642309 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.22545892 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161561769 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131325599 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.188740851 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113103147 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080223547 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080486937 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098550478 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.345770807 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182526893 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.174866134 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087055686 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.192675421 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11529834 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083238963 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084656165 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.104525108 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09703463 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.124641915 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.326449881 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.2302505 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094694005 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.033994286 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084029157 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125734928 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117271539 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219347162 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118579701 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141199001 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098866978 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.107480556 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.201570656 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124769212 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080819863 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128784108 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122600433 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132979548 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.112068515 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.114421953 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223484192 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090818141 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134234588 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.85456025 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199268634 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16623067 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088675641 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288687322 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124968944 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102214075 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112502109 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.657553332 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131533476 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084951148 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081429995 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116840979 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084839693 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098704177 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.458240927 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112083407 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.842380561 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085353699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163195885 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101088653 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123437468 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091483126 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105654479 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110206437 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088170042 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099579581 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090207613 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081075946 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.111077644 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085786743 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.132166071 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088501724 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08230096 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162628703 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100730267 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109513443 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129548431 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092747458 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.107172653 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116041863 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101534713 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092484028 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191761017 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100069619 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13398812 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113905983 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1288131 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109266256 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.259188318 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084713625 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125704556 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104409228 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130555591 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103356176 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082444119 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104319833 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082276836 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083804275 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164244499 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091764063 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083084357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108984829 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0965822 seconds)
  done (took 28.030328007 seconds)
done (took 54.361587383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.447079213 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083906765 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082716038 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104581656 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083752531 seconds)
  done (took 1.584698582 seconds)
done (took 2.345054656 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320176478 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204871172 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087027837 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193275683 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086506276 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202143695 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188581431 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10044396 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215593709 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085790643 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.197342678 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088149786 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105120236 seconds)
  done (took 2.859160302 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104925611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107477265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105799025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123102565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086452645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101908962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121127372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107017326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099675411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111995353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084879531 seconds)
  done (took 1.909347157 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102551104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106141141 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092844459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120277491 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087883387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100392278 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119494137 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107875485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101466999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116730389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087830451 seconds)
  done (took 1.900808957 seconds)
done (took 7.422567332 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237460918 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.099615672 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166217462 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247664714 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.375438397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.27874792 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.622926365 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202561905 seconds)
  done (took 16.120937374 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.213788056 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111272469 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092416516 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093729015 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115635921 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093834588 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097592896 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.119366862 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098276859 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092632244 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091813336 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116436057 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099361667 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097985138 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111030989 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091175882 seconds)
  done (took 2.558823603 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.15741717 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143023036 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097525507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100028181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113321862 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099569489 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105840987 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116643681 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094795946 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096639399 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120107386 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098550351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097974538 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110606461 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098468157 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.126045827 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112154436 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098669781 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.124297736 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11756041 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099934687 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096699929 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115026398 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098184451 seconds)
  done (took 3.486127165 seconds)
done (took 22.927011372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153852545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107043659 seconds)
  done (took 1.024673706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16918816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184806292 seconds)
  done (took 1.121086536 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115872004 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093537202 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141546791 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104506602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091256471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109145143 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118502229 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108801836 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091587807 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091960718 seconds)
  done (took 1.837684652 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097493314 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098618385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.128169481 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.172680108 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120431501 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095471515 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097577749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117252579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100810276 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093113768 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115865225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110594666 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096652512 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132904698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100138111 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11740141 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102863842 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096071456 seconds)
  done (took 2.766567443 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093974094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096586167 seconds)
  done (took 0.965676826 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097248186 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093473209 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09623619 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113786557 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09229529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090352613 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108390838 seconds)
  done (took 1.466879802 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534650677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239494459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377093152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074939898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126989462 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.329030673 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107620064 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074309853 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093953633 seconds)
  done (took 2.887145991 seconds)
done (took 12.84014427 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094780945 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.2401699 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.622239029 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113147212 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090882081 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162829347 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.324819891 seconds)
done (took 2.427822009 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357542029 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.171271577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086728704 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089869436 seconds)
  done (took 1.480224265 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084677353 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103173538 seconds)
  done (took 0.970159176 seconds)
done (took 3.234935691 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092256865 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093474235 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.143140426 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089265292 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090770678 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090080314 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109270828 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089541874 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089020823 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.10829291 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.0880713 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089648051 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088562873 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109054321 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090064827 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089743936 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10789102 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093138832 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093314152 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091599066 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110578296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092754364 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090377444 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108713068 seconds)
  done (took 3.156563361 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116335098 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094612565 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115854954 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097177127 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098208357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114006612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095695818 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091441721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113000546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09398498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096581744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113342888 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093660766 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094859671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11120013 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097782222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096291774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094246589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11199406 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097552955 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096413076 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113950104 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095925601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093522084 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112654037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094990039 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090931091 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109850282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095163995 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092655358 seconds)
  done (took 3.818562639 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099319035 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0879325 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088503534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118642887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086867021 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090634989 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103927156 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091473773 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090737734 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087987194 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110922002 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091454697 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088521727 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108950645 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092023643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093365881 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116336692 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090778393 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089464815 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091527491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111694604 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090040179 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089520989 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108135318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089032147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086694533 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089736432 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109234984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091460033 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091807776 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112538499 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097030212 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091426941 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120566363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094488948 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09163388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095173617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105457266 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092157247 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087684839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10548746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090666353 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090160124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11485849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091186926 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091039448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091762298 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.113832987 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094796059 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095810105 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.108483085 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094063823 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097775069 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093740108 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.115249473 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088678041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091859213 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106877222 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093552617 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090475843 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105342896 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088977161 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095543973 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092176326 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125371651 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097144211 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08922277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110345502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09133429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095899824 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111033669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101850873 seconds)
  done (took 7.817500154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119179994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102560669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113040703 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095408409 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09448672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092734092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117787188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093772065 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093646186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119899363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092930284 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093378349 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111426682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095398206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093276669 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112716068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099877353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090760511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.109114003 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094715028 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09067866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09483516 seconds)
  done (took 3.015870396 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.24071861 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100958306 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142203812 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124010951 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109893628 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125274828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099793074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099777973 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117178343 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103858254 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099074927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115588029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110528191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117503685 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102488022 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100842404 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113190533 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101139355 seconds)
  done (took 2.919639491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108078245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095428146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161280855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094095993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092350417 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113123848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098353587 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114060334 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113632168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093190412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099869228 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112202521 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094401629 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0923858 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114446346 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097633362 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096008677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114960697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104945694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101964932 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.120965631 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103359314 seconds)
  done (took 3.132369385 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109543921 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097019234 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133678775 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10090577 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096500254 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112380583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101449746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093083302 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119871559 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096971169 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093104672 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091475046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126491858 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093165203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098630968 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111642664 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093396998 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09180728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110654611 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092541992 seconds)
  done (took 2.860469577 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.203298197 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130620407 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109685144 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115809801 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129095746 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108819311 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136189796 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11072181 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108611073 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137103327 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11175539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108298099 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136329047 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114368754 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125697688 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117116787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135661015 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121970263 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109747473 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130040972 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124424676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110881091 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141469536 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114215794 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131258417 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113769531 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10901693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133925167 seconds)
  done (took 4.278323501 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095347792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095652065 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095282912 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113757937 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095223416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09453968 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093502237 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.115746158 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096049298 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090471817 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111554381 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092895732 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090932121 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09089662 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113170271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091662138 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090450498 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.1109777 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091568904 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091037606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090211583 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109153814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092757123 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090790448 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112067493 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093486245 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091759322 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090315433 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109770234 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090769365 seconds)
  done (took 3.732452239 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107093748 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101070112 seconds)
  done (took 1.010538701 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103445532 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106360562 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090563789 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110882895 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0985022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092907092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119196175 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098862421 seconds)
  done (took 1.624606352 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.172728013 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.196186525 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097257681 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125113052 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170788273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.18340028 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132398517 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117881935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092324534 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0842608 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185939892 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084073064 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11217425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08999999 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091624548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119071967 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093398979 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102489786 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118943327 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095611973 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097238767 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117266555 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095374307 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101259596 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106687309 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096006083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095018465 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122925953 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09062388 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094138877 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110324619 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093026108 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095650355 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.116703586 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094553031 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192124899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102133928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089389458 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113454432 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098214546 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126380265 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.11290916 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095002754 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09236592 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117638895 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099506246 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098981202 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112501169 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087073785 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088562198 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092179865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107378287 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092398219 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093743598 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112101197 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099738293 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094446047 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109676447 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091263833 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090265946 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.115870294 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094540897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098058083 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118862516 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098466649 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093590339 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110978849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094490816 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095036287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112298928 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09443668 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108250929 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112793135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099276567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097766752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112916961 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091787471 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099809806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111259349 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095264805 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096924246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140918966 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100810519 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08875805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108192238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10053082 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095930491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094291022 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.106914366 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101802868 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094392954 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114546253 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087205197 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090558849 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109601505 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097691595 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086106268 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113269529 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092531102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098579644 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115824811 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092741877 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094453699 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117795379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100286859 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092300508 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.177666085 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090578806 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088849148 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.120122095 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103448504 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091071663 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11922722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095692063 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090729272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111096659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101292539 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093065549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115451083 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101143821 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09700479 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112636603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096502939 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092444478 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088642951 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117420111 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101005944 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094154396 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115105836 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094661259 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09390191 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112462325 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098498463 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091051747 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117492433 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091783392 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091963508 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.112046601 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098997053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093733566 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107484056 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093905549 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093859072 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111069689 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097199568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094056125 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107280527 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087000415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094336004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088002701 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114418626 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102579212 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089059827 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.116482865 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090740223 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099579728 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109301472 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100022005 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095364532 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118167244 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100416384 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085844055 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109259887 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095968944 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095651111 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10841929 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096020199 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093386844 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099925662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107734205 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098115001 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086007313 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110099141 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098196459 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093864035 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115156947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090532112 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132811833 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126794287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099619434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092168263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114279426 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098402929 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092395848 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116933741 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101185106 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099749172 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111661571 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098214916 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099454994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089549434 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11686998 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092509472 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096253184 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106852569 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096098084 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086164871 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.119981581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097042989 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098485804 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117846672 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096357151 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092160963 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122817154 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092087286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097446594 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087078811 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119150093 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103223068 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100357084 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121239947 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097018608 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091684799 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115701484 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103541743 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095868907 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11553184 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095637386 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087644427 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106770925 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102121205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097029627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109942105 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095524869 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098512625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096145889 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111367828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087861721 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098207255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119007978 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090802937 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093377197 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11035026 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093068036 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100981969 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107439967 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092201178 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09606524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.12090989 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09474133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094182401 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118143426 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101127902 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096307241 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117712167 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094673517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111827445 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092672952 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113487702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091428355 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097546062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107717346 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096702235 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094359407 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.119904273 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090990766 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098594534 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119600571 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100778429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093040367 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118423141 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101452574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1003244 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11344995 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102148581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090622304 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087162787 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111130387 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088132894 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09518815 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113223495 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101515896 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094648263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1186583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105581204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102097513 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.118912272 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107968137 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109194783 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.114101802 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094461846 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097424163 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11804263 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099163147 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097182527 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.12089133 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104016823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100001019 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116428053 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092887556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094186438 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100220418 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.112665621 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102320943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101934598 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127454968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095955708 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103815135 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.118367522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106099205 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090540046 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119162066 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097721609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093422889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112356113 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093514991 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090196853 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107251546 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092102269 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101073214 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11427507 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100740233 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093759404 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091695393 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.113972947 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091450052 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099330129 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112775351 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100947276 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095558019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10789504 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089162108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099595899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118000523 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103256089 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089539197 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.121088083 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105973166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099084292 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094326148 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126302782 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103958026 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100599539 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120576861 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088546183 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092290225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120151437 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096031954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097084822 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.117372785 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089334907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097937038 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121581736 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097448586 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093280378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109291711 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101473031 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100158153 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097680252 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.120263232 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096593874 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09554013 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111540018 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099026336 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101606554 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116301559 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102928487 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094614916 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120446425 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092770306 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101232746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116174672 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094040716 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088628036 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091956089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124240616 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.0902124 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098982017 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.124338747 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0957641 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093646552 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119631801 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09232711 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097488418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119983161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093822323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104692158 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095158993 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114647566 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099934734 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099676223 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109374731 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09471655 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093154207 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122353789 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094661636 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100017281 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116455426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100935121 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096301785 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120890138 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101874197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101209304 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089048408 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.125200351 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099077536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096208753 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112592367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094284283 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089677465 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114900307 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101861245 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09194683 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125447809 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103221538 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092573751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114407835 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102090941 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093484304 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123169752 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092859973 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097178728 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109290351 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100275626 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09400711 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100953774 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.1139306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09009954 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099321544 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120407841 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099849769 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096817986 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.124363978 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089704144 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088384761 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119368022 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095641924 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104677811 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117791775 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09495149 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093104832 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.118610697 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098568829 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10239553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090911338 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115603112 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096430432 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096242434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116763984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091143814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099842826 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117134111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099567151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093945741 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112678413 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.099084905 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101623852 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114418706 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095458751 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092648119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122869047 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.101108463 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094462713 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092220593 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.130659723 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102873632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128452844 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.100835758 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095790455 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092166126 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.121168696 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104442788 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094231018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118934287 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095163242 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100409778 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122751959 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090163407 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092338854 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128208768 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106225648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096546879 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.119729976 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095818941 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102881463 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124573124 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099382289 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090192369 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089695077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11646672 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090157465 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097196197 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122091429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095112466 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093137884 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120652658 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101672954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097734347 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119167723 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09175299 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103249411 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092791803 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120400116 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089943708 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089026864 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120603587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102006544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094322037 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117236313 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097692355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097509468 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111198874 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094351826 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099935011 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120824111 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103149936 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094989074 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093947572 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.122961467 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107268674 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094818286 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119094263 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104006826 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102868521 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119474335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096411142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099103723 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.126224995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101892445 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104616214 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.116183828 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09589112 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10247701 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.126765076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107971932 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094465293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.112969621 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102612729 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09343758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111898214 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100954465 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102489409 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123162565 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098295692 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092915948 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104885629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122967965 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095657633 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114589641 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.097614558 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10117253 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093006497 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.122845688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092956844 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102278633 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125088621 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104267041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111018701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.118259295 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110844634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100758588 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126399595 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101380491 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090920535 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090132108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120490438 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103108864 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101238421 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.12300539 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100182002 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100856057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120279824 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097546678 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093428193 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123940281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103846665 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096607983 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09673937 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.120376149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09693776 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096969201 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.125229195 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103790248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097526091 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128891552 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102301699 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094233351 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1157314 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09739178 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098692986 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119841443 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101645208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094631032 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112534195 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109260457 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103534298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095411302 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127482633 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104091753 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094762188 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12074615 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107906923 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103968599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.12669136 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100697543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098700635 seconds)
  done (took 62.897694515 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155109792 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107558278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125418787 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099699497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115172441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120382466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097863826 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099673274 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122535384 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109193101 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097404053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117378573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114104977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138744418 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118032218 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106836266 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118410656 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099760741 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098545653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120307034 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114828674 seconds)
  done (took 3.253374835 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.123539339 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112251136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130996354 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112731892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104614619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131326778 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109557673 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131385814 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112668211 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106024066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134064873 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109870818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12637375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107664052 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105909579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129077598 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112057857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105197561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133343789 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11040185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12916251 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109763185 seconds)
  done (took 3.444081684 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.137573074 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106542069 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098685907 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.128010107 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10329923 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09797679 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124389278 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100039026 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107748999 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116399431 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092803278 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095510583 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100160954 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124100899 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095509643 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098446599 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.13025509 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103012367 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102925828 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120374914 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093071576 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098936037 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098188194 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113929503 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106532594 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104589452 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119198746 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102921275 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089340702 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10114362 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.123608524 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092851178 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09023438 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111696547 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090853497 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102560732 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124707229 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10127008 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099419169 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089864729 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121608628 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103397706 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089855563 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121152824 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100201305 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092189919 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101194368 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.122686821 seconds)
  done (took 5.948905442 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.381500503 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166252753 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103709209 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137552366 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135276924 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108050578 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10114784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13799371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101053142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124707197 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11453745 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112512984 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125960703 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105928237 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126671931 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104529975 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103636868 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100707549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128649833 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101897452 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104966325 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111252602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132750487 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10500568 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103155697 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124305131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105818004 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110343534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128261795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105390702 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126382237 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113725751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10200793 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120924383 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104030982 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114563701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123348229 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103740918 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10084746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12390509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105234214 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104360031 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13618599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104396566 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104534966 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12425606 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100539355 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111033859 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125793616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108334325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133278432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106116066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102613584 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125725477 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113227142 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102242865 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122264729 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106184466 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110278182 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1229802 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106340898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112580696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124906372 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108924211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132545097 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106331269 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104818488 seconds)
  done (took 9.075585441 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141242044 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106424657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136936665 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115478571 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105578605 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128155279 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10649673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105766053 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13089143 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112418829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126653081 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228464048 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127740999 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113055297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129123122 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107668939 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106497188 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129095267 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108893105 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106719084 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128681513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115580205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106963914 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13665076 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118864702 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124313766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107891529 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106078979 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136221023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107822791 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117497542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129562766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10703735 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13453411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121257826 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106806559 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123935816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107380671 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107603391 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128332434 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103933022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115385524 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129867334 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104361708 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107057758 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129012829 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114671396 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13930756 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1126773 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112063731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129927632 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115405619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12727442 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108690602 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115373755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14595647 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116358435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136331733 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108184854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116077171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137402284 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122620758 seconds)
  done (took 8.36355575 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110018515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100848622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098980872 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12066461 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101575317 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100058923 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100055331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121311426 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100503954 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100146007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122110196 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100477721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100043573 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098927986 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121201188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100134008 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099299496 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124110404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103304911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100164312 seconds)
  done (took 2.995990162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116947554 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117286639 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124193604 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111026648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102132271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128301875 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103386675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101552329 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102101797 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125552067 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110045002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130716597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103768043 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108794179 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.135818736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110582157 seconds)
  done (took 2.705550533 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.129224741 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119177206 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.21149879 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104423947 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126027736 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110688748 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102315486 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127414434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101038644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107253203 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128803088 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106156604 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103548279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.124146167 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104374373 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105269956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100804961 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130842544 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102483092 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215911864 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106885311 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104247221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126648135 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106287485 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104300727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.13160499 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108372357 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101406205 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127239411 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103805649 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104024703 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133019243 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102248224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106481514 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.125820689 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104891647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102911103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124003045 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105952304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10222172 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126532893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105588768 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103016093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10485763 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123372613 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103612816 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100677297 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131673166 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104573167 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104120369 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124638278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10799882 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107288051 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132807726 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110398313 seconds)
  done (took 7.262791477 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.123679645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103496388 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135119648 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102676363 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104470951 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10402968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128045602 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104607638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103524326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125016089 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106051972 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104853372 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126986489 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105492365 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103870913 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126368179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10249275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105354465 seconds)
  done (took 2.895193232 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115202458 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102834231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107158191 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126598757 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103717718 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10337049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124314828 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102741627 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102279075 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124773496 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104123953 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103193037 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102073972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12432005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103861336 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103796703 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125621308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10298747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10309425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121937594 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103787218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102200475 seconds)
  done (took 3.296097083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120106612 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213714096 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10890192 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224953301 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099515003 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12103921 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110149765 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100700519 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139617634 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099886343 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099053777 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122772055 seconds)
  done (took 2.442627052 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138388279 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14176767 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125427034 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105595024 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112264593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131181737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107909854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107112479 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138485978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120205429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132059806 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116759679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115427129 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138610957 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11270468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13728709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110014751 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108303614 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12758058 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123237314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108217363 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139026925 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108401983 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130184756 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109309866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116431726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140585888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120311865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107433784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137798697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112075641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131602861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116528344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119098287 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128593349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116008629 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129898339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125280949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112027988 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139968824 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104910711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112313821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13827661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11307213 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138148402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109341383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113712942 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13042555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108564411 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152554287 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113597087 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115871052 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135368657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116820024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138397 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128699883 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142609078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118389903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113263511 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143424728 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116350307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135819571 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116293603 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142070833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11705382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115965943 seconds)
  done (took 9.0138999 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147803566 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104395371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13133547 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120972271 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138560563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110148304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108080291 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130421712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109132099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105141255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173466398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110218646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13875422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118080162 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107793665 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131588703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109274054 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117342597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129694112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129012275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1316407 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117445736 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116395069 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141135568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118654921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134355436 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108974262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109766851 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133406288 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109737377 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113130176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131855885 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117250711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126862554 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120899379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1089345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13030137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115355858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109102487 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137955156 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117864726 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147106919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109356215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108582775 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142924269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109470026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109515107 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132622653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108945396 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104866088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143273969 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12006818 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143332158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117655135 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131702677 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112496275 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108958032 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130880522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110057012 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113960061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141516216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109795037 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152200614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109967828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10934114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143024996 seconds)
  done (took 8.985418095 seconds)
done (took 170.73232172 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.182199808 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215159213 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198260842 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157533926 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094702568 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152406845 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128667565 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199764636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095351071 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094769834 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094792389 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121536703 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162900465 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094159422 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119820386 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097489066 seconds)
  done (took 3.091926945 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186840932 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332999609 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111958042 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125918134 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102862735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100076236 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124443727 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101707381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099475229 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130698349 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101041169 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095758084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132025437 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097285031 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099270209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124893075 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10872859 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099979162 seconds)
  done (took 3.17299776 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12570556 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144909523 seconds)
  done (took 1.169557388 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.142485079 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217498012 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271084539 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172520238 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12138006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141112606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152631818 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133299555 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182213001 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13661049 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113069924 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098086598 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14929951 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106329586 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138118623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09940255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127423166 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137346975 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114516772 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103157921 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14673239 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104156308 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105397233 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137474592 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170559009 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136030473 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104333693 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103373551 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125900101 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.1156938 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106780739 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139714648 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112092183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185860553 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102758313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179358282 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12886842 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102253224 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113297661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121834355 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104785266 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104733204 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137958265 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098672583 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103331509 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132455048 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104933239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103527067 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132571177 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107975319 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132692753 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107761832 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175979316 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108323644 seconds)
  done (took 7.95419802 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.859376151 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141725785 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100397998 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.000731943 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14783183 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114372179 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.845942781 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14605393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250565621 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.861054155 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115265808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108948308 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262698905 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249467738 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.225521174 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351786274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701913065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113369995 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127619833 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164821105 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108508768 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147679619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120788539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.418922667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101108521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099571801 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132458065 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108233532 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178428866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100419536 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134186658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172958297 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283094103 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209563593 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123282685 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102892662 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099478891 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187297552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273714204 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220951789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183332574 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098144016 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100142916 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131207932 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121324655 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096816068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179818833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192291833 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189391065 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106289774 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109099775 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136617714 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106589615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178480118 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098450848 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353668376 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375303801 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103008208 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108728351 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136711256 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266943559 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101703721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237350154 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150545039 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219802522 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100101564 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808296986 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183554846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099920355 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105061674 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133478109 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107063302 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128827491 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15996634 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398003178 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112957024 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104127731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125021869 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24663337 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102249446 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100122344 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184791821 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102098266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136162178 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114005558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133547341 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168257804 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268860229 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111530466 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134354445 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106365324 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137119916 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10542032 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23573184 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236602368 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174118851 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212509458 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132212023 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.156650634 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186608545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129293023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168808191 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131452923 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113583459 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106716116 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253870849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137386363 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10086235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133147744 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114249036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163209481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107480734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108784611 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186878592 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46037387 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191387813 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097361911 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104279489 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135427162 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18010078 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109901734 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266329328 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110292087 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185942521 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10814946 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.124984782 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110340586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180764161 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10822837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135126196 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109686021 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109546184 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272959516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223514275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131237949 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243176088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16598219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127408641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169497441 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134112791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163274658 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134201487 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107996658 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101386704 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81616357 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117007785 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109108988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128332148 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181771994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122847889 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104195303 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100419847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097185182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804183774 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130351699 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099154874 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102775887 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128984446 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109648521 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107983299 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130367612 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177787599 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246503389 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109584438 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131932089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101960869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179701958 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102654661 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100542114 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12355152 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103247363 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110050209 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129358633 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105659889 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188228545 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1532131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252687216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538362603 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10199131 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100993581 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240025489 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126375854 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322656264 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109357269 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236088443 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184323493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098173651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381456125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16224985 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203539036 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104433887 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190139885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098178612 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134999678 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154978383 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125434787 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108677353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178010281 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112754994 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13357668 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199843917 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101115411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250443938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099211161 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190051944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102185801 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132097336 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320237361 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101429683 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114528348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179154542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12859568 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10322418 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60705368 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101771779 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112976877 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131235512 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233186587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185909349 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109913356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133408246 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111150354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179766452 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209490202 seconds)
  done (took 46.011035544 seconds)
done (took 62.29320032 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282112444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179177521 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.275811613 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181261602 seconds)
  done (took 1.91014389 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.279255408 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163694677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.258520339 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098427129 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.26562021 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098556898 seconds)
  done (took 2.087736824 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.186301998 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175332538 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149928365 seconds)
  done (took 1.439589676 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204936039 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.220943783 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.344687212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237851638 seconds)
  done (took 2.023544872 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.304385657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119117448 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131623029 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.243100828 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254392316 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21531487 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125465562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180756776 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135970404 seconds)
  done (took 2.683709813 seconds)
done (took 11.071864623 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.315106508 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.259650663 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.147717589 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132119579 seconds)
    (5/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.436567113 seconds)
    (6/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.14719184 seconds)
    (7/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.195293569 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.237073078 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110691687 seconds)
    (10/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.212993449 seconds)
    (11/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.315960379 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.233461223 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.397689129 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.385256091 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.356151741 seconds)
    (16/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132770348 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079883293 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.236888241 seconds)
    (19/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157243182 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10131167 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.156574967 seconds)
    (22/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.265677596 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.448985862 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.313300606 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139580341 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110765655 seconds)
    (27/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.205974077 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125639083 seconds)
    (29/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.203767952 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.205775683 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133717014 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.159694299 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.240220405 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.355658364 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087080654 seconds)
    (36/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191906364 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115070622 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119414928 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.300927595 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.139323616 seconds)
    (41/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.105229463 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108386236 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169943917 seconds)
    (44/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090209535 seconds)
    (45/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.171155807 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087790819 seconds)
    (47/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.143048008 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229951567 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106320508 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.280805283 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111912561 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101055685 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186532403 seconds)
    (54/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112078109 seconds)
    (55/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.151604371 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.240448941 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182090742 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212779233 seconds)
    (59/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111768104 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.23529504 seconds)
    (61/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.15114056 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163675711 seconds)
    (63/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.105512427 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087968177 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120541096 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.114281442 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113692995 seconds)
    (68/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08154756 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.309364393 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112160254 seconds)
    (71/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081534403 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.1418754 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.085027661 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.143807777 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083637975 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.22708198 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125723195 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.082365008 seconds)
    (79/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105764746 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.113487322 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145990055 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.096538143 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.147378306 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.113714893 seconds)
    (85/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110613664 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135460411 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.112113677 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12416487 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10688912 seconds)
    (90/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130367643 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108449672 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107125823 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12535417 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.112533075 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082214189 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170633944 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.110992135 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.140197109 seconds)
    (99/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08718122 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112739541 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126893922 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173439816 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110449796 seconds)
    (104/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111722028 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.151486012 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12838241 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128602445 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105252098 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104140917 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.084037194 seconds)
    (111/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.107608701 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088542885 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081520357 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081075251 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088290756 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.128208905 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.094164807 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110003694 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083626843 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.169249569 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10192204 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.275676812 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083333147 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10321999 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081256112 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225650817 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084160406 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103217143 seconds)
    (129/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.113839168 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113897354 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084335506 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087822991 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126198659 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081953376 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088421619 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087127408 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13509673 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126358291 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125615638 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.130876443 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112644306 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103679328 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127506742 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091706888 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110027852 seconds)
    (146/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.0867995 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124353054 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084665874 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083755567 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111495568 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128136061 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.149326019 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111434222 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080757819 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.111088737 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.14243213 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101426461 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088816509 seconds)
    (159/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.11418854 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108816798 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.139710414 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136388149 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105598153 seconds)
    (164/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.084041882 seconds)
    (165/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.082393388 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088414544 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.136718133 seconds)
    (168/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.086435656 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104876067 seconds)
    (170/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088628581 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130516241 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126912387 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084493654 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127279727 seconds)
    (175/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082155975 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124177362 seconds)
    (177/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088053339 seconds)
    (178/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088204568 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.108346567 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112522107 seconds)
    (181/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114618727 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128854533 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090073942 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.083066189 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.088545269 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.128425626 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08309879 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102664963 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105387297 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.108507806 seconds)
    (191/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08984234 seconds)
    (192/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103281812 seconds)
  done (took 28.00075018 seconds)
done (took 28.933212322 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233446876 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130035379 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111070213 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11049817 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233248041 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117643735 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150681924 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113678027 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118703296 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138283207 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102803865 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121516404 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13691266 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20117562 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139652174 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104265369 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10339087 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145146009 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123812527 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123972906 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23332037 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104864514 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146334231 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103539795 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235515602 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105512829 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109828601 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138287383 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122756687 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112565447 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137225938 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104706592 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.123215299 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.148546803 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10327189 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111630613 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12751072 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090727823 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112225272 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113155175 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148195687 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112606371 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111729733 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129707296 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113984601 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112178162 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128519635 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115036745 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101539531 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135897636 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106798463 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123261983 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136449007 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102899764 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101610672 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.128705769 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120139969 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103119466 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146043017 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104529176 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104478749 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102657976 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138833922 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103625165 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111353023 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.129082517 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113730466 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115013008 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135642447 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10632098 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102867025 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.134314125 seconds)
done (took 10.09416507 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114691975 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149124683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.23599465 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237635613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130966427 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147701656 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118376687 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127659844 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143588703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122856901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140618766 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162104611 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241817175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121817894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120968753 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142900938 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115933122 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111618842 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237629703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.151297051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132236934 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12011722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157689331 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120431885 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106183958 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157008846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111232983 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114776741 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131804063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125192798 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151570256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108924605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110795612 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150343251 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125912304 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117989199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144512918 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116596103 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107487949 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132210702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118175396 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12645683 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132634355 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120215125 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115350082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148454819 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114867763 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12056389 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133525938 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115957367 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108260342 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160068846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120223904 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123682271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14588878 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120539585 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121221333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145939651 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111581558 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121351083 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133161878 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107401417 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108509603 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1545171 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110430643 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119435539 seconds)
  done (took 9.838187146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134784507 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138033674 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142518867 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119682192 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112121221 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126434103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101903892 seconds)
  done (took 1.856192855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.11032327 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.24466572 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218076986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243014885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242033041 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255042131 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127860812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10281235 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166140101 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113634564 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24566593 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274177966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114507618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144027128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.221154823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129540329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221585239 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131258143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119140139 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.246300309 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120451736 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160731946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117174371 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103430483 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24002782 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105580885 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.291446077 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149864083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114285629 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116995447 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146153036 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182527588 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242309308 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115993374 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139272248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.247427447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.24166396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117750617 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257234118 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108163059 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242416303 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117754626 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146626824 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119436041 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119224489 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.232279628 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122382031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145520036 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117920466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253211111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114708494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244409875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114844438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.144146886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115365698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119682695 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.154257554 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121545191 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253014119 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121095073 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244849584 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245140205 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.216643535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24711376 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155594629 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.220329261 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.23238478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116406085 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140603572 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119890783 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248612919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117943258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142954515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.209373687 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14945885 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.24859653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.221563574 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142729927 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116608823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107554907 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142612435 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106434417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.237916452 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118683298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116817538 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150132658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11726496 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117811912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136507047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127443794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.1183528 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142122615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123926307 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143192088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120986993 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250939957 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115758657 seconds)
  done (took 17.126480322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114111629 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106773083 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110050173 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132564133 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105621204 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10581493 seconds)
  done (took 1.677744355 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151180727 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119222785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15416055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121573216 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170502958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250693963 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.25842371 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113649602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167151109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132300619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255276052 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254678119 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.251522533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124744432 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257735233 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123331104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262524508 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118824841 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155092702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118724952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120730108 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150331071 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118842272 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24371891 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119972309 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12099746 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141115438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129095388 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127447351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140743113 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123747786 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144746702 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113785861 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113964205 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.256880181 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110786847 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142838226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122690481 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122467653 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148147205 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257592681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118010312 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125672811 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147901573 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116129073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111648486 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149246782 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132387538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258222713 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141006312 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148746187 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121695329 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121576664 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148822244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112887956 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114067824 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147709275 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.234028237 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150716118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111753809 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147420963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121420456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11433027 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.15032811 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122239054 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121873844 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135226375 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122632499 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117032731 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14643065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124385238 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121205821 seconds)
  done (took 11.891906559 seconds)
done (took 43.358801175 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.557272582 seconds)
  done (took 2.556233734 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.954548991 seconds)
  done (took 1.957743378 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.532052093 seconds)
  done (took 19.566034673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.447643838 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476639581 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.107361786 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148530405 seconds)
  done (took 3.181796897 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.760886027 seconds)
  done (took 1.789261746 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326891573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234944125 seconds)
  done (took 1.571075088 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.719102908 seconds)
  done (took 1.740063265 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.535268495 seconds)
  done (took 2.539621871 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295836562 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241742472 seconds)
  done (took 1.559984916 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.652339447 seconds)
  done (took 1.672667162 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.315223136 seconds)
  done (took 20.344051208 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25072822 seconds)
  done (took 1.280455009 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291270261 seconds)
  done (took 1.317767561 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.642571543 seconds)
  done (took 4.670497496 seconds)
done (took 66.764413515 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122225796 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120083258 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119261303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14343069 seconds)
  done (took 1.519398051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131459906 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119347418 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149152612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119797687 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127152388 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144466682 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120330691 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12267701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117614598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147493245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120522931 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119415523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148078799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118475741 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116737814 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148344898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124207122 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11952367 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146885617 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120571099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119869349 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148355593 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123036516 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122645294 seconds)
  done (took 4.123096923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122550647 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110645713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111126473 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133875294 seconds)
  done (took 1.512175437 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133971039 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132374129 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154875433 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126869112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13344728 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157079989 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118693346 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115005201 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144003849 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128615988 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136129623 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158791215 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131779528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120573545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154780175 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114775855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119262215 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15766829 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126269105 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153641428 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120509406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126221608 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149933005 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129076131 seconds)
  done (took 4.274437809 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198370992 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130614024 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.170755554 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1645237 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17311123 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117503133 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14059941 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150933734 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12600812 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.147784287 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12223885 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164729346 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150265054 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121233052 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120353979 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151140158 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132332811 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149632272 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.160876795 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122854924 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151850274 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130646153 seconds)
  done (took 4.232884533 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127900159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11103631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131228959 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111063097 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122523525 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138067633 seconds)
  done (took 1.78028768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115560494 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105032077 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104086796 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129391211 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110157935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10450453 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128235966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105693437 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105033167 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10473623 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130855795 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103664985 seconds)
  done (took 2.376855734 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.338337944 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110401054 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136637577 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112105762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115573543 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107367596 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149407677 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109285204 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268066861 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104695514 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133591863 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19300729 seconds)
  done (took 2.916904491 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21918019 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147192963 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26230463 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.43211978 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170085582 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188330504 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285795255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191221334 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20905198 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139629506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217698914 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155557202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185430032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184913191 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169738874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157816114 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194915793 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203620166 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172674913 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238435515 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157275436 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200363582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210732722 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152087321 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136602781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19328566 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119548974 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156763087 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170174042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193967519 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20570217 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148988644 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168011497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196485254 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277393127 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207874348 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268295885 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134091631 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198873093 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187590198 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262998919 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168398722 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223291418 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15272036 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129352115 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21215634 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182894862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185703698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1571592 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143328957 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213932057 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174892253 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203197629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164270796 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305644111 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161414658 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142929332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209215822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185523863 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22635018 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203871892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123769168 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202163908 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215532258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210863738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168899696 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167767817 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154796934 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164986394 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233041192 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217140644 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157231257 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240204965 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160231241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16932118 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197211702 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155897435 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230272123 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195313905 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120250312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179173204 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13637147 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127237232 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223627734 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122183918 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242174496 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13161295 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.348091793 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20941972 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155818477 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191277015 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15741946 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189227256 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144233674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13278822 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143087379 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189302784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157549245 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154323163 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156580403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16203033 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128776557 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150224569 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149264154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165173436 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160570024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165965462 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197368353 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131748629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202556106 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148663052 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18524471 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169723414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215837704 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1283496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16105852 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241166596 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165628211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160725615 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175115918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225340883 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147614653 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163529328 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167064336 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217803026 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167646522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196304633 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166853077 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136388097 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171254408 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16855521 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189290421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159078301 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154682824 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166707482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22018774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126895281 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165301002 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177598349 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161360748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12375435 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13427994 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163451812 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139421699 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172292316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136082159 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181039144 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163159563 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189071052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158541896 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161030184 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173533504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158567849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165199042 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175282147 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119671802 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20448335 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191493146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159410906 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177911351 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193746344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210660854 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172027913 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156940372 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179033146 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15573895 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121198832 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190747778 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169677514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193174102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188782197 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209436207 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195273261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163392409 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176496411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19750073 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179554127 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184446257 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.146172423 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196969138 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17031478 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149493786 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125509339 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127049479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164250204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131246534 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162778157 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185523378 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19428116 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205472643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163387841 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164589585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186989382 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152909747 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16198584 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201397911 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13662754 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21822648 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184976573 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205418391 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167327083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164859124 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119196128 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152705126 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134833967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192063561 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134776609 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162195476 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143572622 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215812131 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175869348 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176289108 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21930677 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16792464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226194999 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120340973 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192788291 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168405142 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193036492 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18469124 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158212944 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163322524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215416058 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860701 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218063721 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163466605 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205125842 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224212873 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160581792 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158795608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148144417 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187141411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138485949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190492082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146235304 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13045137 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18170847 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135603637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169179067 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216707271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141873872 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208905861 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157879835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201794449 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125075499 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169779393 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170421148 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173779387 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10918455 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199666512 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194619955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177418956 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156510532 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201648828 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130647842 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344939261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187736921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210449545 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164067022 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140763041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195428613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159628448 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192956242 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180669633 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1706991 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202745391 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197093915 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141600762 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16017268 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14993453 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18104865 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.144759895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181377357 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163217118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170204552 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217550805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137396414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165378442 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20165627 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144978899 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174860888 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137328545 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249287631 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192858093 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174245488 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.188957811 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165833487 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208860597 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122797431 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155435353 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134041575 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20848462 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129625812 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202690954 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170776808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211586636 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200399941 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159936311 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167971368 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128189785 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189517106 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151816408 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212113905 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136443618 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165335836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190753827 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160036493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131252243 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187351995 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290500881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173220215 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173571593 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138660693 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28271364 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156552482 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13446179 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188425494 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171432745 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161247289 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183087102 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171766838 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165787841 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1611508 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165457328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20769491 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184775901 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198504075 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205371954 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147446162 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191023512 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163810001 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202820512 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143578817 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174254893 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162718061 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219973987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176285879 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161341521 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166978823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194165119 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166401741 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206459011 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136602043 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20856786 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12744501 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194036325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138160398 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154591598 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159919908 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193807557 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130412893 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206161413 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194524709 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13067873 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127310776 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177005756 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16248775 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169425823 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130026538 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21822551 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129509988 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207408765 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234625754 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129603914 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162469556 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175539305 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131539671 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168775966 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142214265 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130501689 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.198056383 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182765697 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158988824 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176881054 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194650999 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193749594 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159306222 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171423865 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.268597539 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127205874 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216413258 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150377682 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22334312 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179981154 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173113807 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193774596 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148990134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19692207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148370847 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.263687022 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164621546 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19644595 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132885834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171804888 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13811427 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16297601 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153838325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193052776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144099188 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13424786 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196455157 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142528093 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177209438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140373169 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224171778 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149716525 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22025256 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212823677 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139879176 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199979606 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176847583 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156969843 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168181856 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203196679 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141110128 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182128057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133997815 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164810738 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206122571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.150578394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160701489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200879953 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166254243 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197297427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135614904 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204857447 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142159695 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200714791 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128622964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181526075 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166737804 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162643388 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128643193 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168190635 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190084555 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.187722567 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143100455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.17199525 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217507039 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123339787 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162009783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289041912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189224524 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222134052 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140865586 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134777667 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175936088 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157790208 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194346988 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166704296 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160064773 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129992789 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172229932 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157944002 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143592793 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19188731 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210892734 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16490673 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209912157 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136407639 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.308215332 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.65554243 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196391802 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12281371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128934026 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166766051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135226139 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14131165 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210308027 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235464405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15861189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176428305 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135776385 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153873541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130662663 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189098891 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153354901 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191356805 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148424745 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.106641423 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171067464 seconds)
  done (took 86.070491825 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167825941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152142114 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168420453 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221950745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197163114 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291585901 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230237413 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255843151 seconds)
  done (took 2.806202984 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125777666 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160294336 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142037745 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143856695 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110001079 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.469767652 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161342055 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12126918 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162167695 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151918691 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135654827 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569718655 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118714224 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14567714 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121849538 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135140393 seconds)
  done (took 4.090988197 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119316632 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.591063083 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.50525782 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28905551 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.27112164 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20702587 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.83189097 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205748708 seconds)
  done (took 13.141601666 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173381914 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159652094 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.453429751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308949677 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184991316 seconds)
  done (took 2.413657669 seconds)
done (took 132.276587115 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130857569 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124047127 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12309804 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155099001 seconds)
  done (took 1.650003733 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.203745326 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094306483 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09601706 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121858658 seconds)
  done (took 1.645713236 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.479578929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093581073 seconds)
  done (took 1.732178807 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161945981 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138534675 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171839437 seconds)
  done (took 1.614643821 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143035811 seconds)
  done (took 1.277434433 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133746602 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130176323 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.272851292 seconds)
  done (took 1.672915301 seconds)
done (took 10.732840025 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126474789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41120761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432910993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134015912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712797696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426915567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030984274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17584457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17508214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138530891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131367107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690227105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.08385035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.361684474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.037731161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.387567849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.714192935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112563777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146787002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113646693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008682277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137242108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112831821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112535694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.739859394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421259846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110091408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.403498864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110169852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11431104 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427460263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111651907 seconds)
  done (took 17.477022306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119880001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167664154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146404503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113022819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115030658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140255282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122809932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122712037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206211982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110313941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160792938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11113952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115655101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139539459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135407605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111645716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142252372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114145075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118832963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140094886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131954285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110114481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140294832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114918687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110769553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161884837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111611418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124722393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139172328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115891727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116460543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140049033 seconds)
  done (took 5.311738013 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164864397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176435308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148641512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147388578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187920541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113965611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222949132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14948822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20444647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112332957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131717957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138808943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152488872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1125853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163925046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112392778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114082072 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14224725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119893172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113338009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160476768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110604207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113677279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141614243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11193721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135211572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139611492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124790937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139593752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116749163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117197567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139921392 seconds)
  done (took 5.619042485 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133222777 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126571689 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1342256 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164835903 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121522435 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127550892 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157033035 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121763958 seconds)
  done (took 2.227329645 seconds)
done (took 31.778230468 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142811227 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131439736 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135198296 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155089604 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.257411782 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120064274 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129721061 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11770315 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156960126 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132199888 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11082069 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151327789 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132138005 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120335281 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.255688441 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126213607 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26326631 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.257587368 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119226927 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125337809 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150840487 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.261213673 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124632665 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11932061 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.254368183 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115532877 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252201195 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122336143 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120990175 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144902947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.228383726 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.155365218 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118487107 seconds)
  done (took 6.439598996 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.246952412 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153388978 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122132801 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120993452 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121444675 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150401422 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246174296 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151301461 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11987463 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119858455 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150739382 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22799507 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158000915 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116158714 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123072317 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114791714 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278587208 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.153274388 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.113840051 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096839902 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115954376 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150616162 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.26059758 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14835006 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121967888 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120749036 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152347592 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12723222 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12250812 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122137899 seconds)
  done (took 5.686543811 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133881606 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134430756 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166301195 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187801242 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149042753 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164402288 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140195001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136059612 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172619587 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114971938 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129632108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181825536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131608202 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124538859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143567333 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134237675 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137652313 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145703588 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123035487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132446544 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165473107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133475435 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139056346 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153443676 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113679277 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12202835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154380051 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125180806 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122284633 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158785517 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117636185 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117795239 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145785688 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151376777 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115695116 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159201054 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142216973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126745379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159419865 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14649705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117518039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147891188 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141595782 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170487101 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146639601 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129311334 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125422136 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15856537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113074841 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132589766 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1878115 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118487781 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135888455 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143470362 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113485151 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122376926 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144581149 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118217622 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128804493 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147117532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141180358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121664063 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15410062 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117939897 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125281509 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113399597 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143566788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119561596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141136625 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151440249 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151708865 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113652016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.156348295 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127285652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124824117 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156341408 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114258499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124735286 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154687512 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121187992 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126681499 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147375163 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119916292 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132412618 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165079764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130024648 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126390993 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157328845 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119009501 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116474773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160219773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117202105 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120892946 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126729435 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145767595 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118529594 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127406854 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155787019 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11293239 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139041876 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149064705 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114893353 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140683245 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147679706 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121595821 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124474216 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186542494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119662514 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126494242 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158575054 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115500599 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121486733 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146236274 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115321725 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132947978 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129128708 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152856581 seconds)
  done (took 17.203861409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.362681039 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.344900442 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188485105 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430569212 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129314335 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274493281 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343331489 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346320251 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114802604 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180814724 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176808866 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313511049 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147731777 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144546378 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346724447 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404053937 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178727113 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151736615 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181200375 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130013273 seconds)
  done (took 6.057645671 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141962845 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150979634 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169489352 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145669285 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125853965 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160146002 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115624449 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135285569 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155360086 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125909265 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118234178 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161678858 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127426521 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131379861 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160437986 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154597343 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122959502 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.15044046 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139371367 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119701773 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135752832 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141812711 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124413323 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168271407 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134564026 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126340999 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144228412 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120905799 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122330331 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154201326 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120553034 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134114048 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151410569 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109291056 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126399368 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.16012901 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12280197 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117513103 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11996602 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149559146 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13004314 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126980191 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153079941 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104371288 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135793568 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115906959 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158081129 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128407943 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109200657 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163043433 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128645466 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12953556 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15077947 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138029722 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12148444 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161255064 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12741206 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128691617 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149449118 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115029067 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114028438 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118665424 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154611377 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129398404 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126417238 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165098355 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131889601 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114628754 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.148988113 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120142584 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119441595 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159733791 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136051169 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123679506 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151514043 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128920465 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122949027 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098257129 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154563752 seconds)
  done (took 11.878621451 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148545195 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128385237 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.162270828 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.152247293 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126910158 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.150690108 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125567622 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136114839 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128882775 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163620157 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130689822 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128475439 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167344154 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12490635 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122803162 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16213696 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128369041 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.183034112 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135810849 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143429608 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160297047 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122316452 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12761728 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156380107 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146674713 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125463458 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173170784 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128288219 seconds)
  done (took 5.170345616 seconds)
done (took 53.585834403 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.320590513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.508230557 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.276057872 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.278360292 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.328635775 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.29129906 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.277260938 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.279452203 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.829930559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.249101324 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.279309326 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.279676046 seconds)
done (took 29.374805544 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.368700565 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.77995114 seconds)
    (2/2) benchmarking "String"...
    done (took 1.554261439 seconds)
  done (took 4.501625647 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.281912502 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.270765019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.49610043 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.269436654 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.276061143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.269786164 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.279029169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.271387136 seconds)
  done (took 16.299493184 seconds)
done (took 26.620502524 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.319392581 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.457425319 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.545415625 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.261972116 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.2699923 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.286678694 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.272501853 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.30700036 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.280753749 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.255968246 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.704716636 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.529006588 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.280023072 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.639552583 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.247094293 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.296753317 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.281883337 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.490918943 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273768027 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.30431601 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.247673847 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.257290864 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.27373865 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.279423462 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.281733258 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.270405889 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.298794535 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.266910594 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.450569909 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.301139546 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.307559047 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.267752735 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.297618789 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.278584439 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.272066062 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.277018639 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.458194714 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.283296264 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.254381206 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.282290748 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.462052924 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.291272112 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.276485542 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.280531589 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.269342716 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.304245009 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.253941245 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.383658418 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.291097242 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.275252938 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.288072305 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.656545595 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.271997036 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.28289927 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.283834796 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.489629108 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.273133595 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.358926864 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.300394878 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.287182326 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.27620671 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.269406133 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.292134193 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.282921596 seconds)
  done (took 148.079402602 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.274380503 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.275509196 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275401477 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.27581358 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.274660602 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.276206763 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.275010648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273968924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.273255566 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.302643117 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.276032954 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.276145038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.276536768 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.278728341 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.282288112 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296086431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.274965989 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.292697386 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.285486236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.277151266 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.277974633 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.274735579 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.288545376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.27052202 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.277024657 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.359544039 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.317926549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.291403672 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.288758627 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.276923168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.322272412 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.278091316 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927986733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.124693681 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.285311285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.311615169 seconds)
  done (took 82.937082248 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.276536808 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.278166471 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279683639 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310980394 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.27770934 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.896992585 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89682307 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.005250526 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.535455614 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.75660791 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.603926146 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.277450492 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275854956 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374327134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.283892099 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.27698327 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.293637556 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.303755407 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278862075 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277345793 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276388179 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899830976 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289998097 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.454270763 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.288906108 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312668775 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.67600935 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.286063331 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279201518 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312320138 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.616253455 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.326366319 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27412416 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.702424695 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.938493772 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.395606825 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276774323 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313359902 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278072062 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.568760689 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281285956 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.280395905 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.282185828 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994586168 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.279388299 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899095877 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279450083 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.286272579 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.280047551 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279405068 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.599308238 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.056587359 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.280057854 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.281359247 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.280840774 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278743784 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278690761 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.313173235 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.592255831 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.376555764 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.279823929 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.285897311 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319145553 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.27968455 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28243654 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.48756045 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276773788 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.634123343 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.335628393 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.421557226 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.903458906 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.281843705 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383354261 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401054905 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.277678905 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279900561 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.281730459 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.284246494 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.398328417 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279892258 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.282899915 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.758736062 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.459069174 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.293932807 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.786742007 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.381719689 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.27556726 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.716327583 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.28195429 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.283346196 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.107294769 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383375371 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.278528713 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.284005777 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280178465 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.759960015 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905564109 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.559016962 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.282135657 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.960833612 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.281214013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.168336894 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.867705597 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.026428801 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.284053305 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400092287 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.461913848 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.294109991 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280387633 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.786296512 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.28024538 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.341228226 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.275589631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.68813722 seconds)
  done (took 386.313526084 seconds)
done (took 618.500521219 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.114599894 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.06868915 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.225006472 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.079904157 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.065959982 seconds)
  done (took 11.727419182 seconds)
done (took 12.905890328 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489182953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488153557 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352544871 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488900455 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316988939 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505652747 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472250719 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.306590182 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400094318 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367456566 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404076657 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339594805 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316398582 seconds)
  done (took 19.424460105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.58400602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.294415123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356617677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571079039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330499647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.581046931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.628645598 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294693127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443446692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30720384 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305638198 seconds)
  done (took 18.879411887 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580751882 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.295045841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34779618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565704856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327534473 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574699004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629433057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.295491245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455186706 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305562569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303493932 seconds)
  done (took 18.859311052 seconds)
done (took 58.34549447 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.326801032 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383094715 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.321286644 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.30833974 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303450926 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302031631 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305791474 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302720027 seconds)
  done (took 11.731641735 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.301305618 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.30018402 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.301836669 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.300077788 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301425367 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.301547799 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.301473064 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.30110177 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.300388685 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301584099 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.298755226 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.301863264 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.300310669 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.30059407 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.303307359 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302368592 seconds)
  done (took 21.999130005 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.303923239 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.300955268 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.301798029 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301530178 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302389125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.301782777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.305226274 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.301468794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.301645373 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.30206631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.302453031 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300505219 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.300669297 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303403853 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.303388274 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.303785596 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30293789 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.302733828 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.309480314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30284021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.301029222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.301746018 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.302917505 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.302583638 seconds)
  done (took 32.444941715 seconds)
done (took 67.357420991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.297733315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.291959595 seconds)
  done (took 5.770077973 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.365675515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.364694547 seconds)
  done (took 3.914020007 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.308796627 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.305956051 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.305653265 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303220419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.304998473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.301499803 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304179398 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.302909374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.301697338 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.299753046 seconds)
  done (took 14.222082254 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.303249446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.302719989 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303758745 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.303079479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.30480531 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.302362219 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.303583689 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.303474342 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.304966126 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.301606126 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304313728 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305089763 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.305781558 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303689697 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.305872681 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.304597556 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.305730247 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.302873607 seconds)
  done (took 24.652626916 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.319590324 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.327127143 seconds)
  done (took 3.830190595 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.447986251 seconds)
    (2/7) benchmarking "second"...
    done (took 1.347769392 seconds)
    (3/7) benchmarking "month"...
    done (took 1.423149726 seconds)
    (4/7) benchmarking "year"...
    done (took 1.415092515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.346661293 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.328032143 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.348722189 seconds)
  done (took 10.842738998 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297333636 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.589131225 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.77238037 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.457757503 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.28352427 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.307984768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.273068843 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.305441524 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.310670715 seconds)
  done (took 14.783905739 seconds)
done (took 79.199028015 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.293599385 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.361804693 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.310491026 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.317885663 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.604179455 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.338646078 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.296706451 seconds)
done (took 16.711154105 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.289699864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286325547 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.287169778 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.308123702 seconds)
  done (took 10.356831195 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.294941997 seconds)
    (2/2) benchmarking "read"...
    done (took 1.58477109 seconds)
  done (took 5.066038407 seconds)
done (took 16.616172653 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3096005 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305012628 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.30508971 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.308580553 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.30886067 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.30698351 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.311492837 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.307893005 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.307538761 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.306763686 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.31034556 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308582424 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309060193 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309403436 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.311000544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308510013 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.30732727 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.309166399 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308456547 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308365324 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.30887854 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310880285 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.308340585 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.310061879 seconds)
  done (took 32.589644523 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.311203403 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.308884993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.312985052 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.310649095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.308872634 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.311673191 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.31267109 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.309822684 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.309588411 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.314603676 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312068566 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.311930475 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.310823106 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.311620077 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312076046 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.309796074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.312144928 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310922153 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310448157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.31038785 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.312530363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312900937 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.312064368 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311204749 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.312170804 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314190497 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.313767398 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.313721908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312080711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.310795206 seconds)
  done (took 40.537184922 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.3185124 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.317468776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.312130681 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.309939402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.310897576 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.310448779 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.3100078 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.310146167 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.314777358 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.312224651 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.310217636 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.313723397 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.310567227 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.31309221 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.312824283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.312728466 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.31310972 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.31204897 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.313037464 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.314549269 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.314277781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.312507534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.314962347 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313238285 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.315296317 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.314716036 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.312470448 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.313151929 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.314012097 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.313257123 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312133731 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.314754785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.314841617 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.314179934 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314181278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.313214449 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.319400909 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.318464336 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.317202363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.31627106 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.314364202 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.311909671 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.316445725 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.31472113 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.316678185 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.316362222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.32071569 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.315335031 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.315791435 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.315617615 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.315778033 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.314903336 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.313722248 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.314738514 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.31151012 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.313194245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.31127612 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.315545136 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.315842621 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.313790243 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.315849383 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.315808314 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.315018601 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.312426285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.313010836 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.314218786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.313801282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.314518766 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.312516777 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.314713154 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.315385879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.314336154 seconds)
  done (took 95.806882389 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313757696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315186433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313339613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.31639704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318222917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.315262033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315522455 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316455208 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313649478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.318400943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315267239 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3168685 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314969425 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316278905 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313895353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315937247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.315949379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317096569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.315741543 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315980992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317431516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316662462 seconds)
  done (took 30.141160185 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319285632 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318923225 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.317589507 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319257291 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313524367 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316671452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.317295467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316900271 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313166406 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316141109 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316508647 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314761644 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315653884 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313922283 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315481785 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316967631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314867792 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317453374 seconds)
  done (took 24.888855633 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.314716563 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.314183481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.314573741 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.314594279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.314023467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314523668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315796555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317096817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.3147288 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.315380128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.317188839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31484858 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.315008145 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314245462 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314791875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315664289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.315855444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315804894 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316684518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315743657 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314893836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315104711 seconds)
  done (took 30.128916806 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313503679 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316558784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315182382 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316166848 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314610112 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.317409615 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.314724845 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.317211568 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.316608043 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.313796139 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314939668 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315961278 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.31697482 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314769923 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.314072922 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314595725 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314739905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316034779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315477398 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313907698 seconds)
  done (took 27.502894222 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319318804 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317958419 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315028986 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315800616 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316051656 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.317791161 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318130613 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317140099 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316812964 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.318915507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316311278 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319525993 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317139911 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317153286 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316396718 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316063849 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319321124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317329324 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316115145 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315493321 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318793424 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316811448 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316500228 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318149979 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.319455899 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.318725317 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319114927 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317707236 seconds)
  done (took 38.080289692 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317306709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317429032 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.315671895 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.316359811 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317905695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.317204072 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.317124849 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.315821708 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317841463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316401912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.314387834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.316513529 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317099026 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.316784458 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315446008 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.317246832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316627438 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.315204882 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317288758 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32268992 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.320580931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317764908 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.318524748 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31896629 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31931494 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317930367 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316214604 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314434113 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31557052 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316930742 seconds)
  done (took 40.708812121 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.33674096 seconds)
    (2/2) benchmarking "in"...
    done (took 1.335652671 seconds)
  done (took 3.867908337 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.318845128 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320118262 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.317541573 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.317882291 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316843702 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.319462931 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319527028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320677066 seconds)
  done (took 11.746129691 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.311653947 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320503589 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.319962455 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320556025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.319434177 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.310844492 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32101712 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.32382567 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.310823599 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.312566595 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.320042833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.317719366 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.314257248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313870618 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.312495174 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.319034323 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.321509077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.319746502 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.320214147 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322742125 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319174788 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314518963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316402888 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.322660149 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.313051481 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.319881903 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.317486156 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.321675856 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313965329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.318501461 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.313248271 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.321083616 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.320542458 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.320999537 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323906853 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323636271 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325637861 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318236268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.320739499 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.32653068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325309725 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.322659811 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.31366337 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.318713945 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317573883 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324726621 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.325505455 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.3247165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.313936675 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.316726384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327734909 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314792964 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.3222688 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319649526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.318172497 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32483442 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.32740557 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.319878404 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.322621545 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.325627101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.331914719 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.328211819 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320900015 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.327059799 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324354569 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.333855097 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323878209 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.328274929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.325090567 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324711756 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.323427746 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333007768 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.331336587 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.325496818 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323922639 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.324357511 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317593243 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32452746 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327341964 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.323775373 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.327952518 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327135893 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327288577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.335594179 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.319217816 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.326560804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.326194423 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.325206383 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.317937231 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326737629 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.326636244 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.323952794 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.316844589 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.314810272 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.320831521 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.323581542 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.318439745 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320709716 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.326345335 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.326392686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325431522 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319663043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.324432464 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327079876 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325916647 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.325968995 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.328349025 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318591266 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.328041778 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.32752323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325091755 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.320348904 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.323897953 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.326638619 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322514163 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.32237484 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.326788828 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.32216182 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.327144827 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.327536966 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329967009 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.338594759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.330483478 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.326833955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.324826135 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.3339413 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327745296 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.317349333 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.328552453 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.32650817 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.327044225 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.321540853 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327658054 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.320105044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32902622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32018424 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.328890042 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.326879703 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.328168864 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.318728173 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.32053323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.322630087 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.321378471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.324732666 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.328890204 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.322106409 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.329069427 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.322185976 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.31984617 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.324410842 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.326620329 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325895627 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.318991978 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.32949071 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.319509654 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329217105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.321733384 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.329061945 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324071245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.327444917 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328283798 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.319326735 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321786755 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329619929 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.324178697 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.320031838 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328794826 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.328118675 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.326563691 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.318673211 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.326963764 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317805247 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.323754718 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.33319779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327266304 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.327531971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.322073291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32808826 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324629228 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324798135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322342769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.324354861 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.324255693 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.327703929 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.327925199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327678977 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.327015099 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.319044253 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.318568834 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327910689 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.321585256 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.333309992 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332107192 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331632879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.324055079 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.330554883 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.321661991 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.329155219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.324396991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.331033546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.330439193 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326455709 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323338732 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328057997 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.32328472 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.329183067 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.31933032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.328331823 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.32952261 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.330573005 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329309301 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.320173923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323072567 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.32999173 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327889844 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327226845 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.319583404 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.330339948 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319129906 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.319061843 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.326318385 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.328846544 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.328741616 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.3317614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323871802 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32716918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.322884808 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.321127362 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.325895065 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324656997 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.318595649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325170633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.32086007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.321159157 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328007911 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.323924915 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.320986257 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.321425488 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.329250318 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.325861612 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.323467152 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.332388471 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.3268403 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.32654685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.325778476 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321998057 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329849464 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.332536485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.330690511 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.319229965 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.32907405 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.32110479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.326499338 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323450593 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.323609365 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322945806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324676761 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331179098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.329108971 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.321058515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.329660378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.330016969 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.330148503 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323999252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.333179944 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.325752808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.326180585 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.326322096 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.324356297 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.332584621 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.321428195 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.329459531 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.322892182 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335579154 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.340792599 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329324804 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.325888493 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.331816745 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327602834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.324544447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.324693117 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324225239 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324208476 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323273006 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.322912114 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.330977292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324076137 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.332196906 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324676819 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.325348388 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.335552662 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.329644234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.323399179 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.331976907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.330467871 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.329291986 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.321830221 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.330616548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.325701591 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329492694 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.326676375 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.324998186 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331640924 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32733258 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.32501446 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.325746983 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.324997872 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.323104188 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.327833777 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.332139962 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.327971449 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.337100573 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.328983531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.331015588 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.326223207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330893586 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.334051112 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.327801463 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.338427177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.32939442 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.322916497 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.32434315 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.332447776 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331918733 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.334302628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.325022464 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.335230518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333177202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.333467798 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.331270994 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.330738338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331074933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.329993396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331427357 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.328161138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.325826825 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330027972 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.33253271 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.332571351 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.33182349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.325198864 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328680296 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.335653974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.323961778 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.326421476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.326390966 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.332403407 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.334115261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.333666775 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.334622243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.334554101 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33373694 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.330449036 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.338384546 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.333842095 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.330075436 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335734203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333181565 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.334784179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326606463 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.332588839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33439798 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.327766863 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.327344208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.327882624 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.334819165 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.327410878 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.338356302 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.336102818 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.328908602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.330802757 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.334339599 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.326149556 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.337715164 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353228986 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.3295271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336234268 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.335767626 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.330115078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.338485872 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.334875401 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.325004447 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.332713929 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336734147 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3415619 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.327575588 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.334203014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328760162 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336797917 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.336680949 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.335576263 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.336722511 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.33437209 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.325403526 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.335817928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332669602 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.335417979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.328341143 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330304747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.328948422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.33699362 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.337709919 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.32942898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.336189448 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.336406279 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.329501928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.330142892 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.33480914 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.330469363 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33640729 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.330527966 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334093939 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.331403496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.331795042 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.331861775 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.336238636 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.327772058 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.328260901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334521481 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.334933558 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.33774206 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.330655586 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.337938617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.331119229 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.329536539 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.336245322 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.330365061 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337891901 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332997812 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.334454261 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328908516 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.33586392 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.337884611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33693283 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.330093885 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.333448579 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.335930891 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331225929 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.335403284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.334039246 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.340208245 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.327018366 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334118741 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.334255715 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.329651381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.330311426 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335569441 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.329388197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.331829832 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.332945776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340436605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.337289819 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.330141161 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.330260469 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337272073 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.334534433 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335370554 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.328287984 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.33139886 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.326737848 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.33413774 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.334143608 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.327833365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338623931 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.331903318 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338940018 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332273987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.330575412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.329365272 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341385369 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335892245 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.329139759 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.335040981 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.329427734 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333557811 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331952857 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.33362698 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326721608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327354525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.332827928 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.334675679 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.33682159 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330246036 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.328979477 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328226028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.337281285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334551355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.336775161 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.338265588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.327443236 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335939708 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.326241472 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.330755876 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.331213548 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.329338323 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.340253711 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335883388 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333253583 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.337618277 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.344302557 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.337329548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.33036967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.329500146 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.333548622 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.337033447 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.334651178 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328884109 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.326313145 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.334848344 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335447977 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.335221306 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.331295292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.341926087 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.337760707 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328693456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.330418212 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334427486 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.339467275 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.338586114 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.334590367 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.32992344 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.331069638 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.341475909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.336699315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.334635727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331753471 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330151819 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.338998355 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.330340924 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.333973975 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.332907739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33915673 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.336212108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.33573225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.339689126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.338013383 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338393433 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35313186 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.330969626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.330626715 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.338671781 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328211065 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.335850258 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.331721166 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.337001736 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.336630218 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335352901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340012223 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329113541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332540767 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.332490794 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.339384775 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.336090296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.328421673 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.329417812 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.337638401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.33649944 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.337317714 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.335115243 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.336444451 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.336551383 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.330186696 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344534146 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.340528633 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.337938283 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.339372961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.335190074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.332060474 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.333392087 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33685632 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.343663972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.336337662 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.337614841 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.329414088 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336956607 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.336576991 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33114992 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.33019751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330268125 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.338358524 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.341768297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349435778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.336240513 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.332554604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340195936 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.341878718 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330271355 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338613914 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339847599 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.331012727 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.33257751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.336566003 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.337735065 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.332703576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.332879098 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.34165162 seconds)
  done (took 793.260283944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337835304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335363301 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336714 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337584104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336235442 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337864551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338377648 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337246527 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.339602773 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.335908015 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340275652 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336061215 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.338296198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33792074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340128696 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337282755 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335842089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.336231496 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3392988 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338118655 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.336631198 seconds)
  done (took 29.296317139 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.338113259 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.336798706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337738398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337784117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334905139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.33817112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.337243848 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338265954 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336974671 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335678488 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.337557011 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338438316 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.338470507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.337624481 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338642951 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337098207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335115115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338222601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.337309814 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.338200153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337460393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.339143496 seconds)
  done (took 30.633222685 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.33968266 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.337255012 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.328555855 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.34092233 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.33778274 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.338253917 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.339471558 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.337979289 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.339145906 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.33234878 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.329408091 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.332346987 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33728021 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.342204635 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.332757992 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.338918608 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.340113222 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.339458887 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.337801 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.338334126 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.339423519 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.341550546 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.338177808 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.330148779 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.342329587 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.3403025 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.340852644 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.337441683 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.333624482 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.344108039 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.337955764 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.33194765 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.334061411 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.333368486 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.333628528 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.34166792 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.33857773 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.340295602 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.341124305 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.342650593 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.355370743 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.338061215 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.340806887 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.343950288 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.34243253 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.336587584 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.343996416 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.340464306 seconds)
  done (took 65.454077966 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.340250294 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.339421721 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.341955755 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.34098212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.341600925 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.341724125 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.34174253 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.339252475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.340354349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.341979154 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.340288683 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.341994684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.340401532 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.341100775 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.342416685 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.343388463 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.341363265 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.341043831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.341473571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.341792588 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.341291725 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.343361086 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.343685158 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.34001954 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342445122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.342160614 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.341580202 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.340596498 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.343550884 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.342363586 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.343190018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.340008372 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343540158 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.343848614 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343728855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.341066966 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.343819786 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34181113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.339424197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.343060917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.341651294 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.343764799 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.344916239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.344080864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.342479707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.34286146 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.343701328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.343232709 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.343744303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342608153 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.342523145 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.346136957 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.344414645 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.343020542 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34139885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.344085098 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.345996195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.342067006 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.343691376 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342889415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.342788563 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.343539905 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.343830912 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.344152852 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.344931945 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.343569994 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.345320275 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.344520002 seconds)
  done (took 92.503311544 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345201535 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.342596283 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343735418 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342170689 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.345086111 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.344469427 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.344466038 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.343793462 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.344018453 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.344447432 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344092326 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346736157 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.342117195 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.345493229 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.344375769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343085439 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.345049791 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345087531 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343496519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347625141 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.344182817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.344151937 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.345624945 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345071716 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.345716866 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.344904123 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344967598 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347201428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344015127 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.34471586 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342026498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.346455713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.346506395 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.346683619 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.347989808 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.346271937 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343884238 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346321718 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.346188736 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.345590841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.344295986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.345780536 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.347795042 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.344132003 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34698774 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.346639059 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.347337 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.344474414 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.346981582 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347203119 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.346644398 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34562811 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348700006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347052931 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.347007506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.348398028 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347278783 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348460672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34879185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346359046 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346681282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.347196334 seconds)
  done (took 84.639942491 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347595909 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347662837 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.348564675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.347623982 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347730531 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348254035 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348938504 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.347184448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.346424082 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.348455059 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348231467 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347596447 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348918064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349134691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348656028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3514756 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349159899 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.346002331 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349549044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350550725 seconds)
  done (took 28.181977967 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.350886359 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348889212 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.348004711 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347569608 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.350259116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349406148 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.348117374 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351895871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351958188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350464281 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349301691 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349340136 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351892834 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347984259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350772756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.35083895 seconds)
  done (took 22.814530224 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.353368457 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.349661561 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.348715609 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.351143168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.351620978 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.351101938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350083566 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.350573059 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.351755983 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.352818464 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.351737612 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.349161872 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.351583145 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.350003139 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.34877317 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.349501804 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.352271724 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.353257776 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351199466 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.353294517 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.352573746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.352232602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.347909823 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352815073 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.350131456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350858053 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.352740641 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.35233451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.353083635 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352143604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.351361013 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.353942262 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.352340395 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353309211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.353028985 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.35252978 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353009736 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.351938343 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.349705999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.353006349 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.353516269 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.352431708 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.35426452 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.351829803 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.353034891 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352655565 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.352561792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.354607694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.352974219 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.35268568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352011758 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.355506588 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.352640664 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.35339518 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.35427472 seconds)
  done (took 75.580992229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35561385 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355216239 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.354126609 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.353376324 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.355199389 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.350451346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354182645 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.355790652 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353660408 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354116572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353170884 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35471354 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352850831 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354149235 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355310575 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354129846 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.355551177 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.353859945 seconds)
  done (took 25.596355996 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354942045 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354266621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.355128023 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354853819 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.353825435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358534458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354033082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.353939063 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354332036 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3561716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356814325 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.354922645 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352966294 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.356337016 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35440788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353807159 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.354228125 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357098035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.355884286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355627916 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354440681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355049042 seconds)
  done (took 31.032031441 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.347413658 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.347069378 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.34767971 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.359319297 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.358931396 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.347896406 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.347968291 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.347290407 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.36792232 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.386233258 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.381106411 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.35839403 seconds)
  done (took 17.521169802 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358123404 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35556853 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355251879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357234103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357380769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356870521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356531177 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358761387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358860903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355885743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355758818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356508377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355605793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357154057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360885705 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356774513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35795604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357660735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357677538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358006663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358054058 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360314439 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357497638 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355726134 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357221917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358052681 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360017091 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358977644 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362091342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358167442 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358548712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359011748 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358885281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356501937 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357921222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357694257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357513449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358463757 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3581095 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357883738 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357268635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359190272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358998294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359036263 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359182316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362476855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359730282 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356992966 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357389624 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359844539 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359014418 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355223086 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359160712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358636916 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360505699 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360523781 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359140226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361567416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36009752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358677973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356539635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361459156 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359998441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362464188 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361278935 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358700832 seconds)
  done (took 90.880064615 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36180866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359573861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36063986 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362164882 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36019704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359584788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359984777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360942493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360596153 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36250935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362957389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360143197 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361634017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358115096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358532522 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359372385 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35962868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359863126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358764567 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361543845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358270123 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360682109 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361760042 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364265642 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362415935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361315102 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363255003 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362133063 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361777406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362558143 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370663456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364273297 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365353927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363583332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364449205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362908391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363545192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361292899 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362177057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363108996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362633419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362106854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360416872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359698725 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363294205 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363878216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361382356 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363883781 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364373076 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364772699 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364970249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365174247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365325101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363517636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36290641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361258967 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363058271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361083254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362596164 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361494171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364372931 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364399256 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365151364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364369891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364324268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36507522 seconds)
  done (took 91.141417584 seconds)
done (took 1855.722994626 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.523875992 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.477020087 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.356439535 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.365447966 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.352111411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.354627917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.364729849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.355719063 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.355723849 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.357961677 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.357184058 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.550479955 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.392805715 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.353845437 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.355893486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.452076382 seconds)
  done (took 27.555897545 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.382334215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.359074433 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.468026382 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355229178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.38317862 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.542119377 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.417044609 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.362594758 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521842989 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373539861 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.351943179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.381783127 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.361055764 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.354058284 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.37361474 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.543544696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.591421244 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.353510556 seconds)
  done (took 29.707386526 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775569164 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.37279864 seconds)
  done (took 5.381006059 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.381239541 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.36269797 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366877477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.363765784 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.354743195 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.355789527 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.363528825 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.358797593 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.35824648 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.481712679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.366349479 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.375840769 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.375073735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.366654522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.370207768 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.40630873 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508504491 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.36950238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.370746009 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368753216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.363304254 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.450088594 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.405328899 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.374354732 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.479911217 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.363235689 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.36619369 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.370449564 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489772486 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.373619178 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.364122042 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.364104013 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.367333806 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.35597874 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.830815453 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.360501858 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.386339768 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.375785366 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.370948295 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.526076164 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.368145975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.36997909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.359502356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.843714161 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.493278709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.479534903 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.381319633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.365441009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.366821152 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.431468014 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.365449288 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.367304327 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.423283217 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.163554796 seconds)
  done (took 86.977743676 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.377659768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.356024826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540058233 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.380682504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35720591 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.360653453 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.357701844 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628273025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.404694329 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.370778951 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.639427071 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.88403515 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.369371315 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.366783489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.293772512 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.448755839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.361787871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.356568151 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35501742 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.365413436 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89757527 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35908625 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.36104199 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.400218245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.397252427 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878364414 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.356145576 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.359791973 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.361172451 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.358070775 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865517598 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.366685305 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.437691394 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.359736663 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.626472214 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.732127394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682883981 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.358488148 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402860024 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35458266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355314958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853723907 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691210216 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.339911198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.338561865 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84523573 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334100583 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.335887383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.33753995 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583165408 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332827297 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.332833762 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.333752638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.334085642 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.331819156 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452515936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330826016 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847509159 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327655662 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321034281 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336772234 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328402774 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.324191701 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325526936 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.335825211 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676215207 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.508866878 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.320393349 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66850332 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805149022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313839441 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875932548 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.313582196 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.327634937 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.531821382 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316055655 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.315508593 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823241167 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328979181 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30948103 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64156699 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.308454999 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.585462134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320118433 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318475366 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845294471 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.304493761 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.308032032 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.301137353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.301321524 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301329014 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298373956 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56630063 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.326448633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.297405733 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.296028564 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331744677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296907547 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.316417872 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299843594 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855265186 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.302363668 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.296531386 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300411433 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311002474 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29797465 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.298207133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30086622 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559373659 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294403752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.315061716 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297708007 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295448982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300550757 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337562102 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.29176747 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587471717 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.2979507 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289252106 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.290527048 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288693092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322211354 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288176482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.2931861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.142942721 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591579608 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303559322 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.287097812 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287019629 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287376282 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287817359 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29122411 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358193066 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.288592191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971556794 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295469096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.296192438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289631466 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296147146 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289214224 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.290817668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290431366 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582110191 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557463023 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.466032656 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293450962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295220293 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000475537 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323918694 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474300732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308380387 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29232137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574194161 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.491111437 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296677796 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293249282 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.297434578 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551415583 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292508327 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608393535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812294839 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.297762655 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.299422131 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978449907 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.99507418 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.294492779 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.294832118 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570524846 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.309139001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293702875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.29459961 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294446837 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294372547 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.297076348 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30277876 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.293975971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.294274265 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612454057 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487546778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.308527588 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.30496968 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812121284 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334195682 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294892263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302512773 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.296320854 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293355842 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.304766154 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.29649804 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.326293154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.294846555 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.301560845 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842235605 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295031087 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.295577671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488046788 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932458803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.298764954 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296379182 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.29659194 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.244686914 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.892428589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.297352153 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.590123782 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.303549332 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333202151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297896928 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.359438439 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843095196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29545019 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2973647 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957275554 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.296758415 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.704975866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.293524959 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290079027 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860989684 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.292074491 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.291170823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288846633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292503818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587987116 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.293509165 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.297584694 seconds)
  done (took 492.836337966 seconds)
done (took 643.689218166 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289045005 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.293742096 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.294082457 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.293214822 seconds)
  done (took 10.353574134 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3377339 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294599759 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304004604 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29374245 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303388653 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294250374 seconds)
  done (took 9.012316515 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.287298397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.292954229 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29442076 seconds)
  done (took 8.05710749 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.4966988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.317343566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638042298 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294001152 seconds)
  done (took 8.930166862 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306031455 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306139779 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305090992 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305697735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339842691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338131786 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306694288 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306159027 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.340181338 seconds)
  done (took 13.03782883 seconds)
done (took 50.57514353 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.499635555 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.39932657 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.358074155 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.359420206 seconds)
    (5/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.460925082 seconds)
    (6/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.312558643 seconds)
    (7/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.368269918 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.447671042 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.327892311 seconds)
    (10/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.391437212 seconds)
    (11/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.534343848 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.27226812 seconds)
    (13/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.637744105 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.61130888 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.272986619 seconds)
    (16/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.383358638 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.273279621 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.294924032 seconds)
    (19/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.273220675 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.46831241 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.370938583 seconds)
    (22/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.639271933 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.442730362 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.274601718 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.331748944 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.325904983 seconds)
    (27/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439503648 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.296298983 seconds)
    (29/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.362058685 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.443137501 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.384946559 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.50718718 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.298556963 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280468455 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.542331339 seconds)
    (36/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.292470899 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.357639391 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.447047059 seconds)
    (39/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.277765771 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.570236021 seconds)
    (41/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.279782598 seconds)
    (42/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.395987673 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.277595276 seconds)
    (44/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.278390989 seconds)
    (45/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.502559231 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.512018154 seconds)
    (47/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.378218 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.284383471 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.401438206 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.40918399 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.327561867 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.405628858 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.549346214 seconds)
    (54/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340325507 seconds)
    (55/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.32440462 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.42389423 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385499343 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.279116196 seconds)
    (59/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.340180493 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.359916846 seconds)
    (61/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.437796659 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.438306094 seconds)
    (63/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.289518618 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.529682159 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.543616022 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.276589832 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337715517 seconds)
    (68/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.433413057 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.391146497 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.332073699 seconds)
    (71/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.373958497 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.303210778 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.662335794 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.478327199 seconds)
    (75/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.609157914 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.47912189 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.384137034 seconds)
    (78/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.278529212 seconds)
    (79/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.540333683 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.800816933 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.276729287 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.628753763 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.415188391 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.571971353 seconds)
    (85/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329516748 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.510928464 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.276956285 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.416488648 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.377122061 seconds)
    (90/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.464336031 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.446093377 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.408975565 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.383855589 seconds)
    (94/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.586521568 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.27857493 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.276991074 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.280476683 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.400166306 seconds)
    (99/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.507804292 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.405901754 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.416026527 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.286951517 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.331494207 seconds)
    (104/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.537279179 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.33235011 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.375122419 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.400547024 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.444770545 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.297746076 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.664522272 seconds)
    (111/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.575891687 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.61828131 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.400539359 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.277695323 seconds)
    (115/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.593677344 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.572000902 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.278244257 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338171461 seconds)
    (119/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.473470081 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.369133206 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.409368349 seconds)
    (122/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.377099509 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.375279956 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.424566221 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.333649038 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.451753645 seconds)
    (127/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.478850776 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.418623147 seconds)
    (129/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.451024728 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.499430861 seconds)
    (131/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.280721026 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.439910488 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.387304043 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281220333 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.545825133 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.645345429 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.386277548 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.446609414 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.390363214 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.408565829 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367574863 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.398755078 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.300791557 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287359791 seconds)
    (145/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.345120446 seconds)
    (146/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.416536116 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.475258278 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.396640958 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.281679259 seconds)
    (150/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339463815 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.323450186 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.423078082 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.334275642 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.279840692 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.281048588 seconds)
    (156/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.696141158 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.363853558 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.288878563 seconds)
    (159/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299565792 seconds)
    (160/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.368003495 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.521472352 seconds)
    (162/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.376362588 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.408032429 seconds)
    (164/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.448804036 seconds)
    (165/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.388403914 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.284813463 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.344866564 seconds)
    (168/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.415900832 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.302434631 seconds)
    (170/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.648313084 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.464988142 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.428015901 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.281169624 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.400388575 seconds)
    (175/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.281930013 seconds)
    (176/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.500664573 seconds)
    (177/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.514204589 seconds)
    (178/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.475371653 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.286621831 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.340789898 seconds)
    (181/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.377212393 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316131668 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.803789455 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.337654797 seconds)
    (185/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.42605378 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.558533309 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.286326939 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.422095788 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.319812119 seconds)
    (190/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.501336184 seconds)
    (191/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.475745133 seconds)
    (192/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366219801 seconds)
  done (took 319.235095639 seconds)
done (took 320.421678716 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326387796 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.397434377 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309573439 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.310423364 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311560805 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.311973286 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335625969 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.310227182 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322877103 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.32466239 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.309404298 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323113312 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.323386871 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.32051508 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.34382424 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.310457917 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.311151924 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.31965385 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.324555131 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.326497619 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312488622 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311537532 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.333582158 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.312306323 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319243677 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320168521 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.316932775 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.304682911 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323167761 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.325670251 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.303000112 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322966244 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.327965351 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323087157 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313573815 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.321411485 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313827032 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.401104956 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332234578 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321974567 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320412491 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.32764161 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.318184513 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317499634 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.323699486 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.335690663 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320775585 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.328417542 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.304553827 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.311805707 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333371197 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.324684295 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321327348 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.305737055 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.309107912 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333032315 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.323285772 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328987689 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321921657 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314581877 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.347496568 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32963852 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.325139845 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322581109 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.320852769 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.327424035 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322578997 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.330347827 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.320913618 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316536258 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3154091 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.321628102 seconds)
done (took 104.457825601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.438060344 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.31304983 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449716019 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321298194 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47273175 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.441613438 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320556366 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321372254 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322023341 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.106147069 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32191288 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321858806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.313696063 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.323148279 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440012214 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.322907569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322541182 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.005872154 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324205477 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.454587724 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.31111024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323826483 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324366489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.110657067 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.313860331 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.310855577 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456440003 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.322816176 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.010371608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.309913607 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.312172899 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.011278101 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.456969408 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.343124645 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333982022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.331894981 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.473999519 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.327432974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438092506 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.439705724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451598253 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360943545 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.310289162 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.315720078 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325581932 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.325954669 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.325078607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353248721 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.315027925 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325288272 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.008677961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333589291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333996206 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325940225 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326371686 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.345148261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326681947 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327345115 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457460595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.32715165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.441368319 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.115029909 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.109868733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324600413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.315920682 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.327112613 seconds)
  done (took 107.275950486 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.387916453 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.393217177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.426516542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.322653362 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.368022014 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427411689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321925666 seconds)
  done (took 10.849858124 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.324730227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327008612 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367942739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367536381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.327379501 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.472843489 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32775859 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330784139 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.327347461 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.371090046 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.329316292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327257244 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.337576437 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31759889 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365850304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.329759929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.433496801 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.320657157 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326661481 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.469793886 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327691987 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.336095872 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.369673154 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.33018428 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.33018059 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326060274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.085265964 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327616853 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327101525 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.328099765 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327091202 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.373637749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327926225 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.318731313 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32807831 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435093814 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.328078034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327720318 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328167192 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.323700614 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329533075 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329069619 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.32842434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.329082084 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.32934682 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.344662705 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.32825712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328641778 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330621641 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329878172 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.370580177 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330283208 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.328209396 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330679144 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376449872 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337831274 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.330382964 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.330164274 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330201863 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32934774 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.473985058 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370643955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.330198 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369861358 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330184405 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33036095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330081504 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.328996094 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413069275 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.329611862 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369931173 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330904496 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.504823468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.345900951 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329826039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.325811636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324935363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330162048 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.319773967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328193292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330496645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.324759663 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.327979205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330178248 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330546706 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.48346898 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430551879 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.329822004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.334902611 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3288949 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331239106 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.376963271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.331429798 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330749066 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375526707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.439356359 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376182307 seconds)
  done (took 136.747713028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.336062661 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.336334927 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.327059042 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.351161862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.324221672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.324303859 seconds)
  done (took 9.207604149 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.327460216 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.33396157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.332867998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.330980174 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332249806 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335427086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335923454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.326120334 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.334590535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332565442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336518187 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333244677 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334897307 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334786138 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334984459 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333668124 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336402245 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332633431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333818219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333653383 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.32392183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333314327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334924603 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326625748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.339877719 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.335070715 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350191392 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332202936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335256281 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.333902975 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.337599883 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.336724659 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327226312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330085691 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338543577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.327743573 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337011918 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.335784476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335000233 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.336715363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.336332553 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335286178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334457345 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336778984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.327768294 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.330988451 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.337698961 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350123862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335321554 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336061383 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335737492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.335248104 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.337910524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.337060049 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.330917159 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331151645 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.33811353 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337436005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.336782713 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.329639745 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.337585217 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.338736727 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.330366291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341277681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.334399106 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33846253 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.32923384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340066819 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.337038068 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337311331 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337764472 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3373246 seconds)
  done (took 98.315465248 seconds)
done (took 363.595801282 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.605245388 seconds)
  done (took 3.818430857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.59451986 seconds)
  done (took 3.808086687 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.083893761 seconds)
  done (took 22.551635988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.352420502 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.421264812 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.341944463 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.33284956 seconds)
  done (took 10.663789296 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.390961439 seconds)
  done (took 3.60538393 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.345461762 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.336781525 seconds)
  done (took 5.899101383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.506671304 seconds)
  done (took 3.722969737 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.547229442 seconds)
  done (took 3.763460398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.344222673 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.346953233 seconds)
  done (took 5.915685033 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.30652302 seconds)
  done (took 3.523196828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.168121312 seconds)
  done (took 20.384789732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342045202 seconds)
  done (took 3.561325545 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.369198228 seconds)
  done (took 3.586220051 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.802756594 seconds)
  done (took 6.019859049 seconds)
done (took 102.038309084 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.327805162 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.329825257 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.330328288 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.328080994 seconds)
  done (took 10.532515065 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394080968 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393455111 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398286328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393249914 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.3926887 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.392441788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.366909159 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.36755323 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394813126 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393135355 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400022303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392476688 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394574414 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36810591 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.393818206 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399407257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.393206469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.399037548 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.369532169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.394259714 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342441371 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.395700111 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394534691 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342912585 seconds)
  done (took 34.483311728 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.901472186 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.404684311 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.488275347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.38624515 seconds)
  done (took 7.397440755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422045325 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.42477234 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.442121872 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479446242 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516488343 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.439280179 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366204672 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364368027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351729831 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423407422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477689517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.408818061 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509767606 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343760287 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.632578096 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344314572 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.344932294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423909343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475158655 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506550315 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343930267 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421664267 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.42926894 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.408387644 seconds)
  done (took 35.519906136 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350606505 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.365387467 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.343837536 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360236352 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.345692409 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.345349904 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.346841829 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.352486859 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.344503461 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.345326267 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.345668077 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.359244803 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.34642868 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345554232 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352731907 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.348077884 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.345676678 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.351290209 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.353400927 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.346500473 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.345902359 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.35323521 seconds)
  done (took 30.914179631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.333256861 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331276496 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683990127 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.588625586 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.333250062 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.33292824 seconds)
  done (took 13.824751734 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.407029264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54053313 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33833301 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.677257897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.763323898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.33907275 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.339651057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.576460052 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863456432 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.867515923 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.39537798 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.407785946 seconds)
  done (took 19.737236221 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.340855551 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.338033951 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.346109946 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.353699213 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.390687343 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.342954442 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.345755875 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.332229157 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.396413512 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.395805636 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.342548259 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.393138706 seconds)
  done (took 21.541429752 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430186182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34182448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345757289 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400804584 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342227652 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184783468 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404811226 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030158097 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.34852046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616369698 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352172018 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436927612 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594746466 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342669269 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347951389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.314977175 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571949058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823721779 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349618637 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343032714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381821509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343472957 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34932329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550483956 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186629326 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343680781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609384431 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344318987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61855401 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592384248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599024586 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347778424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620626679 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976527303 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441695245 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542682171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337963552 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351669126 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.324099689 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.36308175 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367236848 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347541805 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5902389 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351923785 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346592404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357612703 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045742568 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.353050504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.346067897 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345642422 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595198148 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441743756 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.351091082 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346394162 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349294423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344492624 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.350413209 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47414892 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908102028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35804184 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361687666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.354909913 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338609075 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357981618 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969132902 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359259884 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.351520172 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352324614 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347514094 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352809946 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375881606 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346821599 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.369412962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346872907 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088468295 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368954891 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350066761 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890141899 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35481018 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.35434552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577903272 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348015721 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348313744 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.347702313 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349133058 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052017451 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355455458 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.319758384 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410804439 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034828508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549357732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37275307 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380132079 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.571376509 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.320969043 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348507352 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.354544185 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351399789 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370211303 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04661021 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349680013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.355063449 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604776066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.5587324 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352140541 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.323285154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809544152 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349354438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.39704903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353748672 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553102319 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.951652394 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600479761 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357218907 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386652882 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350872472 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112509042 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365644999 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.360568992 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351749423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639806336 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.157061378 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353281871 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420657023 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35505018 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351062659 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355275394 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35930854 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351070084 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.529225867 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359191243 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600155078 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.361127113 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351256815 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.361515832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35676741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.358210277 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572796163 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362021438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636018878 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352969299 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353033013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351434437 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.573265382 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.35461787 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.359994736 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613756263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353658474 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359131921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603531974 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389722399 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462035575 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382353369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.354322497 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61305949 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.358816572 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.358654383 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35865161 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35966462 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355780121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36155485 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355734658 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957286149 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334755826 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35483991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354891782 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.368403549 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421632139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361294527 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554319998 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.363690456 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35504515 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.36691858 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.35843906 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579414636 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59490961 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361750834 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436202671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.81628055 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951998378 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375705967 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.356323414 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.35424865 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.355076945 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355830329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355078836 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355856274 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555700286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60935987 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366348943 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958613961 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363239082 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358339287 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366618588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596906845 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370120528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356315204 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.356477658 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356256748 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371761694 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603677249 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497430916 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371657075 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355991014 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918247034 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362252632 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357781511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357220614 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387869907 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357417306 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1912722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617671596 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347378576 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603040842 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36303838 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.378907185 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.355733355 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368741713 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361043933 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.382520774 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36501734 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.558472382 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372863419 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364475304 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914094103 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096865966 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902786952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369236248 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.35958377 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362208941 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054437324 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356309607 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358431423 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585733325 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052389898 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360294299 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820873485 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.363072632 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092084371 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607913111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594345591 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36359576 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.373548623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606923194 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5754399 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389373002 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360119586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363701069 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.331694032 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897182223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37251179 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438268504 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054036851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371930458 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36579897 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.352363611 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35848877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760464876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359847759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359380548 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366715806 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363970241 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192751258 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360105716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358501915 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978877254 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370566433 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.82876409 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360487013 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56083333 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607084553 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.589172271 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.368027559 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.364823467 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620394067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603151495 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368182963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371113813 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903184162 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.232263878 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.366964239 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361173456 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117823712 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360065091 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636291103 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.380898152 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.370707944 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373086424 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361423277 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361880973 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.359841794 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365264246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336373711 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838531233 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.366840468 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383853838 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370163526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362381836 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617086631 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376687136 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959736752 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594746349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367043021 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398093419 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367685363 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3626031 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.336583876 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362679582 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363532739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368968295 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584724584 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363561315 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.334893556 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43363522 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572078212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362450693 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364327078 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57437981 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.367334528 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.374176937 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123240523 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402585666 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363770602 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370614221 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371374042 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408351863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432020733 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5643722 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.613286667 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613274639 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753529077 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364350093 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372236824 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.380220963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458717321 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362984438 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.393217352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.144223359 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966470517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116544649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974594068 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614825526 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372678746 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369159112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36544575 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501350966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364720395 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641018382 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364857978 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.379972495 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391354731 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365972457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376855618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580499314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641896684 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3661135 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364567033 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371524387 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.365567601 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613793631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581350308 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846108068 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912911248 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371523532 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365979679 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07372454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643507497 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367308824 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367129621 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367196067 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.381237372 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389044149 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37328318 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373919845 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507841529 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611094512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011613486 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609337113 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.430408812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.886485377 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366271358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644373163 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137780063 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570101875 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978102156 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077013157 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637459789 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436580362 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568425479 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.372465645 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503364985 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.380932543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373117806 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36783232 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368963687 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.368373313 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611753057 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981203281 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638583645 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.374195439 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.38049097 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40426252 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.572296022 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594366551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081651118 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591771817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617268078 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380649937 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369673718 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976775301 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622057687 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376732751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.37452243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582639021 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372132545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396522061 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.88837215 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.370372756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908196086 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.266641517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392027891 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38206584 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086373354 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982401994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.390895363 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85730692 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378564303 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379711175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650736137 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.37788991 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381401628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656299663 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376726361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382464975 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581352602 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.980891342 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120264287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.382005332 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399822811 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37876721 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372132876 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420815558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372907537 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379322852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.762548959 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37390747 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373571337 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386585973 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.383929292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384223385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.379267767 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373315861 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380911129 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.365946264 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.364201131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382449408 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50149976 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912469152 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380343596 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.050246469 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699398732 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627265383 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383539042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.351970228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37934704 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374397345 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375015212 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374122367 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365450187 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919104596 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.387608571 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.624694874 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388247338 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.584838928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585135498 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377411121 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57937895 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381873303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400073815 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.347403856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375657516 seconds)
  done (took 971.741426568 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38570622 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.37822521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.398098149 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.430133183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401632496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.36880241 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.377247826 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.389948033 seconds)
  done (took 20.380909326 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.374532046 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.37987839 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.37607082 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.376604908 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.369822299 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.848129979 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.374215031 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.375161621 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.388885193 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373108731 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.375598437 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.991599734 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.383209641 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.373615703 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.3750959 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.38243886 seconds)
  done (took 32.369342993 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.410958394 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.520545676 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.243295508 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.394116106 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.384855085 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.38726777 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.601276202 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.368854267 seconds)
  done (took 26.563255148 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382665255 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.380498664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384569767 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.382221117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382718266 seconds)
  done (took 8.165316374 seconds)
done (took 1234.388177276 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383069226 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.382309528 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383006314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.382985682 seconds)
  done (took 6.783796814 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.352111805 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.350210713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.350338746 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.362774369 seconds)
  done (took 9.669154202 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.037611694 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.89645868 seconds)
  done (took 5.186774691 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.829971374 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.839677464 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.831705974 seconds)
  done (took 6.754817599 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.65693305 seconds)
  done (took 2.909852295 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.255965866 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.338190982 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.374364772 seconds)
  done (took 8.221943452 seconds)
done (took 40.779908484 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382607093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.614569437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.524839715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380639919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.531082154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526289865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.109716134 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369478396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370640565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381318412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37932818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530289794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.157927002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.61611928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.159258213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.614768382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.531512657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.371868081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.371794769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376376629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.111719853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369849763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378321355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.379958525 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.535500734 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514417308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.370951789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.616851054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.380892924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374086894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51473684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384058057 seconds)
  done (took 82.486041183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.372083703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.38630116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384964025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.378027541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.37166751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40445884 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.373137099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.372066299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.371766488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372448641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.377230249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383227506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.373035523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372886758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.389378403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.372291806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.387597377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.375268361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.372850045 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374599208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.373021736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372512742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372896974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373005275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.39240268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.373624079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.387654571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.372555148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374083357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377442959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378661825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39876938 seconds)
  done (took 77.368481096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.373857011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37873723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389041533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.378657203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.388148597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.379122784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.377095073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374603477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.377831356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.379636036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384615437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372962615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390651649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374208128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.375439616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.374570655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403250543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.379641462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.379929653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379020427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39300254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387991005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.373109433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375222107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.387355741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.375837377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.374299869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.375325826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.386363766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374318643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.379943895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380867855 seconds)
  done (took 77.432173686 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614850366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.389594974 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.391771114 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38304631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.391487425 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.388798045 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.384219349 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620255732 seconds)
  done (took 14.821988011 seconds)
done (took 253.361173732 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.383286859 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.878116913 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415958458 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.385027922 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.405689574 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.408413205 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.582822194 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.414097343 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.574593137 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.398198128 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.403321182 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.386523398 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.16155463 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523038284 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.22504441 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.365741548 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.242765447 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.398947204 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.945179234 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606136778 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.410264463 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.382817727 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.22997147 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.248902883 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.368156747 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45074262 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.447395938 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.534339225 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.501684491 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44579457 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.872806362 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.398533254 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.392166551 seconds)
  done (took 64.047826345 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.385448051 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.394160431 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.394149656 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.393968944 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.39258431 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.394078551 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.383903203 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.394175577 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.393372726 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.393973152 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.393216475 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.393447183 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.393679983 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.394358908 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.394149212 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.371265189 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.384831005 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.394378922 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.384917081 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.371815726 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.39503788 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.394374065 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.395811681 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.39525458 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.394860415 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.39484488 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.396686648 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.394878932 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.394522799 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.393910049 seconds)
  done (took 43.008134316 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395450367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.940119647 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.110228637 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.399038096 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.388459017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.39165797 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.668111758 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.40075881 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390995615 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.391645912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.854258429 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.40314303 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420634418 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.11252402 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.394961887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396432559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.396418692 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38890535 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948878562 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403521938 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.665724914 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400075418 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.667687312 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.402586206 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.390893689 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389739956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393548506 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.207609534 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.408292731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.856548669 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.143086178 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.667581164 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.145897128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158328842 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.145127514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.403412714 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.396225478 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.863387577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.39731581 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.389343964 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.66684018 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.394009146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.116124765 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.067236247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.408319924 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.397548713 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.236835728 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.861623468 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.630052579 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403008517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.153607237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.398539157 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.400828502 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.393247791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.625445052 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399329018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.391533941 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.251595417 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.3957372 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.668637662 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.400624844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.392259638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950887142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.396328434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.948900232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40057771 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.400765973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.393645525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120027728 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.396425692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.089468686 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.411271809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.399764466 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866470758 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.952474169 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.28539838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.400062643 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955064005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.18280919 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.690303078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.401330805 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.186262203 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.69086552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.396470522 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.402104974 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402949094 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401457886 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467543791 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.667417888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.012622458 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076684741 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260210961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.673330732 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.400968214 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.395057862 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257270719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.402434645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.400799539 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.119352578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085744136 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411561604 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401665248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.069413336 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.414531383 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.672520428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.406174793 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157594868 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.401383602 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468839431 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.402537568 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.40152987 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.399367177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.67456221 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.405053469 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.402999073 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.065674112 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.891495201 seconds)
  done (took 194.396789359 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.406611905 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.390759127 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.390868195 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.405352905 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.39051629 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.395959777 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.3888714 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.388942527 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.394648422 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.391137791 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.391287964 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.399207894 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.398559926 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.391490078 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.390823503 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.390358092 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.390257872 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.413908867 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.391186772 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.390485045 seconds)
  done (took 45.161472262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.404618734 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.941815527 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.911180209 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.409530645 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.405120451 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.396919839 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.452611856 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.411114028 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405950912 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.690316766 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.570489238 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.41244534 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.404522828 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.404584618 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.908924318 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.387691067 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.689636768 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.949298904 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410838584 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.944103759 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.386793226 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.404842198 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.396090826 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.943990818 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.702510774 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.677019636 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.459311287 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948701813 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.412550741 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.405914807 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.944133583 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.411596471 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.399930875 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.931758372 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.413749335 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420740126 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.407511354 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.453678412 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.463414169 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696848261 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.955022931 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.686578196 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.425247096 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.58364808 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.411673095 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.382944353 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953439564 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.415125242 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.382393181 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.409289636 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.412863214 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.921404446 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.405022791 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.920807511 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.414770945 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.40954046 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.948746913 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926561937 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.917665254 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.571660505 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405521919 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.674903284 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.414580783 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.955078632 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.414869314 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408116741 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.408391837 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.56896835 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955248632 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.682695222 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.699547126 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.700568215 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.414632053 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466363493 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.411191304 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.694990754 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.47079512 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.831670084 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.701497866 seconds)
  done (took 126.801466311 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.655446611 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.517706331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.763951154 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.987681194 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.902576818 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.545490043 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.514663517 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.640321446 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418423374 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500037171 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.037584561 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.506627089 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.13886107 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474470818 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512144192 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.529355308 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.798949628 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.391174875 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.046493182 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.0090708 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.42210895 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.507671132 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.927425536 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.582800603 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.411612354 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.996736212 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.354142818 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.919313227 seconds)
  done (took 53.288618274 seconds)
done (took 527.964529901 seconds)
SAVING RESULT...
DONE!
