cset: moving following pidspec: 15032
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.315710412 seconds)
loading group "string"... done (took 0.480446496 seconds)
loading group "linalg"... done (took 7.776967455 seconds)
loading group "parallel"... done (took 0.173469869 seconds)
loading group "find"... done (took 1.182325426 seconds)
loading group "tuple"... done (took 2.121780939 seconds)
loading group "dates"... done (took 1.347230192 seconds)
loading group "micro"... done (took 0.247792426 seconds)
loading group "io"... done (took 0.674306739 seconds)
loading group "scalar"... done (took 41.458675293 seconds)
loading group "sparse"... done (took 12.759818132 seconds)
loading group "broadcast"... done (took 1.126567003 seconds)
loading group "union"... done (took 14.043031831 seconds)
loading group "simd"... done (took 4.818742035 seconds)
loading group "random"... done (took 9.688635651 seconds)
loading group "problem"... done (took 1.990086722 seconds)
loading group "array"... done (took 22.71445685 seconds)
loading group "misc"... done (took 1.448563948 seconds)
loading group "sort"... done (took 3.639487868 seconds)
loading group "collection"... done (took 19.575349984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522306286 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145837192 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13910577 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.162248691 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232720215 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158310062 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160018924 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100752905 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.539358746 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18947209 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157013963 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532915871 seconds)
done (took 5.791446339 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227670409 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095645169 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107726038 seconds)
  done (took 0.880886202 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078622901 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148975508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096072432 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07981819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096620851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.097270836 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.08071729 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094478621 seconds)
  done (took 1.375254227 seconds)
done (took 3.249458032 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750554479 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289805295 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207680581 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504228292 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178823597 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215444767 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68209165 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355790577 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.265635628 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10218943 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148506094 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388025486 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137004744 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694300897 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092277011 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127714168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186037159 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4574253 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084468595 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111253082 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117491475 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144508852 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129863853 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092419129 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187116624 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085204673 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199889265 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109042017 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082122884 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288206275 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202410392 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.724659422 seconds)
  done (took 11.058578085 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116440104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138411402 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098159792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140365176 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137667677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101599434 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086864365 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098695107 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124151412 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17877129 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132385634 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127485675 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095723192 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099970961 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104260861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246166338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124360764 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12169943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087298021 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105417564 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122818973 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114785053 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111303573 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109377652 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166627589 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208900458 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114932899 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1269112 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098347193 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113222812 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144635257 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144555615 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095679633 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081443125 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175984285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126170681 seconds)
  done (took 5.212817933 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193899821 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12285134 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173532844 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165989945 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151498497 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163285282 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118167346 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252782833 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.208666804 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180025353 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146896329 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102276999 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09865036 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086449623 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097222873 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641134624 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166776024 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137608051 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119619332 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103748128 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090321415 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.662253614 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109258853 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082846094 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10062007 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06648584 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164012478 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100644501 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191946539 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124243106 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10233467 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118680713 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210883547 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127879547 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122153148 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09839504 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096786828 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18076321 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089599719 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098779376 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10646386 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.159619002 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136517352 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122570549 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101951378 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098834173 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211912266 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097102886 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09997982 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.999168848 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183505768 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095882567 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0965863 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335091585 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099985776 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099907129 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079051347 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282483969 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142998573 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079886311 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098009781 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080695533 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097852579 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083790134 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386491871 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097875086 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.802648238 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086004792 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109647788 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083943047 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097765194 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104790316 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089027553 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115925455 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07707126 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098939641 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082518759 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09920329 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095805852 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084994822 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108970193 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08670169 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097957012 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163104611 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080564737 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11626114 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127385227 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086738692 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097209726 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131389599 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086313744 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09937869 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119309124 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10015706 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109072904 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099942345 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128821603 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097862782 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194363458 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082028685 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096262845 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110160855 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102637943 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132322073 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111309096 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099450544 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086442521 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096652979 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079348532 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165238602 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080812376 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098437093 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099551101 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095419646 seconds)
  done (took 23.394892241 seconds)
done (took 40.344551521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.347944837 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104298732 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104663168 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105008582 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10430813 seconds)
  done (took 1.51549407 seconds)
done (took 2.24117822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286201219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175677602 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097039098 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170983265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093769111 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177937893 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162879586 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114338373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186191024 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09620739 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16674742 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095026722 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078286058 seconds)
  done (took 2.650939086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097065777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117714678 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084317391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112190272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077387421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113258004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110189095 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102335544 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112249858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08683391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094945878 seconds)
  done (took 1.833582886 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095919604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115034517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083810101 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111705952 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078389634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112015341 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094926389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117597304 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112429459 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087183788 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095573187 seconds)
  done (took 1.829730796 seconds)
done (took 7.028998255 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096697852 seconds)
  done (took 0.81570026 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.025142943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.118008268 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117338404 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157115415 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308387173 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202592697 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56416709 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12978789 seconds)
  done (took 15.561275649 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.150587211 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085789859 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105029742 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086419694 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102204878 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103961033 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08824483 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100629788 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085016934 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103363318 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1003108 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086340912 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10331257 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088434907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101202355 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103396596 seconds)
  done (took 2.379052651 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121130396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121050629 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108396749 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110536466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106754398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088328047 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108251286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107235612 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088114702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105544061 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110047059 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091830485 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106537163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09758855 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091077604 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11084832 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.1039576 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092250941 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1093353 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109209179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092415527 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09707611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10605324 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091631137 seconds)
  done (took 3.306956084 seconds)
done (took 22.786404731 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164265765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111696477 seconds)
  done (took 1.008276678 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104218471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121885222 seconds)
  done (took 0.962828398 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109702739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097201454 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138301259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117571748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082456415 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096960298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132087956 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097856709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081568806 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098424506 seconds)
  done (took 1.791687133 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088692733 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116392185 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108635218 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104804852 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112644863 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102878131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097335082 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.105248178 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.120136161 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082902257 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108830659 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11729183 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107242226 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102745767 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113635252 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106779858 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094075835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105357492 seconds)
  done (took 2.632217944 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081116269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102485501 seconds)
  done (took 0.92417981 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086561233 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099061846 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086562477 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102257843 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099091764 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083176969 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098837827 seconds)
  done (took 1.393676433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48131045 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138179338 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259483755 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087090384 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123919279 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309368329 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098883541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104684965 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085505979 seconds)
  done (took 2.482318021 seconds)
done (took 11.934781661 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094630787 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119715594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.118263617 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.496304819 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.122225498 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081331237 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162786571 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255831619 seconds)
done (took 2.197656044 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151890359 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330929202 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119022679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067437791 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09687174 seconds)
  done (took 1.359919682 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080540902 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101563658 seconds)
  done (took 0.925618942 seconds)
done (took 3.184851199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081294205 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098155037 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080444883 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133499772 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08221955 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097479219 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097712318 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081447072 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100313754 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.081110261 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09790389 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081360586 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09656888 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079251357 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098021089 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082312442 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095881006 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079623955 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095371537 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079867645 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099656166 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079689485 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096124381 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079055205 seconds)
  done (took 2.95184144 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110931942 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10051744 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104346821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088680918 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.1037149 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104823692 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088043828 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099218879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087758528 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100641892 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102720492 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086394042 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100928479 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102644634 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085698776 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103566428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088053135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098489343 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101798826 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085303234 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10346173 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083018608 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102112588 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104972007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086053882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102093207 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102156202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082695317 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104732326 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085881319 seconds)
  done (took 3.650458219 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086893562 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095975268 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079919094 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104932849 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079543731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101730016 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079432663 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09743949 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08069172 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096720292 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081284844 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096314123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096063609 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080906351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098178976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082630988 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11049446 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080255748 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096247413 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081186334 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100898264 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080038167 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099145884 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079055594 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096175374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079552762 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096494569 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096826906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08028934 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096040416 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081912141 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100530236 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078911383 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10397525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083527287 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096619787 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083819849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096921971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080300095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097224792 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07924157 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096993611 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079937376 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102169074 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100198409 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082697096 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097556264 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08163725 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097808255 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08294207 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096524756 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079663346 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097999989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081297572 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101001045 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095984161 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081668146 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096329537 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080377508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097072524 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079085779 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097102165 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082553699 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097303862 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096226702 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103112691 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079995625 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098461805 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100872958 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08178587 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099113079 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094064238 seconds)
  done (took 7.284564476 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085519461 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107596978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082516272 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099263907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078314633 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097381167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100467865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080264135 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099663202 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087039091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097236345 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098525788 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081261535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109807982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080499665 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100258558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087392683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094845635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097896591 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084410427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099385697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084899122 seconds)
  done (took 2.791170305 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225861787 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106210443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144216836 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123115827 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099360517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112928745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104672768 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088226023 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104365097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103240177 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085835934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104505313 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089255378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102000743 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103598253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087543425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103878555 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104047542 seconds)
  done (took 2.750952277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095684672 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100697398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122742739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082539413 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100969621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086411463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105875427 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121127183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086523237 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100836276 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110175411 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085619623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102803033 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083058827 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104389789 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083562714 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102667272 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10031994 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093357701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105603395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106487428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092903004 seconds)
  done (took 2.93138025 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099094275 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101719719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120330375 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086186627 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096429295 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082134212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106571671 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082766567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108541932 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101988767 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083153836 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099317596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08919639 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099937256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106861005 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083408681 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102395792 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083921956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102617707 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09620243 seconds)
  done (took 2.694380971 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109653628 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101924732 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10181678 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094446449 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102099066 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101841331 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095498242 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102136031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102222073 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110088686 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101884043 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102726759 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094523633 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107117851 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102105787 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094416569 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.220865222 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112150905 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101848221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084606717 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126210213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102019124 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095272811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10203386 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102450585 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084676513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101941228 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107928301 seconds)
  done (took 3.726340171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083182924 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101184053 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080563589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098212753 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080646068 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098364977 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080902906 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098410476 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083111122 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097802614 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083546441 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09998908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082670084 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101198323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083132987 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101030069 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086255457 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098193388 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080908903 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098478106 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084059318 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100137222 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100446532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080368773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09858698 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082875895 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098783261 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080492787 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100558299 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080549036 seconds)
  done (took 3.487113464 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093880207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10826016 seconds)
  done (took 0.969262252 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081295786 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118379739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080821725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104213943 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106620686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083280235 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109912206 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088784406 seconds)
  done (took 1.539347697 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101377825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115803568 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085220675 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114799708 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115450654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100244078 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162538986 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10197326 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089507939 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098765085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118067034 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082617302 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10661267 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08392774 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106327612 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089955133 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099588704 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10746302 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085925962 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099431056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085248778 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112324391 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10371338 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080891138 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103089843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094473005 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110562283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103837667 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087138413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110988062 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090406315 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095362094 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083943209 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102430726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099779133 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09740841 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11355205 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087273328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109536644 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103446021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113029704 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096989344 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107393845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090784241 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114536733 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084988205 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102630374 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078683982 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098853077 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.104015024 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078900724 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102611366 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078414753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109007267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087913297 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115644117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100485083 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086081743 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10455588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086324238 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108086963 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085729591 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104209683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101298003 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091112997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106272922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091014072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096961145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078022195 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099425293 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110062444 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107060804 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109457334 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103157172 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085940939 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099186371 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087265518 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102764584 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090694531 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110467389 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102188738 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109178467 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109665191 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101374796 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087270695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111099348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082110521 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104709997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099039194 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099465737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100351694 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082135083 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09967057 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092848131 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104363401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101570442 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081057849 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109325788 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077713548 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102347868 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085538971 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102471969 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111175093 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090787186 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108082289 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109781331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094773271 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10150194 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087321556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098689087 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085498643 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104369954 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10954971 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078467995 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10476485 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086388601 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102671221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091539863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100872136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10297063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091967567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109138249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082313626 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099005469 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087187238 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102110895 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106868963 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091434413 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10033514 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078967381 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098248294 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087660259 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101884946 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106926004 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089876634 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105594272 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078290289 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100394222 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107000437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092109449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102317739 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085245712 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106821576 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085845065 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102060271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107542911 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086081845 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100788898 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089238201 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104212593 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07965829 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106693218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105474472 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083742109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106135148 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088301546 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104921163 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103335054 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083035032 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108322024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084948649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101588152 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084488465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101298835 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11151502 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08605552 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096834922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082287688 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109901919 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082560036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10233789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100915418 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086307929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102924971 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082090545 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101390646 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085448459 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133049792 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107771198 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086033949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10820509 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112356296 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08426876 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104227799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085138322 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104102387 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085090189 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.1094568 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107977539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090403842 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104555774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081822935 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107678351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110566569 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083029449 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100561125 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082853686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105734141 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092175471 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106591039 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103663345 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082888172 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103133523 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089195272 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105805836 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084428789 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101326784 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107365892 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084493774 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110333438 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103740626 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095027345 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106174892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080125137 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10696591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082860582 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108480966 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097841889 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082329683 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101574464 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085764834 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101204492 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088236303 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097189905 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091857887 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110583087 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102680432 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084062799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103216119 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093115965 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104145517 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087108624 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106356039 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107525792 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09846377 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102228821 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087582445 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112076152 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103462964 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079378504 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107938624 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08313621 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102201425 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083384863 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100693732 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10544201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094872407 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107539505 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078422134 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105362536 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101113594 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083077156 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099181748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091569085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105888814 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08658079 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111488344 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104052993 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086322855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107666947 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083927491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104612538 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085871166 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106436221 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104825455 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088215494 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101852686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087370748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101863519 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082642023 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104097944 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103901501 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084623914 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108505342 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086355182 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10312216 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087275965 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104095333 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103982223 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085740292 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102716987 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088370404 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103861121 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085583566 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105125228 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080678199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110639719 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103394014 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092219817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102934197 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081763957 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108636553 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08780116 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109289317 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103871421 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086332715 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104240587 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084580531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105763474 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111305767 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082565138 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112339944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090947992 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103680652 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106630695 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085556342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104631275 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083724876 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105185959 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086112761 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103944606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084825138 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10800155 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106708845 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085234078 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104844261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086315568 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103732359 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08578475 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097206 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084667378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103349446 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103677441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092491058 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104773017 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088477099 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102225275 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104873862 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084853404 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100082323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094036539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11318726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105476961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09393264 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103041553 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086493352 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113017467 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097322639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083360313 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102064164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083101166 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111938848 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087289751 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112186122 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085108491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103191515 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100844298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086251621 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102098701 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080014374 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101352854 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088481162 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106569979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085201873 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104523927 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114963414 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086963648 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109888383 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084986054 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105753511 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085886199 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10045589 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083624393 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102937131 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106525981 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086454558 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10111684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082547902 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103726509 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086938521 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104820607 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08502959 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10544478 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111289101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084881845 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106293478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090492215 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09831339 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107352564 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085651344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10409497 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084306738 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108431112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089234478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105434083 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111491402 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085988544 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104129106 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086439351 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102071688 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085504348 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104470777 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104960117 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084485448 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105786745 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09365125 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101272828 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087396799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103525369 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085252 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109102342 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105123259 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087602673 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112770942 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088042382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10502487 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110297098 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088887919 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10672928 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087402619 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105408174 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109990382 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084486126 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112120261 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086457624 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105003542 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086872403 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101231905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103594386 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085527376 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10275366 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090937167 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105706307 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083838174 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102223697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083471691 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105920931 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107922668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092911479 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106386086 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088906096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098956948 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081710978 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105198533 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102213917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088159491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107181049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091658311 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106456056 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086944716 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103974036 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111667472 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091642406 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110329152 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083406485 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108646537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105229171 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088152717 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105001507 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085900924 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105156925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090868413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105171947 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103630716 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094353173 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107913779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086928957 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105646593 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085079945 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104110439 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099418389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086689469 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105883554 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091842817 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106430228 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085405864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113764761 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103688941 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085107261 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108715623 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085056404 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11077407 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080421743 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105493618 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105912093 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087531047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098932732 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085549064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101742578 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088543044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103432805 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080704069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114261854 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111846132 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088701513 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103871009 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083697989 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099627414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081054505 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103294069 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106252596 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087367788 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113225659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085670711 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103653233 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081177065 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105182163 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106967872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089862316 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101415512 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081397614 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103288712 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088070333 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11223262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084695748 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104804255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108087594 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088687217 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103354466 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090662859 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10209532 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108142303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097499514 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106325455 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087299012 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110305348 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11341943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08749965 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100023902 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0868579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10714495 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086543836 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105317171 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105797625 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101543003 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109481455 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084916556 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10386961 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088017448 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103485886 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111180273 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087621059 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106565928 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090921428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106741102 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115222105 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089212625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110494326 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089085022 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106063901 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103355831 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086420292 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102789035 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084298869 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106638924 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088037189 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109835517 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113885242 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085501385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114563167 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093829223 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110044916 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100880473 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084870822 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103977766 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081328598 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105964195 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083980369 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102663497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084240422 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103105729 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086851026 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110482017 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106997316 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087145394 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105637523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080389223 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106627177 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088647221 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105554373 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081923792 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106115384 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105772428 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091783349 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112271137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086136434 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107433242 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087021243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105391453 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100075225 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092917086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104412137 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088933456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104201783 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086750092 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106238503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108710719 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091986855 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106804752 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088646979 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117334154 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107931378 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084718757 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102055992 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092598811 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103095471 seconds)
  done (took 59.071844201 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149833132 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0941425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100552409 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080660416 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119558754 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10133334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080877949 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100747718 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082879902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107198143 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080892951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100588543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114161193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128287359 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098947893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10901316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10019506 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08299622 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099455936 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082780514 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114329421 seconds)
  done (took 2.946998675 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106698855 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119585833 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117621646 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121249669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09224465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118331748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116991866 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116849467 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10208382 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11204468 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121075682 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117687703 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093112961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112809309 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113396118 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096660009 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120839195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110930083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119324791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097560347 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116605529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117886681 seconds)
  done (took 3.279194823 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099591711 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104284443 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090819896 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100448058 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08611749 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099809714 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090757446 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102934067 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109112562 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085312376 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.104293994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.085558845 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109569257 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081241144 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104835981 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083431489 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15690478 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110034449 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105312685 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087365804 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100375624 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08802913 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100578389 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08188018 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104599045 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123412807 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087236184 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103321306 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08696337 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.104032618 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086137905 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103252164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088349195 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10512282 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084760158 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104160382 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085991308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105953121 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099493475 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084571568 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105741988 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081971143 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105704438 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086926998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.103765641 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083866858 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107208863 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085859677 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.101227046 seconds)
  done (took 5.609169998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108432736 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164962558 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088367187 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147398792 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124315763 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115161769 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089854107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124557938 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104730235 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084572012 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125493232 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122217186 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106063045 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092291951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109789341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105860742 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088956288 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104175779 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110998183 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086997546 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111415143 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113448424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103678219 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120270585 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110741494 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085777862 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106124004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11160443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11962331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093285798 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112231973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112652844 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103219538 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111945513 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104876865 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08880001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124592148 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10649088 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089515512 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104526381 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108416239 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092757481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112474107 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12471658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086330673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110967316 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10707644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083792746 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119244458 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109349858 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096655681 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123303422 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110289077 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106726361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09199775 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122876145 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106542387 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085821456 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110130312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120638754 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084892909 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110870104 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122349696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089473657 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116245527 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122511843 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11238304 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092825045 seconds)
  done (took 8.301483253 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097514273 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114273222 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124773881 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124266109 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093894157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11404372 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112565427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112438184 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094499804 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118203543 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113070127 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141973696 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08919072 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117429829 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114118676 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094148335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113510209 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114017085 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113094804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094631067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114854499 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123280912 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114302576 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104001563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144320877 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108727536 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113051064 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093958563 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123280022 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114071146 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126505987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113308168 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094830907 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12388976 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126749111 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113934137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086290165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113631348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115109007 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09418642 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108507115 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12473651 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112916673 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08909687 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114329615 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114080122 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104895222 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127163931 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118076654 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120333617 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114846706 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104522762 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112997929 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114302132 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124251703 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150293245 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124440749 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104570559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113458867 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124300716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123876336 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132794292 seconds)
  done (took 7.882765383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116363908 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12171404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127401933 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102735018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085219844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114196066 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08439727 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104815173 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120947274 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100044999 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122486508 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113284991 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117969103 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10337357 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114343066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117387136 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114361805 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094996359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120489655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114145463 seconds)
  done (took 3.040586935 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09629607 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12766279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087406018 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115053803 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110515303 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094174329 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110742795 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110599302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089397798 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109685207 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119430177 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099350522 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107404184 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11445691 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099122976 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114034522 seconds)
  done (took 2.537291772 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099013539 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11980237 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125817161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086872595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106485743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103912664 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087646026 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103206832 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082939034 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124240911 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107969348 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090800565 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107720259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085125975 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104127289 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090251383 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103471941 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104905893 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088009543 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129550198 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118360772 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08643042 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108559552 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089581344 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10770972 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113198388 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087872765 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105672042 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085853535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109164434 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106679381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095903863 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104409874 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086223868 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105640202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104405177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087958052 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108005684 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090660679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108108293 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104988724 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088004187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107190781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089103588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102819118 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088273656 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103543266 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114033447 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085263014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107603333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087475754 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110171944 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10780009 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099574444 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111451698 seconds)
  done (took 6.403587959 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102419884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111951326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082850776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106208058 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090282113 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109671255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110618226 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090626173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109405466 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084821617 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1089221 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110953696 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090435557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110597157 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088887947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111710893 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082563493 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109047128 seconds)
  done (took 2.649783258 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093134073 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1068646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09525855 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107955785 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088341397 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110876962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103261815 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086759847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105446391 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087526709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107531273 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090225012 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10579767 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089358448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108286623 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107370303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.091068035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105928558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088113678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102530426 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089493095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105583414 seconds)
  done (took 3.016095834 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123342947 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127275898 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094065851 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237231581 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105788554 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135062133 seconds)
  done (took 1.662960332 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11196187 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124032786 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108593141 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109765046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118436527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110120035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089621762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111084716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12058351 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124863179 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09133301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121185507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120617224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120409614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098646993 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117322328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109671754 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089666278 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109037633 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131753699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110726718 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101675471 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110976682 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110306183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090138327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119960125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121089317 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12555858 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090779848 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120774463 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117356375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110791509 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101778409 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125997004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111923511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120828599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09024786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132126979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118051161 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120556974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09146856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118170066 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121443111 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116801661 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101070254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111680355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116443309 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091129992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111024306 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139359258 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118363866 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121175808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097082046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122280313 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120399117 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140666895 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127074761 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121195157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097772175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126281706 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12179746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117977984 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120596926 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125204401 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098392797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119496371 seconds)
  done (took 8.350369317 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105627504 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128439319 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11063333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126573823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100624376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110579705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110518196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089944172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111657222 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108727662 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156540481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090914487 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121119472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120755093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110269676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090470108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111948032 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120999046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089485434 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140367162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111001006 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121151533 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121722693 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120225787 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105912427 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119036021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110078678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089393034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112053876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110608423 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116859188 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091066272 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121308738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109336626 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10013842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110439116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111517071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117366371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09076041 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118314842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12149737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13275599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091498657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111130877 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12746178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110897576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090601603 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109229636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090395704 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11040877 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126726515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125608289 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126229363 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099453679 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111242814 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111731392 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08966778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110970075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110662273 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117406566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100360204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110945522 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140512831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110815509 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091625619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120827859 seconds)
  done (took 8.215101854 seconds)
done (took 158.488040486 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104233287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142051075 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100773883 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171248284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10834495 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121110203 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14028322 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102533129 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108839469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087626939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109190508 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110407688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152874903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108089139 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088150846 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110305852 seconds)
  done (took 2.713313642 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203598493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.273069167 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104819692 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108562551 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113211515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088482505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106226037 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096240564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109445237 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087530812 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108160611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089196684 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108253586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087969809 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110637534 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107695978 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088175105 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107589828 seconds)
  done (took 2.956684464 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115954183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148356959 seconds)
  done (took 1.120770024 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122754316 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18548966 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302741416 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15735128 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121509326 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131398334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157953303 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134111115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214543858 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126680218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125483174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120379054 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123287626 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.1184349 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117985869 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100392029 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146992589 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115915641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097489511 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120123285 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140784443 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088500491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118895245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116223327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196977212 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102189146 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109107167 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086585434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120795651 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11746765 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094733967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12884533 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122534591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176019647 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126847429 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.162149849 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12132963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113163838 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096942195 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114545123 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121515829 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101280848 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128809176 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120470677 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088983853 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121918649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087888026 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109135742 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116820447 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101718385 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116643184 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11400902 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162648065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122040887 seconds)
  done (took 7.766108136 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.830307512 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15700415 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114343943 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.906886811 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141293837 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127476437 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.802770036 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137194494 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236098295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.800644941 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133188616 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101000036 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236987457 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262782341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934564901 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295210915 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.707576484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105277113 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142886645 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157346768 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119489352 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137297747 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110576427 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436776817 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118478429 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11234314 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096673069 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122336811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164295436 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113213731 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094135613 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203049002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252695984 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21146166 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094704876 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113380275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1107238 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178706532 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273878987 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221596065 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181036167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088311518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111977391 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101460609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13200321 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108959396 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169714991 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178776741 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196654975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09365958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122727519 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120488141 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099444655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190218278 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102457851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317322171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324974853 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11270972 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119834802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107729901 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271296388 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125786092 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231513504 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116595677 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217967595 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112935782 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807439806 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174948148 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091312122 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119236723 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119218694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094872233 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121880619 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172353032 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396261616 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125285 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093625544 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112637428 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242117769 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092311086 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111164932 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166621802 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115680305 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098800085 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125495108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122163372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175798655 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231610568 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123983228 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120375794 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096069649 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126172205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116549577 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214911887 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227081829 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167989127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212777342 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122502717 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191005135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174118076 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120580322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176526455 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118988188 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105479973 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124007635 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225184221 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149209585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124879158 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096220209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120113443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152089402 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114415465 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097677707 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195201832 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.468866383 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172856367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110682961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094235327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121062696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165423955 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11938241 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264002953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099058071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196302514 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096913291 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111509488 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120064374 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169482126 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123522239 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099040048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123824586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121086604 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.240408386 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225382967 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124553633 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224218435 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185734868 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120618862 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177551658 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120952856 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172344341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122605701 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12100636 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096738926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798993202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124795648 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096707215 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118132236 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192533828 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11231148 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104629255 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113460783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088429422 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787529904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115680934 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10392554 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127396693 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120681336 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097918356 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119439827 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116860633 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167295537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238411598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122727115 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097248553 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114691221 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164921655 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117247353 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091000618 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11375012 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09178183 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121109195 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11641613 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105194342 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197533042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168284879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229479992 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569493308 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092209474 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114042167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237873442 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092018875 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295835452 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120148777 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23260098 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172209027 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123718293 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320497305 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171139362 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191375388 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094177532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200619808 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089141793 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120489712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169829603 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113287661 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118566589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168696271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125564268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103564301 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970507307 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113515903 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228953841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10890706 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177966926 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116506987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101015351 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294680474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112127744 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107288711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191697241 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093468129 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114679129 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.715785515 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115348391 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12170766 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098422284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230501933 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190402263 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098817965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120529235 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121650206 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168828618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211958404 seconds)
  done (took 44.532782333 seconds)
done (took 59.942833652 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302268947 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217837235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262167524 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174017481 seconds)
  done (took 1.915068047 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180475546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151716042 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125971852 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109307192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155432239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086984413 seconds)
  done (took 1.69406069 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.392718297 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278514654 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24515048 seconds)
  done (took 1.804300076 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254232841 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273151257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332138264 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42159199 seconds)
  done (took 2.264038326 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283483854 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.148464613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140295886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170880988 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.207747132 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.298867393 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.169864532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.248476181 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.162496246 seconds)
  done (took 2.759973653 seconds)
done (took 11.326242012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.247406764 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 0.273524291 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116951493 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09780774 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.160489888 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108711387 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.229103123 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128933917 seconds)
    (9/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098490461 seconds)
    (10/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.159568025 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131337724 seconds)
    (12/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.201869376 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.222311725 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125600717 seconds)
    (15/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.245230124 seconds)
    (16/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.1275698 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119637707 seconds)
    (18/286) benchmarking ("sort", Int8, true)...
    done (took 0.23080855 seconds)
    (19/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.202795589 seconds)
    (20/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193390839 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.207887596 seconds)
    (22/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.222563145 seconds)
    (23/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.245623515 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102101018 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12034174 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229902825 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128040131 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112926482 seconds)
    (29/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11454883 seconds)
    (30/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153713029 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.23159176 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104708065 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12122844 seconds)
    (34/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087093652 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.151708333 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140780327 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126976756 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096847951 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.214407979 seconds)
    (40/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.212843018 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089038034 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177284626 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091969117 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120419545 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118680754 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.13671026 seconds)
    (47/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121466724 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09561423 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.208287593 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111230932 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136789159 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123206418 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.124452844 seconds)
    (54/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157980294 seconds)
    (55/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238800416 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114361622 seconds)
    (57/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.150489899 seconds)
    (58/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157842802 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.174064923 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.17026688 seconds)
    (61/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.12255432 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117972469 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142657055 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188688504 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176232004 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089301719 seconds)
    (67/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118294855 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117818099 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.094696463 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140938008 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099046554 seconds)
    (72/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101926791 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099685066 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111425125 seconds)
    (75/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076979506 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094736152 seconds)
    (77/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1438661 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.201279081 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.231203959 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.158543885 seconds)
    (81/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069368928 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.111215957 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.150773108 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093180606 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089177412 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196882092 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137286773 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089630255 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115598585 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172817252 seconds)
    (91/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077774637 seconds)
    (92/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241239726 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132564747 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094967613 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175014982 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073063571 seconds)
    (97/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120772396 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.206278469 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088860102 seconds)
    (100/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187821905 seconds)
    (101/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175415274 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07206774 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112774601 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.23435189 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097447778 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114683715 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069053183 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119341637 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08471499 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096727627 seconds)
    (111/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118967842 seconds)
    (112/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129499609 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088794766 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126405834 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069354563 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.189643538 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121303023 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095482482 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118787736 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069934304 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.136135633 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112276082 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069119947 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130660181 seconds)
    (125/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099326612 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087787779 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091569398 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140064851 seconds)
    (129/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10006445 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119807183 seconds)
    (131/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101250149 seconds)
    (132/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119013395 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088508283 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118017345 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096153466 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090769659 seconds)
    (137/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101128143 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091489012 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069575038 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091814618 seconds)
    (141/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067497762 seconds)
    (142/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094834852 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124680359 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122123494 seconds)
    (145/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08933896 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121199115 seconds)
    (147/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116312694 seconds)
    (148/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112757451 seconds)
    (149/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07748703 seconds)
    (150/286) benchmarking ("sort", Float64, true)...
    done (took 0.239287778 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124572395 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138715995 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11379696 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119433678 seconds)
    (155/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090979696 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118421473 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175818895 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178464112 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142117137 seconds)
    (160/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124967188 seconds)
    (161/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114454714 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192661754 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 0.179281299 seconds)
    (164/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165661058 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089339561 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177433631 seconds)
    (167/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.131612785 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122017601 seconds)
    (169/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068942141 seconds)
    (170/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092665567 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095782674 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118970855 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089621105 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092237712 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093367279 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091734012 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130415249 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122975027 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069302044 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111935911 seconds)
    (181/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096783689 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112451331 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068455618 seconds)
    (184/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182662842 seconds)
    (185/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068809646 seconds)
    (186/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.068350053 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091365779 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142690059 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069840441 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.231286112 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197548693 seconds)
    (192/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069031881 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11078342 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0691305 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117440693 seconds)
    (196/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070016753 seconds)
    (197/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094336585 seconds)
    (198/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175597737 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090962973 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098450574 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121189635 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.140275326 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.093503283 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08994829 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112686781 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099480468 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114575309 seconds)
    (208/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175554766 seconds)
    (209/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.134583732 seconds)
    (210/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115227528 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.153724998 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11903016 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069593669 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11156761 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225794609 seconds)
    (216/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070403395 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09279609 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.38585466 seconds)
    (219/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11923139 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088723645 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139792407 seconds)
    (222/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120832423 seconds)
    (223/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165072582 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092479285 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089610615 seconds)
    (226/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113032853 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09000507 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121849195 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138465079 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114432394 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 0.183910816 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.09204951 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068698957 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165553935 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090096412 seconds)
    (236/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.102600689 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088747989 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112222149 seconds)
    (239/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068791513 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079302117 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091492856 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069630956 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095872345 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119733332 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17173388 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167039528 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089234563 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120980935 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068930195 seconds)
    (250/286) benchmarking ("sort", Int8, false)...
    done (took 0.198436316 seconds)
    (251/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113876375 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.159248303 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11842993 seconds)
    (254/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069193181 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092907032 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069584311 seconds)
    (257/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069142279 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093914991 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097730739 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111497436 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069476068 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078982198 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112581885 seconds)
    (264/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138102924 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08875591 seconds)
    (266/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090909376 seconds)
    (267/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068587182 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096160416 seconds)
    (269/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109084347 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097154695 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092238365 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.13471439 seconds)
    (273/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.091889031 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095697904 seconds)
    (275/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067883856 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114269729 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182745146 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114508662 seconds)
    (279/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09320903 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089847096 seconds)
    (281/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11344121 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118323587 seconds)
    (283/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069831181 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088383089 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113657253 seconds)
    (286/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070205121 seconds)
  done (took 37.022627415 seconds)
done (took 37.915728244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102663089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153985377 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098238675 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141364702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125775705 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094007164 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12100572 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.12407641 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103239259 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127250321 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100715766 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094407614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098744091 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122779294 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12313313 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121389086 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126378392 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095333271 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121922315 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111459543 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09826791 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110571476 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091191689 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.094367731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10244347 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119392616 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095574 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124094515 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088508511 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11217505 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094692623 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119552305 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087907851 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126887584 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118577081 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097767501 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123113122 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099432541 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114439471 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089177342 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120078137 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088010805 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118848141 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119699397 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095385715 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117193951 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097865947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125636049 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144279505 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094235322 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120307029 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10011628 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121598137 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.09541805 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116881182 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097586859 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118134078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144313362 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097954438 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117450572 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096877448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120632605 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094596365 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121514894 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120858939 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101141098 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124495684 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094843851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12224171 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093832705 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112640395 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120785082 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092749539 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111608234 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098288699 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122973578 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088983996 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118315383 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095751604 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117546306 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088584699 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115178056 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090859699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118736512 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091167946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095167295 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094129918 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119455581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088704086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121124734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118601478 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096814017 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114278653 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102592056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112576882 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095316645 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112695695 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089081553 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115069774 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093104632 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112148576 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091929178 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121421199 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091060617 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119136938 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125176097 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089896256 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118645669 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088563978 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112095988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104310896 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122622292 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089225643 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118367099 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088030769 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120506133 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112102065 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08968604 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111582883 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089854841 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119028489 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.090349854 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11438708 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096560895 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126908859 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089523116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116376285 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091639143 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113018864 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095769047 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112548249 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089779796 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115671645 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079697869 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115453294 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089320301 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120357461 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091640502 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122870786 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114537642 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099337467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117222261 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095654793 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118136062 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089215732 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099816317 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095338677 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115736046 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09177218 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112116588 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090969641 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112111864 seconds)
done (took 17.317775065 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08999836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188012356 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157225966 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147769483 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109370795 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114602241 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12478985 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145170743 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092360345 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145739898 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137582895 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110939731 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153043451 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088427344 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11444615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093324479 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115361066 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129265042 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128014688 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135808554 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167926935 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113089853 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150544156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114635454 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122849258 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130812093 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090854285 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117086241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09418134 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138443123 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11034868 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117058594 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089886856 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137237831 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130706565 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097834332 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113835175 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096434394 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114119666 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0888609 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144929473 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13620527 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118318938 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096082375 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117356622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092764527 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115449652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098754612 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124483 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11787267 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10518028 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158673661 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116791504 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124408919 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089468297 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124129003 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098925306 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115690343 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09033296 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117206613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088879068 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116485572 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128539477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144597521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094319015 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124021062 seconds)
  done (took 8.800376664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108070811 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143971422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13186165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1096616 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113485251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090989994 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114129591 seconds)
  done (took 1.765062276 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091103871 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139996491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117201957 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141322678 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138999671 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117366584 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126096103 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090652705 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136596788 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116160005 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115804035 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157448007 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116409133 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099492465 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142984477 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090422017 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142256966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114899311 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094429335 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14201692 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09430982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138169964 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117487435 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091039222 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132733626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090787874 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167890624 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120243511 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092503453 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.135998401 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089279565 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154160111 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133149678 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102655176 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114684625 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109577783 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134060238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089258622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132623361 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120785792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10935744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118196385 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092535757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116688735 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095216041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.131899419 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11916598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09198808 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118264903 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115643352 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116030998 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109026072 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115845568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095335301 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117163267 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121655422 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101868401 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115601266 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115827229 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11793228 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11119439 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135804261 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132798773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110443492 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11881532 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134184186 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108975229 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119335615 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09302574 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119338533 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112112312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114648583 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092464448 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129440586 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092925926 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143072809 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142206365 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093070047 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126743814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090519278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11691116 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115158665 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118152542 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11965537 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091295493 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11959225 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094565891 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11476011 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091828758 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119858736 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089693433 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117660841 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094279739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116252477 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118577745 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111319016 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117739822 seconds)
  done (took 12.172371553 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093209723 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117241905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095427181 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116605997 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093743527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116838262 seconds)
  done (took 1.599556018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119493991 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120700506 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131223005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099692296 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159112123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135353572 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110683768 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125899358 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135239232 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104395331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135198073 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110184757 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142092523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124352536 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109499268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122262988 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135728083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102328239 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1295078 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123216587 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114678487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123934262 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098832684 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137898023 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120515146 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097814761 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129129868 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130098993 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104395407 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12696868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123750905 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095967791 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123643388 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100990281 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136014943 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123536324 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097742361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121747891 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128150791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095920148 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136689605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098860748 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130584156 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12146291 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100814019 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124913861 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121937048 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103719333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135030762 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121026107 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09691059 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12385198 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096076301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122695157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123457332 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10089552 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122242727 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111153942 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124353239 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12415811 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096034625 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121672186 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125720787 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095733799 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132117681 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095966761 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124210367 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124535554 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100259962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123675514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095559352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121530106 seconds)
  done (took 9.475141819 seconds)
done (took 34.760965327 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691323593 seconds)
  done (took 1.653840514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.840140956 seconds)
  done (took 1.804400822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.460707454 seconds)
  done (took 18.456789127 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507980051 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.604664619 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998590725 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174145886 seconds)
  done (took 3.253886467 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942139722 seconds)
  done (took 1.930023066 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287971615 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237919635 seconds)
  done (took 1.498856131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771115414 seconds)
  done (took 1.754239762 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.439491663 seconds)
  done (took 2.415948487 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337373307 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185591814 seconds)
  done (took 1.511771643 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.560948872 seconds)
  done (took 1.540393805 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.305507119 seconds)
  done (took 11.292707456 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271908547 seconds)
  done (took 1.263642719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305951529 seconds)
  done (took 1.290404384 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.587947891 seconds)
  done (took 4.576888668 seconds)
done (took 55.217743295 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100905536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128465736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1046155 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126269681 seconds)
  done (took 1.442469251 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106868116 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123060637 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106347674 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12409226 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131981864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098030202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125916744 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103547501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123223088 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12438403 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098739264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122138316 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10127134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124795676 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095552581 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126746092 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128093549 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098144283 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127095818 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099013302 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121765315 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125229857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102750547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121819792 seconds)
  done (took 3.752301237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102488231 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122010491 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098899072 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120700035 seconds)
  done (took 1.43445193 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.1025567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133872487 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108110528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128391967 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13382372 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108640013 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119906637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094531467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122167755 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102592363 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11831947 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143120838 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110372081 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127152536 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103641937 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116968587 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118526451 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109260949 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127902399 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10292072 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121106473 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101670996 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118285252 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136410779 seconds)
  done (took 3.801162707 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175149317 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13047084 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142047642 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097428317 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163688988 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143185068 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091185859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14402252 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090303198 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133158543 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121062715 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136915279 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131208455 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090149988 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116855955 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115519621 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104804401 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129731849 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093571431 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13106983 seconds)
  done (took 3.475048326 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100559769 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120637162 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090936183 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118621146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102081159 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124184866 seconds)
  done (took 1.65360474 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099916057 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117423214 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095820857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118177899 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09770663 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115908611 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091124451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117117217 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091550009 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116747746 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093482028 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115871806 seconds)
  done (took 2.267128543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.516683782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12440545 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122288425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.092095232 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128026616 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091068431 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133081249 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094066002 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145743194 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089820553 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118419282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119377395 seconds)
  done (took 2.77223098 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246743059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127225637 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288429617 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393801894 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186579287 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170973682 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306754452 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169104642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.237724712 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168542708 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231211316 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18036191 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13214308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246109958 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144164235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121618735 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222700547 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312098069 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155635844 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22257465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174722693 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172065167 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184653346 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157837145 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141996193 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200261212 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122964621 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106971645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216261515 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183146823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192144738 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164839096 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165346366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237565144 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295987257 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198960479 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285840659 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137271 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145347611 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170552543 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275060801 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145953293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241671889 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165637896 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107845192 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238481708 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162530952 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205016197 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149539047 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146577127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206774802 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201065068 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.247463272 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140781031 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30987264 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15545998 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176082906 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194520426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25476168 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20785041 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224608351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096552142 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21867143 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201066061 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191451357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171614195 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.197272852 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146956562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208887729 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201480078 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192985821 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175917033 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212131983 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112918445 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172402489 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203256452 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174694753 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237082045 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217969046 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097728893 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172902548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152751811 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135023465 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199574904 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101170947 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250627741 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147878136 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167226545 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215322903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161796444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164891046 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191263738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179909097 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150636413 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11299153 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157208525 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130432785 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202327798 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116596445 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160305604 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153880273 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13368326 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173912977 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125774872 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190191314 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093165365 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171284909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215386526 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102168117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169306474 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154977396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154463624 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195954806 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229857295 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116733151 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137222236 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213598333 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212825115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11802678 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20789867 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21023814 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148092155 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152819244 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204538178 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246181447 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120316935 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235283313 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151391055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111412745 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136394045 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18680807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161098951 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165360187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137018609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186385426 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232537027 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101010965 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141094627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205291975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136588748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135588327 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149928961 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149689407 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113582658 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146252444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148604401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180444994 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182164793 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158045563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17065398 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150764702 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24498674 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142662607 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127268196 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151213931 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123679485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218867204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228258493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107851651 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232928293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173167514 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204506298 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171122883 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13773429 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181431404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132677227 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095388541 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225953747 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169205662 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166055214 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200491411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226047089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197527955 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187386953 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170172365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178353563 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16946621 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158141858 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142210669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166040574 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163149861 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125007587 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.115329289 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136990405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153954598 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146387287 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109932693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228483441 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176828799 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194097198 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163100967 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154424957 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186543003 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132141807 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178954426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179780722 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150293485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228408677 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197915255 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193214138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148295554 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233630914 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096664948 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129047404 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145593645 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172632443 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109442729 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139047944 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165788345 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186569867 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206959726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175650077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212580904 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218258462 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197484342 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098879963 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17181646 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18280077 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181972585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183193678 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145149344 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153780918 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181824588 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152984316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216711936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171007319 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178953353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232406421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154293911 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107413326 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15305304 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175349806 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157363188 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177122792 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15052101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141023145 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157580026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133274638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165674498 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183800956 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166573639 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184169239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154385674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219797187 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104365966 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166275304 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16383138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165531139 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110937049 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17179212 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198902827 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146747898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16408738 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186623895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134528078 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311554774 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205172698 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221579452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112208546 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158915644 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165361677 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166885092 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169021272 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182804639 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163152554 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218729659 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160906869 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111541202 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140911833 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151814197 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155682348 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109201531 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150683911 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.181975499 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14136959 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186276768 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150973405 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16330385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175798054 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154304142 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14782851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153062295 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222018158 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187748617 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223574054 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153092398 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179627488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206969936 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128532293 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106668442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137155315 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183138182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139037217 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198047196 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217911091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205017709 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187338008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202941596 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115357213 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123316625 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161940006 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171955236 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208181693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148613855 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152768349 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200123822 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13968748 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133873505 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169706142 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291731719 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148839477 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193128009 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08115352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311662642 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10342109 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137151862 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16716615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188310267 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139846795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157620752 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198313348 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126404491 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166689071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153154279 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223690371 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217213416 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23296409 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187748825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135093991 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133844515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200314468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192314908 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160097745 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113369852 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219271104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201146845 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198468009 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147143764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171758441 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172856262 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163555023 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223021763 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10928534 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235190719 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110374976 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22708692 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15706224 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140986689 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178223061 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191240735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144046629 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185776959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186727051 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138477248 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137516006 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164178879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182390934 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152824227 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129038023 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183334932 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099570016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230309246 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268408825 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109256983 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158441659 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150164441 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13910754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159584287 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163813942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140631689 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140731128 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199329302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138456717 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189076005 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236930478 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173653662 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169234374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150377482 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.75216102 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135320886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198702281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151540077 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188025576 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154388186 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177112109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163922118 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170927128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198697456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160190993 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234711898 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224993802 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184328799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134231206 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162044606 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150991331 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119610984 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156674879 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172687226 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162340753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149992258 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183156323 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160006361 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137624019 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142715322 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204332473 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151752856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187043946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184664297 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141816951 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177206955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193845922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137511949 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193127171 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218792606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11709287 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154223457 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138562016 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154882287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270526133 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098944095 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214849109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1919543 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164986083 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172872696 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151060357 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19692034 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161289209 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21878404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146004078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158777737 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134664296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141370514 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135622548 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158701564 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171063382 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152424083 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164416972 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142216658 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222999526 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099683229 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148914347 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292720406 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175419939 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248243797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109211862 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139234385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164109163 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151467346 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181252576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182452879 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138960381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13818181 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137819364 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131290401 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114906558 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159049827 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223604726 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134423814 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238980692 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138859166 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253296888 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143729052 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159168522 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089445614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135276049 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154647183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15037298 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154061268 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197294088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271513956 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149553924 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135777946 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125427679 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129875247 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138189472 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167004009 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165845635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184659025 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144431538 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083650262 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160434193 seconds)
  done (took 84.098694262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171438764 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13601041 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15114636 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205015603 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179525483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294762886 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213229215 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257520676 seconds)
  done (took 2.695917325 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095930915 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.153565102 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159814058 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135180755 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093229554 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122350232 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.370659634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134988583 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118598796 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123958897 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174367255 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096011113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.586916851 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091741857 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122737029 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109920351 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093950288 seconds)
  done (took 3.865553839 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.189437527 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48172977 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.979683659 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.213163696 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161065011 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121266049 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.696014876 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117352239 seconds)
  done (took 12.051523037 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.127145556 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147022143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137167597 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167341119 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152309738 seconds)
  done (took 1.826856845 seconds)
done (took 126.12138835 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100013309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130294814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100002404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132014541 seconds)
  done (took 1.543908802 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099657061 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072064875 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103728297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07635582 seconds)
  done (took 1.443732358 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196221053 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170452509 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394349313 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073336328 seconds)
  done (took 1.592385842 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11700877 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136035239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105928998 seconds)
  done (took 1.461301889 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108533223 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131482453 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105124356 seconds)
  done (took 1.445760812 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108398156 seconds)
  done (took 1.207874064 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113052861 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142554967 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11461913 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142264764 seconds)
  done (took 1.611397331 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100789306 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129184827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114930464 seconds)
  done (took 1.444195636 seconds)
done (took 13.210146258 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107923497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427724475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419667253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112909948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727695497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382434739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031897941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148486997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172066813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094938676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141795162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700818663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996202189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375386902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983094641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373249183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703054574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094580214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121902021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095496981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016386653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093245325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123768618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093541034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704057545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428371908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096057933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373153609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094027241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132230369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408412255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096571015 seconds)
  done (took 16.960980313 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100654469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183113504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133396712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096873924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130682572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096538525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127049284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096690039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186134012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124713255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112646385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123718045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128490013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097066258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1438306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094678598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12731209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094926269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122973978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12407691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114159825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123649906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096056507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123738448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095886694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137876242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12560526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095139983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12381132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103547282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12656478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096510407 seconds)
  done (took 4.912448052 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146226453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191338689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135541353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128556654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175378669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12645128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200729506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148328321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190105469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096282815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142688611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094404493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158305607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125106902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11704111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123955526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09667788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123306192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121642159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096577369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142531539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094734746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124903943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094525644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124885044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138757972 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097205452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12353278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094680707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132570792 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098046689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12475019 seconds)
  done (took 5.236567942 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100006476 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128231611 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111316727 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140766793 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097892967 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127564533 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099372025 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126967993 seconds)
  done (took 2.040862076 seconds)
done (took 30.253061645 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114244153 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130002576 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109625122 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138038828 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105851966 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137315719 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09309186 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.137070507 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13625241 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104379205 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140741192 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09505031 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125234975 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09416658 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137995128 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09940473 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137642193 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132616104 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.11061526 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137163874 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095835156 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136510105 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105908843 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138129465 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136970368 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109159468 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140215614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100529238 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125382789 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096439705 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129033199 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107120573 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125940453 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137634146 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099642696 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12781393 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096306454 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12834357 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109097843 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135886828 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100270005 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134921346 seconds)
  done (took 6.130829832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112667573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144755887 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108506693 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082476585 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118505785 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081848481 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142191776 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080020273 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111368785 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111150535 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104083366 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079795992 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080168734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104060597 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078715934 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076560932 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110270508 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076822875 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07768294 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107708052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081631487 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102777309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082030294 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079975329 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105562101 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083525948 seconds)
  done (took 3.639363835 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103000092 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143952951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116504157 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.178846917 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158911601 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.103074854 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13783313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14174225 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111700972 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122884421 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09823247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153654861 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112394381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13134019 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.125823032 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109380091 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137691161 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097359822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13495119 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114947054 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140208263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134048022 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113206861 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135173254 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094297028 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127217603 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100696536 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14421934 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12952503 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10501879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129598993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098583334 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125933661 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105499294 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130148396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125603377 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115305797 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137953656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103696436 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126689676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103197603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127365715 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144909694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135777488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124100362 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101722844 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129188726 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134107966 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096068766 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141896155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10543749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124136237 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098031844 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125797559 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095814102 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14040297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096145508 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133534287 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132845569 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100970765 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135697393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09914424 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141670192 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095918428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132810314 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096526313 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124380498 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122899047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118521551 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130984832 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165116842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096010409 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124892614 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105657548 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133066904 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101729573 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12487061 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11193885 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134800354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127210801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1078913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126217163 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097990837 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143085468 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09789197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126796576 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096599662 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131775706 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097215857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126965585 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138548822 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094613477 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127397087 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109035639 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125392537 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096748133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13203913 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129071511 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095080661 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13756941 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101509074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125665858 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105565824 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125555743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097605715 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135135515 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128719563 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095349207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129299467 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102633836 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125788499 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098766322 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12838342 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096462932 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134939468 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131453637 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100827309 seconds)
  done (took 15.193949678 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23511872 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221825125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191175464 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30228044 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136565347 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120467511 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218824259 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161889598 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125358901 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163042806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173724719 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187687272 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.146690201 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185367654 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173478138 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126131095 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143840492 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139797971 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25208396 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.267020512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.147407224 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103725233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163975269 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163922209 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.140249781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135081754 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112557122 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.146989189 seconds)
  done (took 5.916590514 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11289547 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158529024 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101162022 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148070601 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153316889 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094611548 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130432264 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126658488 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110050183 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139576025 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095128288 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131600362 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132046502 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105497347 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125294681 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105282405 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136011003 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097054453 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129782269 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100057942 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135819432 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133817094 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098769849 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125093886 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104526883 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126396911 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089409787 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146817769 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125200824 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118260415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124613559 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103360131 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138840445 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125751508 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096001293 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127001623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098210467 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126483167 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.09726882 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12432607 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093998372 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109153032 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094895894 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.141563113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10255185 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112231176 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102210653 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131797542 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0969739 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124457515 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0982402 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127963259 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127595817 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10362269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127651951 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097241143 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129485421 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088357177 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.132045935 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097198314 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11576917 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094435051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130461079 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091444585 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134323478 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100826945 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125604284 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098027852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13055258 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102244084 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128603197 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102185828 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124456527 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127409965 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098810355 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130712131 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098745504 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122944871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095417051 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126015447 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077111952 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124432026 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076590124 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098653911 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.124032847 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12431566 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098629292 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131513601 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112321104 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126825355 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133396129 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096616755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123731193 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099386371 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113871584 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099359411 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141922248 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115069835 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126217093 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123849982 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110563449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127500022 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095404466 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108283587 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104866629 seconds)
  done (took 13.265619573 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133616934 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156773584 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127314158 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114735245 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.16013021 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15982108 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103554602 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133698461 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098466739 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145534059 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095506693 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136440231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096359193 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141073115 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159887375 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106257345 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128250427 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110893167 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129965846 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172843294 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114833325 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144869324 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143160412 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096533853 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132268517 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.113188433 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163264178 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139907865 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110048101 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145968617 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109888962 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163988694 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146713273 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100396852 seconds)
  done (took 5.576189466 seconds)
done (took 50.831644005 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225055361 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.441676887 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199643247 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.031113859 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.265193522 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22188923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215726852 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198124408 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.87233489 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204983352 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44258564 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.71504563 seconds)
done (took 60.157845197 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.263625017 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.353883926 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482925059 seconds)
  done (took 3.96254328 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.80192653 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.174363412 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46514192 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199919436 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.221656043 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491942935 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.909370884 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.592270957 seconds)
  done (took 28.179166399 seconds)
done (took 42.333692966 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202640518 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254292829 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.23401454 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180618242 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314161825 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226050386 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.560681927 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.202912213 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216819047 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188019159 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221943066 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206996484 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208952493 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513640069 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205072912 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207968975 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.220145958 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.6794474 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60658254 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.213582517 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.237745305 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.27124572 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226748266 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210627006 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.229990558 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202351134 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218844645 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.225127211 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.821325515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208357891 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216699693 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.735505019 seconds)
  done (took 190.793466147 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202262968 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.340605362 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.427808225 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.260370107 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.85977894 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400060707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34946099 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.922169214 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219889687 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223498178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.554369441 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203898535 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.620229161 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.231708641 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.23385254 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266430069 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.54541369 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.59225109 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238259726 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.363654345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204935933 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.580117663 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.524945668 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.488258576 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.217333715 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234763487 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.207412634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.232260167 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.409761595 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.490730452 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.253812509 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224030902 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833149946 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05681392 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.230083135 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.248256709 seconds)
  done (took 151.618911127 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205257235 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204722663 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205395521 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238094684 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204334866 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78889478 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788711727 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719247193 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.68234881 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.600257995 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.527024024 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210001448 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300286512 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220414937 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209627177 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222095441 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.24949379 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210944242 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206112413 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793553909 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223165134 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.342381051 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386861986 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221871224 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239926464 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595633499 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207143278 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23883842 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.539647242 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255515651 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208180224 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601983391 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.425045151 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324420575 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209765118 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240589254 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207357325 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489010507 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207776027 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207094026 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209659784 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206881203 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90179774 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212241771 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791955878 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213119278 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175173489 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212532959 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207463455 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.430306792 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.924113076 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227626956 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207335575 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210014947 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206943074 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207055073 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24104639 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.365317374 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30692804 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225036791 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208015816 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211023644 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241410871 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208841303 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.320781694 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21316487 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.544287734 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28297124 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.429602122 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797895224 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21274727 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309598015 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330072561 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209918944 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209840427 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208924953 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209113058 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209435627 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.322027756 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209438348 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.619201211 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.387371114 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227994873 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.607702827 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312087783 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210081193 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647845314 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214561981 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209546958 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95990081 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30804073 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210559292 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210635953 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210521723 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.621511799 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795236217 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.473980068 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214799085 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.663296157 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214545432 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209798432 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.636906424 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.771466698 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.91696801 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216572928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324041566 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388619861 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227711874 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211647733 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.612673057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216426184 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26780483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215755631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609555366 seconds)
  done (took 367.013666833 seconds)
done (took 710.553889316 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.818136617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8099173 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.91996217 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.802134838 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.76624354 seconds)
  done (took 10.250801633 seconds)
done (took 11.386495206 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399395888 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.399009381 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272548504 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402393863 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242820863 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417881572 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381162344 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233162993 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313078956 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294636454 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314174374 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267392452 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246751966 seconds)
  done (took 18.319775722 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542761194 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523115621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274930197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534593712 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251785922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53598962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413574037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428105575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429120381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245639358 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22598886 seconds)
  done (took 16.541921368 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559160635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53635461 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278304967 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543958443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253243586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545260111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417411523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430088958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430892036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246081397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225598255 seconds)
  done (took 16.603591118 seconds)
done (took 52.601728886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221120843 seconds)
  done (took 2.358312459 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258015417 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419917975 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242840271 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227539602 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.2221389 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22319822 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22757206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223881345 seconds)
  done (took 11.183379542 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221614665 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220126362 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221425289 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219968766 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21884655 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222435698 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.223499456 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220436452 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220481258 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222358458 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220142046 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220238542 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223698488 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222480722 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219664605 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221818501 seconds)
  done (took 20.676883233 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223603898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219660727 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219350585 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221538805 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219219453 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222554817 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221826274 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220662444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220151627 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220215587 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220776189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220486542 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221258248 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220202822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220489611 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221360394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220513003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221044597 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22483316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221437918 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221665432 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221150442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22146382 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222788364 seconds)
  done (took 30.448944402 seconds)
done (took 65.805273932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.86343981 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.933315702 seconds)
  done (took 6.935835256 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280648904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285207784 seconds)
  done (took 3.707675199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224664219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223112863 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225339014 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223817628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223434397 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224281434 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225102232 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223743017 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224663534 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223435174 seconds)
  done (took 13.380744522 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224430047 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224278839 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221620048 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224901986 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224526091 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22249235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22445857 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224684287 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225040764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2221277 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224755884 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222910081 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224805152 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223823118 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224170436 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22329962 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223297376 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223049787 seconds)
  done (took 23.16831308 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225235959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2468169 seconds)
  done (took 3.613327089 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352739676 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265028138 seconds)
    (3/7) benchmarking "month"...
    done (took 1.334522771 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320390457 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265284618 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243616324 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.264997754 seconds)
  done (took 10.188499906 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226098021 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398115544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502989139 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79489256 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227728452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231149477 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.066965142 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232495857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232815862 seconds)
  done (took 14.055772659 seconds)
done (took 76.189842549 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.259117626 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.241279226 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.563532812 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22642136 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240848083 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.518763261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244684279 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352074442 seconds)
done (took 37.790800977 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.230992502 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208006868 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.068072742 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.230588816 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312730443 seconds)
  done (took 18.962366614 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.288831101 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577658108 seconds)
  done (took 5.009831079 seconds)
done (took 31.347358922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228456315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227676927 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.225673853 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227964513 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228606055 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.226524028 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224728648 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228915921 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228482437 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.228711586 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.228798908 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228550625 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226673825 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226387998 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228842924 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228722131 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225946369 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226413217 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226154668 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226739272 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228611531 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225103161 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227287075 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225517793 seconds)
  done (took 30.600169089 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22926036 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226578693 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228799285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231277053 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226968054 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229306642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231256466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228366473 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230284565 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229767136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22779417 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227604447 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230604943 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228211053 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229962511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228491256 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230521301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227201334 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229691637 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228742105 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229688543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22643374 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227903027 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230739133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228362856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227884556 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230525985 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229205653 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23128397 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2290122 seconds)
  done (took 38.017983954 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235909185 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237962632 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230324265 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231428252 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231318456 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231790851 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231789661 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.231455765 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231481729 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231821946 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23178542 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231918147 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231328905 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230915294 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231905995 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230539768 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232290604 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232988706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231537472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232559709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232581834 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232611749 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231443146 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231985932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232372073 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232502306 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233071755 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232931911 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.23324485 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232466887 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23315381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233460231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23291534 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232279984 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233754244 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237838281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240328272 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23410183 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233576772 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233143198 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234223579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233326077 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234857433 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234107121 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233382905 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233262512 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233809241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234204348 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233389639 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2338397 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233434544 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234336092 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2345728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233866647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233817803 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234529061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235163624 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235801516 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235886572 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.23506812 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234810253 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235036543 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236385166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.235001637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234544569 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234961258 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23562068 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23551024 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235310174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236339591 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236419472 seconds)
  done (took 89.968326477 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235773254 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234171022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233340721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233605051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233225138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239910652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233149652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23476821 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234150696 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235679553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235497709 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233714904 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233125289 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236347127 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236297173 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233309003 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235610306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233756489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236216107 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236343391 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236700135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233971122 seconds)
  done (took 28.320611883 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237710897 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238524853 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233831994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238024959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23552996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238934639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236816891 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239837618 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238098096 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233566008 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234733361 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238315565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236349164 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234194347 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233683484 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236827069 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237007725 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236129028 seconds)
  done (took 23.410039738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236116865 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235524702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23699242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235642565 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235309782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237966862 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235192724 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238179912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23822636 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235352691 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238331082 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238329885 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238736502 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23482402 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238324837 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236969948 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239197151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236952202 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239094569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237416412 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236592759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239127313 seconds)
  done (took 28.371870551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239890198 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239736875 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236475535 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236843263 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236243445 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23917974 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239479791 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.237606125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240338555 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.239759296 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237505393 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240684587 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239228896 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237703647 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237241238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238457062 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240261634 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238641148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241086883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238116459 seconds)
  done (took 25.930045536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240956872 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24114586 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24077356 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240753113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241535134 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240965017 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241563509 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242846716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242347187 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242458795 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242895324 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240841959 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241938556 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242387746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241264222 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24271971 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242494293 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241901602 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243429025 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244153063 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243737904 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242561471 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24255833 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243295052 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243527368 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24212414 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242406666 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24344594 seconds)
  done (took 35.939430524 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243161808 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242803794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240255452 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240679288 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240145868 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240934809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240681978 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.240185191 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242467174 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2400026 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243124764 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243608032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244251252 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243036834 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242630456 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24383475 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243555596 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242038752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24169046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241307834 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243658871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243954955 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24414304 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242596593 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241238931 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244421336 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242588824 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241905355 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245000921 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240902892 seconds)
  done (took 38.42850369 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263422058 seconds)
    (2/2) benchmarking "in"...
    done (took 1.266136138 seconds)
  done (took 3.688316528 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243074375 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245033425 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246303949 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241115015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242083026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244338887 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244926195 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243038136 seconds)
  done (took 11.108836927 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246207544 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246596149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.246581836 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.246083111 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.245146542 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.247434421 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253293038 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26569804 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246511809 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247067782 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253730918 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25353736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248836424 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246570314 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247107813 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249024218 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245457395 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245573655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.246248934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247041198 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246302659 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249477077 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248840919 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.243295715 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24846616 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25808787 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271289186 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246869501 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247256019 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251049409 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247937578 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.244134488 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246959961 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.247657957 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247367735 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247514499 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257230183 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270018179 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253630676 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267767354 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248653943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245789142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249925471 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.25009465 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249925678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.247943909 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.249961873 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.246870938 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247952391 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252332033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.254258536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248665164 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.245745149 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25259221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250225318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255496861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268180276 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253656657 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259027286 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260353142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282093568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275204291 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251437071 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249333869 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261088927 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273832577 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257836783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266993352 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247184862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.249627653 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256422555 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283497519 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.27565893 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250163326 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249535164 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250489713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252311613 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250344087 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258489895 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273145683 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249203146 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251066722 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26159819 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274396506 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.252379542 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.250908779 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251336257 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251839796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.254532247 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261304706 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270432361 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.251430029 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251760607 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251918436 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252835547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.251680883 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252239528 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25256714 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249427677 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252396218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252282301 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25651953 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260730904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251359765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253065833 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259563037 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272452558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253545194 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259146231 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252606785 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253216525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.256112375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259695105 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.250486029 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25642004 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262272476 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253790938 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255226877 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253111152 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254050609 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264124124 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281188055 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253561004 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254932014 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260530669 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.264442437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254612703 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.25677275 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254336443 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.251702724 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250723487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25612495 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254369856 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255163709 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252484579 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256858428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25141985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255615408 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254345846 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256387139 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256473505 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256517737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255631467 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.256903664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25580932 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257633295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26202967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27628924 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256916713 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255919495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253500143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255414732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256943923 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255749492 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.257954299 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25616335 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257357789 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256515285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255940165 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257521476 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256154969 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257980762 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261870849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.257137226 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260525794 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257411152 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253660774 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25693662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257187437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2566707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257629743 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255687656 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.260999246 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263766393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.257085158 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.257007416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.261390358 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25744718 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257882605 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257139636 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261217482 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266852332 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258114059 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264259077 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277399889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257843849 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.259105536 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258957682 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258345023 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257577075 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261050496 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265776771 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270902922 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285273436 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259751315 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.262650226 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260606343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26343057 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263179261 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258647738 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260632198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259445479 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260926829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259974573 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260831622 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259135026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25929856 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259920825 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.258981821 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25948523 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261965357 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260868494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261213097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25726068 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260483858 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25998562 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260897197 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257946466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.260247358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.260543036 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.260520949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.25927761 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26655287 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257903727 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263209559 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262944111 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.262421572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260674198 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26237913 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262418962 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262203235 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270096176 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.281106963 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261753168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267858563 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280143918 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.261706928 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263717597 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.262526091 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.259882768 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264731342 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.269740441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260941459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263037366 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26229949 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263389627 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262417447 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268555016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279879514 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262056216 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261822232 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.264619586 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.260700279 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263617077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.263540329 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.262915575 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26391223 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263434293 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263994033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264424534 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263507402 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263215807 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264252718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266603824 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270066919 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.268944885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262462005 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265308164 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264757627 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267266208 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.264643216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263509872 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264057406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278541329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288314878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271249219 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285281292 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264071157 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270411899 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285794087 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.267818801 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264325619 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264280214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.265201891 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264823434 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.26163652 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26579406 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264915752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26622124 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266448398 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269823684 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.264006354 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265313114 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263634953 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264495697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.265911892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.265859592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26480871 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267020796 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267025255 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265518619 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266451106 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27359828 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287046787 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.267059989 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266601131 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.267069874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.267259519 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26723888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265878084 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269994021 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272957947 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269718605 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275656783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268977434 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276344845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266773195 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.269974489 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.274975946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.264233362 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265440492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.267296218 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.267841481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275245336 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286659825 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.269095888 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270179744 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265866271 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266338659 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267800758 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267160408 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267789902 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266828678 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275858381 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290430678 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272342712 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270030866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265078576 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267850696 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267977135 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26772723 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273081936 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268142625 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269613426 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269411602 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268309864 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269265586 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268067807 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268930302 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265747352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269358974 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275712962 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.289755663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272453377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.268662642 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275082957 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288705057 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276630287 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289153683 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269798061 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.269782166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268260429 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.271302321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268974791 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270789152 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.270026049 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271792506 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273812637 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268339763 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.271821735 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270622398 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271053887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270579427 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281675546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293589738 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272462861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274764399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269697781 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272781734 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275653988 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.270582736 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.27024413 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274352997 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283599428 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279437752 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272175933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271873017 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272255044 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271847915 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271190146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.272562292 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270881226 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27165301 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.272112046 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271965102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275083169 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272000477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272523156 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275208444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.273799654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283380906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291619663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273243523 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272296654 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272583213 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.272320998 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272731556 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271720209 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273538271 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272484197 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27460726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280833237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280061917 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274955463 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272914869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274086689 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.273833989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273823646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271755652 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27221369 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272133309 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274278946 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272982452 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273677564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27297408 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27313993 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273142424 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273349519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275383858 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281932977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274563052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.271484824 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273517255 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27475354 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272298137 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27488552 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.281827119 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298829754 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285908722 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283805865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278545101 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274798073 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278471992 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.283960801 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273959988 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.276609623 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273727681 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.276535103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276287708 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279509732 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2753208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280637336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295564314 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274846365 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283118251 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297671087 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274343816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277508489 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27982963 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276643939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273668908 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275832186 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276643805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283663847 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298112048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27513329 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279325907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276514762 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.278327635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281297664 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276708237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27796474 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273572429 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277679979 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277763386 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27809681 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274540165 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277094192 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277674338 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281526157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.284200636 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274891975 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27993852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27816307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278795589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277502557 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27765732 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275154226 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274820247 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277624698 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277639426 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278241201 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28079882 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277007291 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280130303 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.279527655 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278109214 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282285482 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290151968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.286364025 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276326074 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.277789854 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27892354 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280662999 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27942818 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278205922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279096461 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279874985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279252198 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278757893 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27889257 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.282476772 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29507076 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30169338 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28079202 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281291051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283858128 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.279642365 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277582213 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280324676 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.281783956 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284559972 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287395617 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279701221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287875599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299917402 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282087914 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28380875 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283871657 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287070089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.283216134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280104858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.280631744 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.285285073 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297017512 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280838416 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290407701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311993393 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301889004 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28201956 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28130455 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28060745 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282502658 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283305438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281905568 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.282134797 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281757529 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281804193 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283193385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287710369 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283267413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282272603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.282434004 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280214353 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.283842126 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279731791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.28137586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282321262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282784746 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282240289 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282669303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.283571993 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296392542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309163218 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282721545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.282639621 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279961979 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285893556 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.286786862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294496988 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290031946 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283271148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283049564 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2845387 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281613474 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281084908 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283757564 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283568384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28447927 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280944292 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297494525 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310548734 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287608847 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283370874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284318411 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283643513 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284777575 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28472041 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283909089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285455684 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.287013486 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287934785 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283707669 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284584217 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287633258 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291783589 seconds)
  done (took 757.224929821 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282025298 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281208347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281393085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282288272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281856439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28164882 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282098904 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282855691 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283340766 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281378896 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282015683 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283752204 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28212091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282897554 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283893283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28284201 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282515351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282795578 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283395136 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283816032 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283379127 seconds)
  done (took 28.129806454 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285686707 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283915127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283731585 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286967307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283322142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285913404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284803319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286884085 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286626585 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283983599 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286170533 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286818651 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284019518 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283491879 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28490683 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286989773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286661324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285331564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286236201 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284346602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287471792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284835072 seconds)
  done (took 29.477094574 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287448543 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.287393336 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287462988 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.284029054 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287537729 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283472249 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286418287 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286585598 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288014422 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288918374 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.287843272 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289338121 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295973146 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293269411 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.289883378 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.287524626 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431929248 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288739876 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288175518 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28741204 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285543441 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293907339 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306925727 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285563478 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28775651 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.2888037 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288665886 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.288187191 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288789141 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290239724 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293132251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.288946792 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288761062 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291430482 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.288609234 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.29090905 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29412761 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28941766 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286283719 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288913134 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.300573099 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.310203202 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28956212 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.297182389 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.310111315 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.289992086 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293514579 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297171023 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287318437 seconds)
  done (took 64.586991482 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290357989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.290326937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.288033991 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289904089 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290060899 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290934721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289894495 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290763539 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288270676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287563109 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291676762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288979575 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289248406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291856942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291482562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288728237 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287326891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289000975 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289129472 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289023527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.289684075 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293181093 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293423793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289290237 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293443615 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290525914 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290040752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.292331102 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290526552 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289641821 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291869754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292082915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29258779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290173881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290098201 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.293017505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293047883 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.290002257 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2921393 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.290657801 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.293686182 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293258184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293006846 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292389294 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290685206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290592766 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29045973 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290879762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290993182 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.293985963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294532852 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291433859 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294523768 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290776851 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294171911 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.294518216 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291918647 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290833342 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294418455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.291620794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29048528 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293684439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291481698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293962976 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29484055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291958885 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.29275172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294523671 seconds)
  done (took 89.015650903 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294360102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293724873 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293855222 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293632416 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2939544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29459379 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294312035 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295003003 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293456896 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294119343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294409061 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295512108 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.295133326 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296593924 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294839378 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294955094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29489505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295816538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296055294 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295905647 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296111184 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295742861 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295460642 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295894672 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296532663 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296751375 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295548377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296241893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295268406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295259607 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296170261 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295662106 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295903004 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295796054 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297399479 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296117751 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295540425 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29546717 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296598468 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296386357 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295705621 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296629913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296469564 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296683883 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296635382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295839199 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296328383 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297696588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297074563 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297375461 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296978543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29681801 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296240232 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297092886 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297142817 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296536769 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298017758 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297513988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297239754 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297036309 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296754819 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.299642423 seconds)
  done (took 81.555834335 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299097463 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298146635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295933087 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.295285608 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298311043 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296554817 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297706947 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298744956 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299105992 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299199578 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29803253 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295582015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299026596 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297782446 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297401878 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297029205 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296951294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295391558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298343437 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296025265 seconds)
  done (took 27.159127432 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294951962 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296831959 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296711617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293584485 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295589895 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294430273 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296251339 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296269987 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293560374 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29615709 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296787626 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297240062 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294917654 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295402981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298055672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29453336 seconds)
  done (took 21.939800887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294007191 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299077916 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296065781 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295021894 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293786386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295325175 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296705395 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29330686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.293615962 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297270814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297623958 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296482421 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296822565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295504502 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294379211 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296807076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.29422099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293236513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296123825 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296549697 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293924448 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293349867 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29651805 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296906517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294299136 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294775738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293601152 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294059673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29454806 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296411803 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294235147 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294556348 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294257083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294073781 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296383292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.293780132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296954554 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297687337 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297005589 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297619081 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297482224 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294946658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297612117 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296550809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294941731 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29643926 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29507719 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295748373 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294391402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294260752 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297143476 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.297191256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298482542 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298364421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298106144 seconds)
  done (took 72.473097831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297782121 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298485136 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295166167 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297701051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297868176 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295027509 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297121048 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297581863 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296430435 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298113501 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296673937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299659489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294970503 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29842225 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29668846 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298477711 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295321001 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296532967 seconds)
  done (took 24.556057667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296692976 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297180462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298862539 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296559623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296447483 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299971183 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297547879 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299631643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298530505 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296798014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298131231 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300711445 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29948706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300336027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297655041 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297458403 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300344852 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300467128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297174189 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297117346 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300567535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299665925 seconds)
  done (took 29.777553275 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.30048993 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.298902262 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299692353 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.317185635 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31941365 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323228004 seconds)
  done (took 9.067986758 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307388667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299849379 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298706239 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301123176 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30105981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299301234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298163186 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299108845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301680432 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299529848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299926107 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301010817 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301258284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298433005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301261111 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300830465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298803945 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300834174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300066248 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302083866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299319925 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301090074 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299178889 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300304964 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299514556 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298863291 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301554451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300431633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299728702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30235083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303101953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300950826 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30307075 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300743259 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303768704 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301326258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3009321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303622077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304079607 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300839518 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30257877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302924106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303568989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301421998 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30378289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300815782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301510939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301806802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300835535 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304500367 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305268524 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30104497 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30516898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304462831 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305208248 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305254221 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302893885 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303022865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303624573 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302622171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302305172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303651419 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302004138 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303167909 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305687845 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300990297 seconds)
  done (took 87.151428665 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302830148 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301718037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301897213 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304119021 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301556818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302988266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303491307 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302164572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303050032 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302120571 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305995626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303882172 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302533663 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302161224 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302704391 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302658841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302719238 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302218458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303019821 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306156833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302234652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302852226 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304257593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303756068 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304363505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306011883 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3028873 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302439692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302610754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303142572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303656015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303759359 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303248433 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303552467 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303775458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304494367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304739259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304272351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30365166 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306616683 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304819887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306638037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304211678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305227622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304284099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304496303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304179685 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304290207 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30461477 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304229851 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304981503 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304770517 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305585518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304565459 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303886356 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303363142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303930478 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303725091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303534647 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306831268 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304851571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30380024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307119843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303968502 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304119938 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304314714 seconds)
  done (took 87.273308064 seconds)
done (took 1764.317479437 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468331422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422424034 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30500218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.318120806 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305139648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.31034009 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309841277 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304961187 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304728516 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303808691 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.30576587 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493236471 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.301055026 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303828064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304888171 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398302682 seconds)
  done (took 42.678496826 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334422262 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311070074 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426698112 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334967676 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334080135 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499968354 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369767907 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310068073 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.486204942 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353327916 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.897304398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335015012 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309205648 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.441872193 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.32828712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496934434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.565158023 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.901145175 seconds)
  done (took 30.252296025 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771505475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304444778 seconds)
  done (took 9.293355598 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329922552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310428454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311701759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308898508 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.302552178 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302785057 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309051021 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308290559 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.113913582 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442191782 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31063071 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320898846 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330860453 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311537467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308301344 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349349601 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464820562 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307007366 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306940764 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315990046 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308922451 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432109007 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350386073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307399987 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437406449 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.069384463 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312829032 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317392429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.463643559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30666 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308840859 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309302229 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310910949 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230111006 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.764673672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.301405247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353628137 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318541516 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305934145 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500869898 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.310679831 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315579855 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306164933 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741817617 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452332998 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423943731 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.550450357 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326315927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311966523 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370767613 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310010168 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310636782 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.352476546 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.10328526 seconds)
  done (took 110.783048844 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.326124604 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.689814534 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469152491 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321344654 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.927626066 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998514898 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318349006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588462316 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.333771211 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302592457 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594291001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805599629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318901097 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.31861928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.949309304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.376891318 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302139552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.039261426 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318208991 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306652598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799467757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302834539 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302828336 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.5016716 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340068802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751681129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.680137073 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742544233 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31845168 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299707616 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762301212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32389852 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.360966548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30141801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556906998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649292308 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642308881 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.325359117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305197567 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298433686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317748316 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.741046622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.652930243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.31970779 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313524114 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753152945 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.313323293 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.301375032 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301075758 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503421749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.152857371 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298452955 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.597086957 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.297423527 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.666972026 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354110813 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353442899 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763388087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316751935 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.368931587 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323570443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301101517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304238419 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294859971 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317966401 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.623711687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714215123 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.296659285 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624212898 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.749381976 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316967433 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812015824 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.080210213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31715614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349496298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.294437281 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.816374959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76024302 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351571294 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295897781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.611178508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314031597 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.570183102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309722032 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308786077 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802404052 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30227085 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.355248843 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.295880914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.295585979 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.915626995 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295908247 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.551192538 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.310978594 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295352562 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.295662288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336592233 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29655514 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310581166 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30317769 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798475954 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.320152804 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.434914773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311217654 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295903421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296976537 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.295873262 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295746151 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512069022 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.742137466 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318784616 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297231635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297071979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.305214893 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.562308854 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.304947422 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.579146912 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314719511 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297005164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301444203 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938821223 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341387751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298093015 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31793801 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147683531 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500804067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314557837 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.298608329 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298760296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312460608 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.439607836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314188924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.338903742 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296229619 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974473615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333990496 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.338560704 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.805959652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302025657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.064347165 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317462154 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29752825 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589255935 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551424755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.581725209 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299502281 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313010986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944907262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319422817 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434195749 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317002167 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343911858 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49379461 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425446304 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298372235 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.910522674 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.297781437 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509988608 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.29871266 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587176235 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757865374 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317231367 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300209163 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969416245 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011913186 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977318049 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303865785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.561159233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.242736208 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777926775 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.300337468 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.301294413 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.739435579 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303444596 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.305559396 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.300322107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.299660617 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367164035 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470785774 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.914583505 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304659017 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72367617 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346732129 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299835836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309059262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303605813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.648996748 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376251318 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305980145 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336645353 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.301635699 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310219072 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747291165 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.106892674 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.302516578 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450057453 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905004615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.316948221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.301059837 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.882892566 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.625521371 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76801886 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.327915294 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.566340931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.298283491 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.314489172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.816452773 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322971298 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.714991833 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288097375 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271790946 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.832751581 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.281786732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.350917819 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.261730448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.262767768 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.767612968 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277310084 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.266688604 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.465561109 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284243909 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522347256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.264882721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.30685696 seconds)
  done (took 1101.656688041 seconds)
done (took 1295.880266697 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.258696379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.2574388 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.242080772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.262864313 seconds)
  done (took 26.197084655 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.272700427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.267274289 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.267061029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.265360989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.26740856 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.265834139 seconds)
  done (took 8.779559911 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.321268264 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256645555 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.259678217 seconds)
  done (took 19.017168451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448870104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466830113 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.565353654 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.308713788 seconds)
  done (took 9.961840737 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.257983063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.256696019 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256535067 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258873907 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.267122001 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.269382889 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.259110154 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.260033783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.268033655 seconds)
  done (took 12.523260978 seconds)
done (took 77.65566373 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.424410004 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 6.267391002 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313816566 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.373704194 seconds)
    (5/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.533638612 seconds)
    (6/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.582150988 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.6571578 seconds)
    (8/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.957044523 seconds)
    (9/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.27615216 seconds)
    (10/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.082503659 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.492764571 seconds)
    (12/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.622762313 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.354609284 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.292912592 seconds)
    (15/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.714581374 seconds)
    (16/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.283348491 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.278608676 seconds)
    (18/286) benchmarking ("sort", Int8, true)...
    done (took 6.253878582 seconds)
    (19/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.451929341 seconds)
    (20/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.714336045 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.685383592 seconds)
    (22/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.241817868 seconds)
    (23/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.722218092 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.342171173 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.342368532 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.236665858 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.361796779 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.081351459 seconds)
    (29/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.344180864 seconds)
    (30/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024600425 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.259825087 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.350634372 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.370352376 seconds)
    (34/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.351319118 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.869518822 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.265228278 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.257031202 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.29234915 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.6138177 seconds)
    (40/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.977678979 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.14600585 seconds)
    (42/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.240716863 seconds)
    (43/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.279117405 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.36749007 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.522885537 seconds)
    (46/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.825152043 seconds)
    (47/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.264817571 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065119043 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.451364441 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.664582266 seconds)
    (51/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.25798385 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.340152484 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.256337924 seconds)
    (54/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.24268574 seconds)
    (55/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.263094294 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321802575 seconds)
    (57/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.844560249 seconds)
    (58/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.242981147 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.24247205 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.23743044 seconds)
    (61/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.338579394 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.760549892 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.266303603 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.235901171 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.239539768 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.597699582 seconds)
    (67/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.287766709 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.249217902 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.237159741 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.34808874 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.244835553 seconds)
    (72/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.510060639 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.307641195 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.280052704 seconds)
    (75/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.6098284 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.289607571 seconds)
    (77/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.934459445 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.244103797 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.100220384 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.435836619 seconds)
    (81/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.039931131 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.402292961 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.226120867 seconds)
    (84/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.272122673 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.806405853 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.262390618 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.276778973 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.119622248 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.308142458 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.341653456 seconds)
    (91/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.576335415 seconds)
    (92/286) benchmarking ("sort", BigInt, true)...
    done (took 6.244572535 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.529333636 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.276359316 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.165800723 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.230216785 seconds)
    (97/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.295020477 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.226111571 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.252885431 seconds)
    (100/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.262648289 seconds)
    (101/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.227603974 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.229754046 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.378777698 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.629154007 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.490788821 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.312267019 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.49386173 seconds)
    (108/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.324938232 seconds)
    (109/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.225052477 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.272618386 seconds)
    (111/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.327358306 seconds)
    (112/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.020686964 seconds)
    (113/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.35471027 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.409365941 seconds)
    (115/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.241575757 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.756340495 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.284793229 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.52428351 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.960311883 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.231701551 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.520264732 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.246983315 seconds)
    (123/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.229434784 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.531524458 seconds)
    (125/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.875664755 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.01388417 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.341663821 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.093187722 seconds)
    (129/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.37493258 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.375127833 seconds)
    (131/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.388558268 seconds)
    (132/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.272841906 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.981832155 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.981834125 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.274733248 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.40205762 seconds)
    (137/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.254165621 seconds)
    (138/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.06851087 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.724970425 seconds)
    (140/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.228462097 seconds)
    (141/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.073136868 seconds)
    (142/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.279328791 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.248594321 seconds)
    (144/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.373382989 seconds)
    (145/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.571074955 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.271171398 seconds)
    (147/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.673988059 seconds)
    (148/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.265780603 seconds)
    (149/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.590329234 seconds)
    (150/286) benchmarking ("sort", Float64, true)...
    done (took 6.249180946 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.25681333 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.065506704 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.61194719 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.339182675 seconds)
    (155/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.297949236 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.274719349 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.450250436 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.233821527 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.50731103 seconds)
    (160/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.338297928 seconds)
    (161/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.299242512 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.356024445 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 5.517753502 seconds)
    (164/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.252139929 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.962661087 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.228930285 seconds)
    (167/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.585983175 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.276238686 seconds)
    (169/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.7201281 seconds)
    (170/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.742407907 seconds)
    (171/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.265227299 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.274741329 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.2576647 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.224978418 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.329766145 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244485144 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.326830993 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.313472812 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.230636822 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.847732126 seconds)
    (181/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.250623327 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.835245546 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.431375692 seconds)
    (184/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.909466303 seconds)
    (185/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.453113644 seconds)
    (186/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.450735554 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.576488568 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.262023033 seconds)
    (189/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.238759005 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.345367226 seconds)
    (191/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.735481535 seconds)
    (192/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.23176883 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.309403943 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.233034021 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.679276416 seconds)
    (196/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.038759925 seconds)
    (197/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.451667038 seconds)
    (198/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.251442331 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.247198585 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.452055032 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.87703574 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.429998575 seconds)
    (203/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.235061822 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.266047856 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.703018805 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.600817105 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.396490562 seconds)
    (208/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.231413906 seconds)
    (209/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.462095141 seconds)
    (210/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.375538822 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.231950432 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.274643184 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.822036408 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.29970145 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 6.253506004 seconds)
    (216/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.248720956 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.234541653 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.282826205 seconds)
    (219/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.278151892 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.867131419 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.608525669 seconds)
    (222/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.262636643 seconds)
    (223/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.231779736 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.238835317 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.268552532 seconds)
    (226/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.533632441 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.273483255 seconds)
    (228/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.3908163 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.499416931 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.270134318 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 5.252760404 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.246870867 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.627602547 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.272691267 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.259202642 seconds)
    (236/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.484815197 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461733784 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.158361081 seconds)
    (239/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.601504566 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.985383533 seconds)
    (241/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.43523709 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.234386621 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.3665654 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.280117037 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.046350906 seconds)
    (246/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.234579548 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135705982 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.635915083 seconds)
    (249/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.23371907 seconds)
    (250/286) benchmarking ("sort", Int8, false)...
    done (took 4.308798095 seconds)
    (251/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.340973678 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.792108261 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.361555372 seconds)
    (254/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.204758108 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.513417337 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.903648308 seconds)
    (257/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.051370125 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.244876479 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.350400705 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.656363293 seconds)
    (261/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.255230254 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.589269588 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.352062712 seconds)
    (264/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.08848639 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.389586585 seconds)
    (266/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.654831414 seconds)
    (267/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077410388 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.078911785 seconds)
    (269/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.245081134 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.072876465 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.234406638 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.967687985 seconds)
    (273/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.836034727 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.302697093 seconds)
    (275/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.602408207 seconds)
    (276/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.362440364 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.356120053 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.283294903 seconds)
    (279/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.739406898 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.274794136 seconds)
    (281/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.274878488 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.286460824 seconds)
    (283/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.261058762 seconds)
    (284/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.97967154 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.656334079 seconds)
    (286/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.254463701 seconds)
  done (took 909.414582274 seconds)
done (took 910.583471149 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288628778 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292649422 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.267396368 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.288554274 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.386982831 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.290065117 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.277877543 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.26972256 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.315208893 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.317546108 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.272909229 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.28932794 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.277829655 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.276290294 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.268281564 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291658244 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265519807 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.282244137 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.293365133 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277532807 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.292907657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.276064062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.318147508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.290490241 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.272889415 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.272663272 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.279795211 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.296435286 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.389048217 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.28073126 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.272677445 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.288307673 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.267461783 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.273267886 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.264349708 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.296317562 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286987627 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.279188076 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.273001516 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.309255497 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.648205141 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.298641288 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.279113328 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.270931022 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.270266008 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.274254332 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.279723126 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.276612366 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292611372 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293639235 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.65601911 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.314249153 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.282314318 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.271470398 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.281482846 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.279411001 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.274523115 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296131568 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.299030911 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297809899 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.245893037 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.275511214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.273701126 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.295585574 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.286374004 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.697136776 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287852966 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.274953473 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.650723061 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.29883756 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.697803029 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.30896076 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.272992309 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293124434 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.310605035 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.272437168 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.27392722 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.271313284 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.288320403 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.279196552 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.282659286 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295228808 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.277334942 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273133168 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294650304 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.296384969 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.283173442 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.282346271 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.281715091 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.300957605 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.288831557 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.291985817 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.27652205 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.269506475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.282481795 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.277574518 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.284439967 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.284492296 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.278090116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.284398743 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.65300503 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321568098 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.271440341 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.270337255 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.274286479 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.295128168 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.650359817 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.303853012 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.29620342 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.321963835 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.275781266 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267440192 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.29164771 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300866635 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.282666144 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.27744374 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.269870994 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.268762614 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.669882217 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.31881232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.277042282 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.281019532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300594241 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.277077949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.271647436 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.279922204 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.283607908 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29724599 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.403584219 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.285604369 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.31470356 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.281741246 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.279281462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.298367284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301276279 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.316538924 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.278411601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301933272 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.300736163 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.273122975 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.2955341 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.287175846 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276533558 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282490364 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.271057084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.298393163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298336938 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300305098 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.298477845 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.405675599 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.27453446 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.266793528 seconds)
done (took 216.068314896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.335668036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.268263389 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.360113981 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.274074395 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.372000927 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.373324976 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.271694625 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.272346558 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.271307626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.653045613 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.27121349 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.272041818 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.269328006 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271856945 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.356854248 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.275245827 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.271881315 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.616803233 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274408399 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.345896718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.272060518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.271752318 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.274765868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.662310916 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.272957668 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.274005292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.346928081 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.274594085 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.623530803 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.275044054 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.273639081 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.625151639 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.36600223 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.293295593 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.284577989 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.282923094 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.373957652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.29176113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.356245543 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.35734565 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.362326939 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.313118766 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.277182633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.273248794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.276406761 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.276718645 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.273515885 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301835402 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.278249726 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.273779224 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.619020323 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.285790568 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.284657915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.274351325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.273217377 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295578055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.275241634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.27645525 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.366745406 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277315829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.338069582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.664499482 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.657051436 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.276751593 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.275812953 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275275678 seconds)
  done (took 144.537832969 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344843259 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.349484486 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386039228 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.293482778 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.326817402 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389938558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.293715611 seconds)
  done (took 10.571580785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283410316 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.279029272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327649015 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328749261 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.278164552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456521314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279096688 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.289484538 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276707458 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.331698861 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280743477 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279204354 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.284900214 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.27869562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327584368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290208586 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393834761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279491353 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.278822075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440660725 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27695777 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.2861439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.330404882 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290475784 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.281441133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.28539816 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.085968487 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280245181 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277490014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.27898371 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276551115 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.355491491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280844212 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.275825491 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277553153 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3953505 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.279910416 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277973403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.280044686 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.277111391 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.279835747 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.280604414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280757555 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.278663441 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.280150036 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302847802 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280107595 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.280604703 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.281085689 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282304769 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332185217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.281652897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.278404638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.278203937 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.337329395 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287778718 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.280876595 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.279114064 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281240095 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278698205 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.442759155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329582519 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.281582662 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328332602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28244725 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.282890877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281925269 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281177831 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335978034 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.281324605 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330070788 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.28025038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467636659 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305681706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283531723 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.285510805 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.285614444 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282802911 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.283797851 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.287829015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.280597284 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.284204329 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289227362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279814362 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280807735 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449243817 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391173162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.280876883 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.2950682 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.290328444 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.281739963 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336760224 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283981546 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281130222 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335376994 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399911986 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.337403776 seconds)
  done (took 148.44596797 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.288664236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.292584753 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287813134 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.308518182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.302837666 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.284666838 seconds)
  done (took 8.958432646 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287142737 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285556704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.284812815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.284852449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284741764 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.2856975 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284740383 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286244721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288829698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285038005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285739474 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.289923995 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287223492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.284775479 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.284792839 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.285518838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285601594 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283537993 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.286275396 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286086316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.388673398 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.28580329 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285851835 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.287051175 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290056157 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286816467 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.294457946 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.286291518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.285969466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29116132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304049974 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.286810578 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287459672 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.290988967 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.288827172 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287717548 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289195251 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.290225101 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284426715 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287537294 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291355172 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287338336 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.286483493 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.290688929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289678789 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292344971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.294657378 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.295543476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288371408 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.292616746 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.292377666 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288457103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.289432827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.2922591 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.290011598 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309032409 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.295872158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.288382096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288786633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.289734782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.28931724 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.289686747 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290747233 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292030091 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.285836311 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.292736431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290180121 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292519138 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288861131 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288971616 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.293625606 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.287120199 seconds)
  done (took 95.107658433 seconds)
done (took 408.805122334 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.598731666 seconds)
  done (took 7.7964544 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.293947212 seconds)
  done (took 7.493705938 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.124093937 seconds)
  done (took 21.326370993 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.290268272 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.345532283 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.308772304 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.289420398 seconds)
  done (took 26.432828045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.36544935 seconds)
  done (took 7.564549913 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.285533635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.283779359 seconds)
  done (took 13.770950243 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.66259455 seconds)
  done (took 7.862264692 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.552312651 seconds)
  done (took 7.756899903 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.286645042 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.309163542 seconds)
  done (took 14.051389717 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.282875814 seconds)
  done (took 7.48511217 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.09811976 seconds)
  done (took 11.30045475 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.2961168 seconds)
  done (took 7.499596756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.342607814 seconds)
  done (took 7.543924615 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.039882763 seconds)
  done (took 9.241871424 seconds)
done (took 158.324400273 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.286729721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.286815369 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.287361251 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.286807248 seconds)
  done (took 26.349437676 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.326701504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326865961 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.328375447 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.337656491 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.330392233 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.327661792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.320047089 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.321955188 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33786274 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.330882362 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.329845361 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329802903 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.327276439 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.320151597 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.330854908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.328324257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.337777233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.329345627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320040779 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.330878389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.295115738 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.339289616 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.332184276 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.295799909 seconds)
  done (took 33.038088535 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.819629075 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.367032076 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.449213646 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.348480665 seconds)
  done (took 7.187492177 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.346509807 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.348383715 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.36105795 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.400029006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.425439465 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.358401806 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.322131349 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.317493384 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.303442015 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.348752713 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.424620528 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.364931805 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433042764 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.295875132 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.532296199 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29591814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296233273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.348244761 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.398895786 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.413688598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.296738398 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.347201948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.35135924 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.365453153 seconds)
  done (took 33.900275579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.295712343 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.314154066 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295030842 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.294068515 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.303948208 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.295299119 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.296136769 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.296821646 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.295608974 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.30165937 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.295037611 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308151527 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295898413 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.296737092 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.302813984 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.296581422 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.302792845 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.29534462 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.296065595 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.302547038 seconds)
  done (took 27.185574631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.290678774 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143909356 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.642432774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547160344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.291333403 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.297113712 seconds)
  done (took 27.418678129 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364209277 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.516894876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.304220274 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.636701656 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735150564 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.321157383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.299689864 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.535495127 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839093587 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.81777143 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.359532737 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.363084637 seconds)
  done (took 19.299014367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.301517148 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.298115865 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.307841895 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.315354926 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350557601 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.318235329 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.305656922 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.292778499 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.357605272 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.370614949 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.318397452 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352054867 seconds)
  done (took 37.096474915 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379680486 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337734493 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.173644293 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349612106 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011336512 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504666077 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362879559 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977926143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314544347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567469292 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293560899 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383213074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549679576 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297446506 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301384571 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256083544 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536089936 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746445156 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296344126 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197368086 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318839926 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302973773 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.274597601 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513831687 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527886583 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271499222 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.555136138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069258901 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570399928 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308632319 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305157185 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295038052 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569000459 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934300606 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408767223 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497330745 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320087537 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857680902 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.292621766 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.196897505 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300184987 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302659144 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305967835 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29597208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.230117811 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299134559 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994868918 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.319108959 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.006270825 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295697782 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544605957 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394826452 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.299946365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.864835982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354724864 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301687793 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.29986146 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387163273 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888294246 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433038412 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317686087 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.238853946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304070524 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196516614 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900423394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.320114878 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.301530444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302281632 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231934692 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.203476478 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320641188 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445144007 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322563184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946873724 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959338503 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324249513 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22967111 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81501428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301190746 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.240842589 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525285034 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074700376 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232381839 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.241612544 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231901997 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959596293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306604057 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.798458057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321166648 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003209416 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520775339 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339657435 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321124465 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521286611 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.176895941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300034687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.300272584 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427300759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32184097 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989044979 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25162902 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.304843423 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555212634 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.510954806 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31281738 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.248589002 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783329311 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319655593 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.320214883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298675319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51010739 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880507351 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331383892 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433660807 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324169085 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.075231212 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997553058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303899969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.311956803 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.308560104 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573518533 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.025150576 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183729559 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368781813 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304110041 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301867415 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287794736 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159251 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.215407973 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.488542378 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327115325 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.318215183 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.302021378 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247087652 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.303145559 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30105574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.085456949 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525339538 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315256342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583182499 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235632753 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449000975 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.311403721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.525412364 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.455997889 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.323199092 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560840842 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302652907 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314824563 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320612491 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320815507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402856512 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325488717 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.314324672 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564467027 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.306332899 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.307587323 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369112033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.084599564 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306813093 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.309478977 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319256187 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861767907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295669976 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31262054 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192390215 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.317562933 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372047413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309614201 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508203321 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.480246804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322940128 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32587976 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.305384603 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526043751 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314020765 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.217720093 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391782261 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.760957475 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.87602244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340523319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.239052673 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.016160635 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.997880786 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305365023 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.493842439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305884545 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509117356 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341644107 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304107555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881025017 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326075373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226072231 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.317705548 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317658272 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.310328132 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305802714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.47386063 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.468405885 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325688526 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322279448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449791371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.320651413 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.239635835 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.822783594 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312127064 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306646991 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.081193302 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34061004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.221281594 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097307686 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582832135 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322832143 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556036662 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31751477 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.342272929 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.307739678 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308917897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315659433 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.327779375 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316594387 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.319190091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.225843265 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.752387284 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876644574 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004767763 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832696966 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.612869046 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.335162914 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196565284 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003231155 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260185084 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964283798 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538424633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024627155 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269899745 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770084898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.488380506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06562132 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557784672 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543820897 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592049624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.347501006 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56682801 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529264649 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343285779 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.320657547 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244838111 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.826867536 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849340549 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328377402 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410598651 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005636392 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331841201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.095345256 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.353149789 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.967575279 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700780572 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.879002616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696836107 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309886239 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322393909 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102053334 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337830904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.834647222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906929744 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332573278 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.776837501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264844584 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516805987 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346241227 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.307620739 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.794862043 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.325614412 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.573058906 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562601434 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254300768 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322576548 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822436166 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.188688347 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.317222117 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311972395 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011808079 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326662186 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593902963 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.330750375 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.481427493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336995216 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245858911 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246326303 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.004220562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314274603 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287491553 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770953204 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.323499266 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326283179 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317434779 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179539232 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.567759097 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.325901547 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86649559 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559849229 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320717795 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33710753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.31639086 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314828788 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.300261646 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.205415987 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5489272 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327031504 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536819842 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.223247468 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.213545919 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390965289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525420065 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194913379 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313745309 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572327697 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.048052761 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.334418189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016500057 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362119994 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318138074 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333093543 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315605606 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336718209 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402709465 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521473211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.350359976 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325631665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704301073 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345436969 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323960934 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.327922495 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408481037 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483458962 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.487621224 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.111098162 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877948307 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042911061 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903870363 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583421779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324928077 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315007509 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248660648 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464232874 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841303103 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588914502 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445048419 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.326934232 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33947357 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316363302 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328533411 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534655593 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591433741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.185705487 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327952182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389453661 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.198185787 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327357292 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.528143585 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77692407 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841105594 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435811409 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320679116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020815073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609044712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407702637 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317557396 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845746611 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.333545192 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.98774091 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.324402237 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317890993 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472435358 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567503632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968425554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346133404 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.473477308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.090682052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274149728 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580461924 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.756781106 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525939347 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904121053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013429778 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588476419 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388467847 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525421284 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.44493988 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465560071 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.321262698 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207613091 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319038225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16413908 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.029451024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.328143425 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887319071 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599041173 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.32346969 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.320083834 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348798244 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.328679582 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541132907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995336299 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543925271 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32993248 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321114937 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.310500007 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888597425 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589926012 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262274051 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.324483627 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553864333 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580843003 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345315708 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.771758121 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.031702426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844020637 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.32129918 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341538807 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332521973 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009349185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890545545 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.528829589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797316515 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979245298 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322722243 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60333218 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.326466893 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324178121 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603859173 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.325330174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331626326 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538298037 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.907408957 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091913508 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.343140532 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314921542 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.25981517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.547741783 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378104327 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257836963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322837914 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.720966445 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343723294 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451425186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333884523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.324197677 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330433843 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.102941096 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604629429 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.328473364 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.301814082 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.329007922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.325513691 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422028217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871016287 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348110874 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.996749959 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.672181004 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578547644 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328459117 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309758171 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.32701977 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324137696 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02992389 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290697815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331801874 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85209026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.331478551 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.341915843 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328037454 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.540341545 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535086182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324811236 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550986906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35411826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345269393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.223795395 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.092272191 seconds)
  done (took 1642.04286232 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333254619 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.329476228 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.34290848 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.382575231 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333587195 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349538932 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.409706107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.328196536 seconds)
  done (took 52.046395276 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.325398611 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.487246355 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.35501164 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.325902838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.340932042 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.337329106 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.783643476 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.359080011 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.33521532 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.335699336 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.329710104 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.326150393 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.964810239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.358392564 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.325403915 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.305537587 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.334802658 seconds)
  done (took 65.168449187 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.208367435 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.575792019 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.885436625 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.362860342 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.370177403 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.332174958 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.777830979 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.351418497 seconds)
  done (took 58.103243872 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.337959859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.337433491 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.337821228 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338205306 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.338991068 seconds)
  done (took 7.929257674 seconds)
done (took 2037.967878196 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.330760059 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.333019635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.330858325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33263933 seconds)
  done (took 6.566366726 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.306488105 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.038882847 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.308605451 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.327965932 seconds)
  done (took 18.220946238 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.364159165 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.353802237 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989900835 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.928070583 seconds)
  done (took 5.15920341 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.076424693 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.089714255 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072766488 seconds)
  done (took 7.47822279 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.326324974 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.334632356 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.333300962 seconds)
  done (took 20.233654075 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.614687175 seconds)
  done (took 2.854239531 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.475995211 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.52515964 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.644227726 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.651329071 seconds)
  done (took 7.536973039 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.716632332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.702517432 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.511590575 seconds)
  done (took 6.170507337 seconds)
done (took 88.176324068 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.031506467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.334922848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.532799504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.002612466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.555448141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.53319978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.541201262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.969636634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.511064829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.500626159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.002599351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.552036605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.493425789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.329441845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493424913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.571508184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.551397033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.073864628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.685623588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.888319886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.544059251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.641075816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.841294881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.657755289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.554463416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.482312462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.219133044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.578752988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.858099673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.236078846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482592886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.058209749 seconds)
  done (took 189.54979236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.339964753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.342763748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.330917379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.329956139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.330645442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.331715266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.330845993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.344980528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333810277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.341992416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.331902282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.329929304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.345938704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.339255811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334197046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.34136665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331332256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.330964649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.331186832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.331080496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347073645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.350961456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.332564308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.33183244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.345768334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.330301156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330873917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346420196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.336374667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.330722649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.330906278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.331314544 seconds)
  done (took 203.992327471 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.331179672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.339046404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.33144782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336526348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.335761672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.333080894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334904572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331816575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.332495132 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.332714341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.337235125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.332910918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.334552563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333199233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334596497 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332024526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.351985846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.332091912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.33986143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.333088367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.332537555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.331775541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.350775957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.333647127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.333367271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347474227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.33328092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334286049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.333314274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.335065687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.34078448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333210284 seconds)
  done (took 203.984372466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.534557864 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340625698 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340972293 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.292718874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.340606835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.340480263 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335307575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.531118364 seconds)
  done (took 14.301825645 seconds)
done (took 613.068660314 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.53927303 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.286299408 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.533128505 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.361137083 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.098525154 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378414613 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.359881169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.52519914 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.24358132 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.530383233 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.53430738 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.375637777 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.671509741 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.358914237 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.610953645 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.460200015 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.240261506 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.363626292 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.66812618 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.85037462 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.615279445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.772275737 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.54314279 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.253996665 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684240896 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.7709802 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.034113453 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.230816013 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.376754042 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.675937217 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.881832755 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.284896369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.401319357 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.41820223 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.473956759 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456257473 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257438785 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416791461 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.556278322 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.542085683 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.877522495 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.066449576 seconds)
  done (took 90.826950608 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.325879207 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.326379186 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.32377479 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.325774713 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.3255263 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.325245567 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.323776383 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.325412557 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.326074663 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.323898002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.3251156 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.327912631 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.325782592 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.327066049 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.325232901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.325706776 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.326566891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.327579146 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.325478991 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.326596515 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.326715263 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.326150257 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.327515572 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.326694935 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.326124447 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.326217665 seconds)
  done (took 35.72327872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345060383 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.588257474 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.74321378 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.352689986 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.345906313 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.350966398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.422462474 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.346993759 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.349292367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.350737082 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.496388644 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.349042288 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381926751 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.769978251 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.348848494 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.347164655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.34637858 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.347237359 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.596423566 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356611269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441888906 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.347001835 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.422218753 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.357517512 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.369830535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.347832092 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.352865763 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.92853188 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366768032 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.497236725 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.099053297 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427741462 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.886584643 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.77146398 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.102751498 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.356508429 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.348175929 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.501802122 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35128109 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.348692448 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.423043799 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349903836 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.754445074 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.01125616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.366562859 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.347406688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.948177627 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.519130843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.584733874 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357680542 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.78057383 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.353088647 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.349911478 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.352111248 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.583197324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.355666684 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.349847343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.94605706 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.371651129 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.425309796 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.350131713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.349919667 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.603876746 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.349975007 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.59158998 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.352852809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.359069013 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.368646711 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.756581971 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.353496667 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.038991771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.367653405 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.351603039 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.499914598 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.592543015 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981580431 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371952068 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.609670974 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903935343 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.441315177 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.355480555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.9205419 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.445112031 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.355755804 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.352883024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.352024861 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.350930922 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.395348296 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.422731006 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.970627715 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044316064 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.970770109 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.444605417 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.35854023 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.352258993 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.948770926 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.368515843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.351773483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.752513264 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036485431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.368177346 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.359447572 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035301236 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.371223618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.429179922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.358381738 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.76501372 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.352789259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.398972852 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.353370249 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.360601126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.374450105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.428085696 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.357458866 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.353035047 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.010351859 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.526988341 seconds)
  done (took 178.292211922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.347368887 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.345853833 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.347778653 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363589228 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.346923517 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.35550349 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.346947836 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.348579848 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.352927895 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.346966078 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.346668742 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.348348997 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.349837565 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352016323 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.38118684 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.355512078 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.959533154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.3477979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.348385853 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.347954387 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.143780716 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.349256271 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.34745003 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.34703475 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.348785214 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.348916784 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.351458396 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.37528529 seconds)
  done (took 152.509884273 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.355282719 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.895929683 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.375253381 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.481712608 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.375837041 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.352445494 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.481044112 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.411178031 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.372728061 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.352146542 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.352563026 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.64351117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.356444007 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.849247168 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.543580577 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.499355629 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.850012023 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.375020159 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.351990403 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352822332 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.483685382 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.359620292 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.646550953 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.906307017 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.381464965 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.895843667 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.33988551 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.35682055 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.356072613 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.89893287 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.370012708 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.647251884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.431298891 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.414093802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.914844808 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.865612451 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.865162196 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.497842125 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.356152508 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.354168973 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.354557369 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.339674009 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.899978836 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.374619144 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.357122391 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.889494074 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.3737524 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.358067526 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.361614651 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.354975879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.414078112 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.431158468 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.666448305 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.905851047 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.447624039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.370141576 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.484580561 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.729720632 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.361000029 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.856603723 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.3436711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.90408047 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.375942563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.339311588 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.358380953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.363018749 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.501702423 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.483170126 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.857942007 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.381102822 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.85694507 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.524440304 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.35452654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.356921013 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.359920051 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.905504987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.874885588 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.523599222 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.49085185 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.546021263 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.341708014 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.358638017 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.341767226 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.433708747 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.357132655 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.906795911 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.874977778 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383681196 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.361066795 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.359694709 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.360528964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.529884175 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.923613997 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.450661003 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.845827518 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.678259762 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65395964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.360707942 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.416177274 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.374324639 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.654486979 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.362486796 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.414386244 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.793852506 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.658158615 seconds)
  done (took 161.461372103 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.596552695 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.509066982 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.449864702 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501723865 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.947462318 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.913186102 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.655975642 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.508208165 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466451845 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.617610798 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462231147 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.449544771 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.570753329 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.443433637 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.073887393 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443445979 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.465615367 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.506875851 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.51275285 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.341488309 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.037871774 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.636769471 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.540300025 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.235499675 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.452374346 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.108304619 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.915588457 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.927631054 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.536659072 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.600425175 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.893485665 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.455849044 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.295982861 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.038886556 seconds)
  done (took 65.376274464 seconds)
done (took 685.435843211 seconds)
SAVING RESULT...
DONE!
