cset: moving following pidspec: 14637
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.344540383 seconds)
loading group "string"... done (took 0.596033223 seconds)
loading group "linalg"... done (took 7.5554593 seconds)
loading group "parallel"... done (took 0.175465956 seconds)
loading group "find"... done (took 1.216963784 seconds)
loading group "tuple"... done (took 1.893057282 seconds)
loading group "dates"... done (took 1.282411709 seconds)
loading group "micro"... done (took 0.237893325 seconds)
loading group "io"... done (took 0.98286111 seconds)
loading group "scalar"... done (took 39.743926877 seconds)
loading group "sparse"... done (took 12.667818225 seconds)
loading group "broadcast"... done (took 0.997404269 seconds)
loading group "union"... done (took 13.7712621 seconds)
loading group "simd"... done (took 4.670787028 seconds)
loading group "random"... done (took 9.418248771 seconds)
loading group "problem"... done (took 1.961100324 seconds)
loading group "array"... done (took 22.205792052 seconds)
loading group "misc"... done (took 1.995329329 seconds)
loading group "sort"... done (took 3.372939793 seconds)
loading group "collection"... done (took 19.057189975 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556424341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145160545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13620731 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124628161 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185997894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133013664 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141886883 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086463825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.883226788 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160546953 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140946042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51416228 seconds)
done (took 4.916536475 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.193684577 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089034883 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099177774 seconds)
  done (took 0.849146117 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066024217 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130080779 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082257269 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069026678 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06791068 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082371934 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067056125 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066452039 seconds)
  done (took 1.234507046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075819537 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070151038 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085309071 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070202656 seconds)
  done (took 0.971047987 seconds)
done (took 3.991649886 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.937257585 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254114609 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194527773 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.487132824 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134239618 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189762222 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671780899 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313056637 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217363271 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102715225 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106490613 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393158484 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107166424 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677085659 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075909727 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107074498 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159571019 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424980036 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082222333 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083132373 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104738745 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140274832 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101970771 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078931757 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170275104 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069327108 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153975482 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095116465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069007887 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252255687 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189232416 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686908001 seconds)
  done (took 10.537804118 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099141371 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121524521 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070455735 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141925227 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121537963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072903927 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073759932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084130815 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094071011 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164481773 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11796814 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124824048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067573672 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072022452 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102882337 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230001563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091769334 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101866099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072771747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092072337 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110255641 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099217138 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082769956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096822948 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151743419 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194021865 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101291651 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112502912 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069774619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098287962 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130161553 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133902195 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066816078 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083340389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158693579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096966058 seconds)
  done (took 4.584015454 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.104947138 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176751834 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094503555 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157158789 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086350066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130247441 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066244602 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100973282 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251912979 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162194239 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491558999 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129884967 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088063076 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070079832 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087867047 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069460022 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.618722605 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147094283 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123317726 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086386392 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092384601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071508506 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361649313 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08287397 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068637213 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069495119 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.076424067 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149101643 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069947431 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.378854174 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072327002 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10667037 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069198859 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11669597 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119941251 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098026228 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127746167 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066870304 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084657854 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174061238 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076205788 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084881008 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092067279 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121517453 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106433468 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085283994 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069443028 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184942198 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067486753 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100860208 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938695907 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097244017 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167252543 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09419575 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083152195 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298522893 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086080165 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067130066 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.086932336 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26280521 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186976116 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085133017 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067790248 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084586774 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069800266 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369920419 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067570594 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.770737704 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068441122 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078038013 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086097589 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070476322 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083612324 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075199852 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091888813 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086828812 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06744941 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086068552 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067435495 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083854028 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069362285 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102841915 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066633785 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.211469249 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0841025 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068832249 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067062841 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103367886 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112289298 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072650954 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066365205 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117716891 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069774068 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084004193 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104184714 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08590956 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102505931 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070692583 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128882174 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0681755 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138913068 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069376693 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113794281 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078350075 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115177975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096681913 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069311193 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157086385 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066172241 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082690111 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068533475 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082885185 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070198786 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06891452 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100461411 seconds)
  done (took 21.483652203 seconds)
done (took 38.377915551 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311339635 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094831759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094747728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094192852 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079539196 seconds)
  done (took 1.424692307 seconds)
done (took 2.143863878 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149816779 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103180223 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081353776 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098304946 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082280684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102896427 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117170656 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083016233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11970903 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065005572 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114740392 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065302333 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081396376 seconds)
  done (took 2.017127663 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083086814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085957308 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087553981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081636077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08037712 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082955711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08001175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105316324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080223957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088696188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065158214 seconds)
  done (took 1.637234921 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081743614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085033178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085833333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08122568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080598744 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081860351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080804839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103142259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081082739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089649919 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065003461 seconds)
  done (took 1.633907619 seconds)
done (took 6.002551784 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079680162 seconds)
  done (took 0.792514003 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.749312037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.495607149 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084954008 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139497753 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223307308 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161163293 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466559951 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114057617 seconds)
  done (took 10.358782157 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.114706524 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086703678 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073497512 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086888496 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070805335 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085579154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071080506 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073605838 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087343685 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072953373 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085182618 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072764157 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087469509 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073492134 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085212163 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071867601 seconds)
  done (took 2.084824934 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105878862 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105046491 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091714636 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078578206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091209766 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074603945 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094118519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075845771 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088522228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074140511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092824811 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077199452 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089753525 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067216635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091804962 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077881159 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088018089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076271271 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0916376 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078623488 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092640941 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067895812 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089095082 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077560327 seconds)
  done (took 2.871619258 seconds)
done (took 16.826065624 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134271858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077475126 seconds)
  done (took 0.934604435 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083557887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099019899 seconds)
  done (took 0.91163467 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085061806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082175146 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091859611 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094939188 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083821633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067596515 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104880216 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068292841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083096258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069079089 seconds)
  done (took 1.559188037 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070947861 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094788633 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071883172 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098776406 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076341757 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080891765 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076734349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08542933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082174541 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0796404 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073948077 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099438719 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073555757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100810305 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09031202 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070239653 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088029526 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070303101 seconds)
  done (took 2.21692486 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067345983 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068462162 seconds)
  done (took 0.868558844 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069833206 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065391202 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083143005 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069251794 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0797581 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065570264 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080537398 seconds)
  done (took 1.24660026 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413936276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111003144 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266156709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073654277 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10744137 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29785385 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067652085 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073225094 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089791326 seconds)
  done (took 2.273761679 seconds)
done (took 10.740250986 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080812841 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087708098 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111859059 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.445502201 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10646111 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067555055 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144962707 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.215952344 seconds)
done (took 1.995771762 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127501366 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630374785 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413800555 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231532092 seconds)
  done (took 2.011992685 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.38894538 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09213669 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073752905 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068328646 seconds)
  done (took 1.362112816 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067742114 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071043682 seconds)
  done (took 0.878044338 seconds)
done (took 5.114635219 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068826085 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067480501 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114260266 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065264626 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081976458 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067510026 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065332928 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081691144 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066928846 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0842457 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067503065 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06756228 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083140826 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067940189 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066266215 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079914705 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067689601 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065930762 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081549389 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067611601 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080913308 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067954899 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065652634 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080613662 seconds)
  done (took 2.549050097 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087060043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083781769 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074098258 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08860256 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072050956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088854642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076638916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068011696 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089374466 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070849103 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08655429 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072536443 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08551584 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07246812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085872825 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072557 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088956055 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068034239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084165184 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073683137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073645178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084348103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072853521 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089167706 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072317091 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087189409 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070886054 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083569429 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073009524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087056163 seconds)
  done (took 3.122480338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07225407 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06557789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082026683 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072153975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065137555 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082084932 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06492105 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08132334 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067032082 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065615415 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083057452 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065550252 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066338215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082573849 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067402692 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085137354 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08240042 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06627153 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080872759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065958826 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084311275 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065435227 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065476721 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081152001 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065006069 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065329036 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082119227 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065174109 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081679903 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065594527 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068698635 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084557176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065827564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072067954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085046704 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065705367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085323104 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066416492 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065916372 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080665224 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065684831 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065046244 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081273506 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071863119 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066391474 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082978954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064974438 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082301331 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065427565 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068428792 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081864963 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064842856 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082295086 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066920475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069158941 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080373753 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066681682 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065412891 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082112314 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066329208 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081111902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065882419 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067742502 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081849769 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081266503 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087748019 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065452491 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068021995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.083401515 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068468143 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068636943 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095310336 seconds)
  done (took 6.022183867 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.121773907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094841818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084564633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067630685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080318928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065604057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069782241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082364972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06837268 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088233668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066986155 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08264643 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068083301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080731112 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081655864 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068836885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087734697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063454744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066517676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086251264 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068040179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084768374 seconds)
  done (took 2.476496002 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193339788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090833936 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11428484 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092230933 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086657387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076735803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087512078 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073491697 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072792694 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086974916 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071982202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088860107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071140803 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085946641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070537699 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0873433 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072543655 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085946179 seconds)
  done (took 2.355827826 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079954773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068758892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106715919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069033914 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085820969 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070820751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090216854 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077752984 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087389405 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068653495 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092906868 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180741311 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086724389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067907958 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086627165 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069577151 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071386962 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085192804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077841883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089888511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073875066 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09308659 seconds)
  done (took 2.62878644 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08413849 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069918176 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104782668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087502196 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065101914 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066492367 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090906961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068664905 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091505018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070115003 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084564346 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069257503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074363006 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08456419 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07467226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08367734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069985711 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084736352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070010144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065587272 seconds)
  done (took 2.309578633 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090568506 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086139874 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069724295 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095243914 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069187495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086293425 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080013555 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08608924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071431485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111281892 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069874657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08715861 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078619898 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090807097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0704839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094660847 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094797936 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079472605 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085279459 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069495977 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110619105 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070304537 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095245455 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06943824 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08662596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07032671 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08670487 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074369425 seconds)
  done (took 3.084007287 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068092348 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069274886 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082262928 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065018199 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065878279 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081405763 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066491296 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065545424 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083651131 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066751028 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083722785 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068871167 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067792661 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083780107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067594991 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06778104 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084190543 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065877285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065674891 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081003912 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068517084 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083521858 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068732915 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065264741 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081941245 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067851481 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065301854 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081497211 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068175884 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066120812 seconds)
  done (took 2.923069063 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078935608 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092527465 seconds)
  done (took 0.927932289 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066079825 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083559714 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08185577 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071694315 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089465602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069670481 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094030252 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072502042 seconds)
  done (took 1.380917313 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083980578 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080200243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085497957 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097084572 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080717581 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086186127 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158547159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085777907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074931484 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084092188 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083039896 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084188211 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075679568 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069434658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091197622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074363133 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082937702 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075638201 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071038114 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082724072 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070860828 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09803739 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071243993 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081375302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070380127 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078179912 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097630466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069337244 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088731325 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075781941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090204064 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062298717 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084043311 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069658682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066273114 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095467702 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084410628 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08760486 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077834788 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08588507 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079477845 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08076132 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073130466 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091772432 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079530275 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069272471 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085380873 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064344966 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082638975 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072135528 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064048073 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085272542 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063476228 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09203764 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071896126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096405644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067553173 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070979968 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087836341 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07179521 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091861822 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07047669 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072159233 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084358425 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076376938 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089939535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078053946 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079703554 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062439675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066248583 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095678338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091255972 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091235779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069201454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086658094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066157322 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087656015 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070350347 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075657309 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092194765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068580355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092123078 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075911727 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085603079 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07078316 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092729983 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067765632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071517155 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082552691 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087022101 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084299549 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067534712 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082767035 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079209493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072683978 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084094434 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066216016 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092581605 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063783933 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069276437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086005266 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070169974 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097166988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07394677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090980945 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077768085 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092969824 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068837702 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088047597 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065759658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069986642 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084653003 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077417361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079452465 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071419298 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070001074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087451321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078505377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084657245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070012309 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093514273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075145361 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068063269 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082837461 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071341345 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085296368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072082031 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094235859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067004783 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063939845 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080690572 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073220563 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085118439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071707804 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090651989 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071478605 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063979203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083323229 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073209432 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094215258 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068956316 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085241834 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075474363 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070419455 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084311027 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075935785 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087816517 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068594991 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074537723 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086004331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064346684 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088325904 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071042613 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083696663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072963349 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072346257 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087858276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069724014 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084696656 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07536079 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086135602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067857261 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06886603 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084628106 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080144126 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087421286 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064271415 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06656716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094087498 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066451002 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084478019 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067238042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072540053 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086017716 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066723159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084323922 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072277266 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097671762 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073359962 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086746641 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074066578 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097213586 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068974537 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072899736 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085589708 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071359231 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085915421 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077575326 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074069484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090302385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070677465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081963291 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075019874 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093259811 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067649872 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066225492 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084183569 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072796849 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090418649 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072475852 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086176595 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066739428 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070589885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089672797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071485425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085145168 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068353519 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091157431 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068899477 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09281213 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070071892 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080105148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088289812 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064410456 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08922428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066911672 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0914362 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064349995 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066852941 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084527563 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069442623 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068232691 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089069472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0630021 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092284356 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077752872 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085532866 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068832742 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069139438 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091675574 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070010558 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090589708 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072090847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092946407 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081166904 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068643395 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089056373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079628816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085383253 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063585546 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090934859 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067029578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067821999 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085320799 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066747213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089983496 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078702882 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09326951 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063827285 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072692763 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084402246 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068151357 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081663338 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073813063 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072264611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086911907 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076577424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087316678 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070711669 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072269736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08488133 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071199182 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086696501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072007443 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087508012 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072700139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067930618 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088765024 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068601528 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083480446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071024916 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069853649 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085651748 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075302121 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085144966 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069697441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071022221 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087155983 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069521318 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086624653 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0693655 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090581749 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071463865 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068972885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089539777 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065272658 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094874108 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070703553 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077999547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088573607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067030383 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093672688 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073084067 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09339313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071837546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071463881 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090130475 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069682426 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09043161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077429438 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06717841 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099073056 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079578551 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089820669 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073780407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087216841 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073158346 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069133157 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087875345 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071343321 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087739637 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070216834 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091793564 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072962716 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071015524 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089560755 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072733471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087807289 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072862732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06468749 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086868385 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069864878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086257262 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080499409 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069680312 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087054851 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067954743 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087839336 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068452122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064991593 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095068234 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095309975 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071360467 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078334837 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088214341 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071999905 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099199112 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068520549 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085740241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068792576 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068486826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096130546 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069541909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097785897 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070137015 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068350551 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08563593 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071827212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086618489 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065833429 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068133271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091875222 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069941895 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086655596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070910945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074608764 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090136068 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080963704 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087694172 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071438136 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08896214 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067235464 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069004625 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088550513 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074481605 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087485821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069344472 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066485402 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087205135 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070435918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071206552 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085211317 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071336506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09464106 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068985726 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090641638 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075089194 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064579484 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090399788 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070755447 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088186323 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069814195 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074386129 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092720375 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071784895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098330704 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070709243 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089697305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071557646 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068338257 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088023146 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070389944 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08839209 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070233247 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070833283 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095297683 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06820749 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090493479 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068596246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087188235 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077205785 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069796876 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090409306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076655905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087320375 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072009449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095658454 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072734824 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090266856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073051685 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070825237 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094376393 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068999913 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093533367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070448589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070693094 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087756162 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066511205 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086154206 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068598092 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06829523 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093925887 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069401426 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085443884 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068339395 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067126882 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086206147 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071955404 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094637449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071195973 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089905067 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065124428 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065671753 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089086857 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067935257 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089232506 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0721866 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074863453 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088427014 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069608644 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085340912 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079659483 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093790913 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073869384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066498019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091332864 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071982477 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090928617 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071526033 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069911099 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090211566 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073534587 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08911668 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068818864 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094789782 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073347071 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069542626 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089153364 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069472864 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08851463 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0657535 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070614746 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08964746 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076898258 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091464691 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070555155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100406169 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068146485 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070776132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092030581 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069671902 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093771416 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066655587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071347808 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090594653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07247131 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083716922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069858449 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069081804 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091414374 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069294046 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084157996 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082693891 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098801164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074192636 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086920381 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069678051 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065257713 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083930191 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071264111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071671199 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090651699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081191407 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08792846 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070312729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082587112 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07091788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073234718 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092066106 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067292749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08317659 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069573375 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073497332 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092953729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067448443 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088415954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074456963 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072179351 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085969028 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074404153 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085029831 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074062535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102367029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070997312 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069418566 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093827639 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076445708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08724374 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064316474 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08821074 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07266588 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069223588 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089059722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070298992 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102266295 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072826395 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085963425 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068407141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090170242 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070061312 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077997734 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088593379 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069763547 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091594966 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070894934 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095815577 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071627913 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095566956 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073378621 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071714437 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086627187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069868663 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084124879 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069116242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07019042 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088485866 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074597176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095251883 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068132182 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098951602 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077931954 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088443084 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066350485 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067993133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0869413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064353426 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08747 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067191644 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066483902 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08559164 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068425007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069905579 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092873532 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071839323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08803294 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06868504 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06269878 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089185401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071283421 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089132666 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066304768 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069213633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087473879 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073793764 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091545371 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067598959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090035418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072421779 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071357663 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084444991 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078045335 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087378159 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073293471 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070114719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088715532 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071586712 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092099203 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076782419 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090334718 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074235442 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079980322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091888612 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068235851 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086709681 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076834499 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068603492 seconds)
  done (took 47.785859857 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111262746 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084799599 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064201759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083554203 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079541831 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085456935 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066156634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06537023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084841311 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068256239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08326263 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064325008 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092689339 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090428837 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095531542 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088676647 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064664165 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065342437 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082291949 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066094197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092379384 seconds)
  done (took 2.479130592 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089581017 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102661467 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080343423 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102756104 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092222805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081762031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098057249 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080412098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102053956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094167168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084178688 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098930738 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075979284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094925642 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077624023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097387423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103528 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076223778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100927406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082309036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096709977 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098156867 seconds)
  done (took 2.80688266 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069003709 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068362429 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088751653 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064567353 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068333281 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082554848 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073671598 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083962133 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071732727 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066817567 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.09353119 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068481567 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088800571 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067128281 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068266556 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085203263 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134564601 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07304047 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086534911 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069493533 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064138235 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0894012 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063642561 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082355758 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068205342 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071700669 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087636459 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067075668 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086737969 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068911934 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068257153 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08611525 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071648446 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069428828 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087889965 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069066515 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088418529 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069579834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065528688 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086756132 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070814978 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084402215 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070992582 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07137997 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087073588 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067855471 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088546807 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.071294838 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065060396 seconds)
  done (took 4.56096136 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088995752 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143142246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089724081 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125145615 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084764101 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095784362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07203262 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124624182 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085486104 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067427331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105319784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08459281 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088944252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073176041 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090724187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068659 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089060005 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067517921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091331717 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070131661 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090801473 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076417794 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101944113 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081979681 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090252608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068139212 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086686721 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073681141 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100017371 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091395783 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075178386 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092096111 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084524705 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093400491 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068426853 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089081924 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086151898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088153215 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072297156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085116251 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071843372 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092293004 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075928055 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104004609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070242109 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09230026 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069851512 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083932145 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081942705 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089050809 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077859099 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10180055 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090147339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070753531 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074732119 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102938305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087043109 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067097696 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071338605 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100365039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084160239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072524521 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101198521 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071161112 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094408515 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084443223 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093016554 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073597534 seconds)
  done (took 6.789239477 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078783634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094039758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085371653 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102796323 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094890355 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076175894 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093994422 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074702607 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093342945 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081991046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093392084 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117411694 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070759507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098536639 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075525009 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094420752 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074435285 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09444469 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093150339 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077240445 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09358092 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085030891 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0936594 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103674075 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106029839 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08919638 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075933322 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094351646 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102260741 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075200997 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105177329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074577019 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093609801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103004081 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088899662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093572359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068567319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0942331 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075036695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093136038 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069707793 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102901912 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093841652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071403223 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094580837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076277224 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103347043 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107463514 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080082595 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099093006 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07552566 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103855199 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093312836 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075910222 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104071081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128768152 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084973469 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103135106 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093668504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085648073 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102574451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110557837 seconds)
  done (took 6.450005971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090565507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096646714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099587883 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06609477 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067167791 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0938113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067013955 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085595297 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079144873 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097657544 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079469581 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091437507 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076648071 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098427804 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091673845 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076315949 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090853535 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072933717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096470484 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073446677 seconds)
  done (took 2.506028499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078021708 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105888823 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069925835 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095327575 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072689267 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074406345 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090663121 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071773117 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087776328 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073488571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099022166 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079977865 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089176194 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075386538 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098209033 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075966917 seconds)
  done (took 2.157245095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080872171 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098373339 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084969925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088121133 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068128733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084903117 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069680107 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064981883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084754331 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084353989 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089873388 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071518323 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087869517 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067239805 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065165615 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09127113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065952571 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086244518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06992867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103638004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080765997 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086892821 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07004122 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090760417 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069948 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093692014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070502593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067548297 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087155505 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069509307 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088476627 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076949382 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084540186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067427341 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085807768 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066753447 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069290428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088095524 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072733566 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088104793 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068510891 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087259023 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069694751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070128193 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084117794 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069357081 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084101941 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075979483 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065939402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088919828 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068078349 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089643179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069793223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097451144 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072122444 seconds)
  done (took 5.165960324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082524917 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072149521 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08343871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067489198 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091258546 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070817255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072986823 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09120727 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071519557 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084932557 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070298319 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089939307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0713858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072307205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089323905 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072000904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083499569 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070692126 seconds)
  done (took 2.232488979 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075021782 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068502212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095193172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069226534 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088028973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070838553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065804821 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08674265 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068514669 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087540699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068870514 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071730839 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086456966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071621834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088316729 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069751339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071021361 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086828264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069616262 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083928156 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071194825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067631626 seconds)
  done (took 2.507857971 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074287342 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096496833 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167544914 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110941719 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084947272 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101952602 seconds)
  done (took 1.46388094 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092941667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102239351 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070225242 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110627746 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078110239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089624403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070334094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089819576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082036196 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105333234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071176758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100914391 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100114563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083670233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09567209 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076801321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09091077 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071561227 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08968325 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109245985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072396022 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100392147 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071892963 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090021844 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070545194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098758174 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098794489 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084374129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089165492 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082070963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096157196 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071914716 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101258193 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104643676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072172577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09972848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071879981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110626436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096581285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08049942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091868071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077661068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100415897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077933532 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100176736 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090415332 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076341151 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090809953 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070473573 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115585898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097173818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080597384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097110304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099117666 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081620109 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11694907 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105112896 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081677331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097532236 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103933018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081968022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095993395 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098617176 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085839072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097024933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079643018 seconds)
  done (took 6.762471355 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08749196 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107980575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072143561 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104912731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099741797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072410128 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090306695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072516199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090057183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070028771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132042086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072072833 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099812188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098444047 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070848922 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090501389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072142641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099132323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070751553 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115688837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089422799 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078888781 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099129182 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097554351 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08701332 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098001449 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070332288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090303775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088646317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072459645 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095301755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071994284 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098385255 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070766375 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099198253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071260158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090391981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077621132 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090993853 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097194153 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082449766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108338541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071755475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089917446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103699598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071856516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091099198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070260129 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090610984 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070880457 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104185804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085011799 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105152425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09912634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071409218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090859511 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07236537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090585027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071306026 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095906266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098916654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072006542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117297777 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090113691 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072312497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099207291 seconds)
  done (took 6.641740881 seconds)
done (took 130.827915813 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201944669 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185765865 seconds)
  done (took 1.210628664 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070638722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117925435 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080902866 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130912769 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088734108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1027032 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120310224 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081846365 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068681469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088697999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068678033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090390077 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133812976 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069437248 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089288381 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071669415 seconds)
  done (took 2.302994633 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105926754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201207575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113482853 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067337656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102802421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080856062 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088698574 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080742666 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095170938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068652668 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10035852 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078335302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068069699 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098835574 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093827555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081303286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068523896 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100303512 seconds)
  done (took 2.526965675 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098508937 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110540127 seconds)
  done (took 1.040494563 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208556843 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125089169 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207772484 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479955044 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.248605644 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293773096 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176405832 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176707709 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157610672 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174332582 seconds)
  done (took 3.077986059 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101928301 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175011066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32466256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141800945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0913376 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121267947 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142756377 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113796787 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085537688 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104147725 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105015964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08013193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120925983 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079026054 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097683522 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080858264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125579033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076086833 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098061779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079611619 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121225023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068605741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098048557 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076620982 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103506565 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082721581 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087828964 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069638197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098871123 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07762266 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10097299 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116824532 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08235695 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136909539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106328994 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137103857 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09944711 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075920293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078125369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095456902 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079186027 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101355247 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107277103 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081439063 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068389895 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101037778 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06785227 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088812823 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083831527 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101909476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08396349 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101714859 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13544021 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102149463 seconds)
  done (took 6.400824606 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.76707271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139462348 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074280264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.826601069 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118243709 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08763905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.751364959 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096680397 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242887976 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761468051 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114521593 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079690275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211284153 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.222756909 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960051598 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298153322 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650202595 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109331819 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133380256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114084873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164295255 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161791719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154253025 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44243834 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098875415 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074260117 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141563101 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100577453 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143500716 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108534561 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076376163 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160922787 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260183373 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166961482 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097779962 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073661713 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07225776 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172908901 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232963893 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196821345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163408966 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071602154 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092879598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144814534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137350204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070467371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144957601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179427987 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154665465 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076034343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100057515 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146984001 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144326607 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147975431 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103272511 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306880267 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.299493194 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074723725 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126193653 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089518753 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247173046 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105818371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189875137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143922079 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193847266 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073341694 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804456077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154045517 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093054642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07984282 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124093913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097226637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143862812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147862004 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373711255 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149372268 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075688056 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094033668 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21610816 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10649026 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072845634 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146476234 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098710518 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127770598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.15160774 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152047813 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152204725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.238702574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150043701 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144605326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097364232 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130692702 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.079675976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2003561 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2012275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.145989505 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.198582351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166718202 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148082815 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153311538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080367619 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178344976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123031741 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085878838 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143569679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201101007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128189959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107111321 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077779114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146132531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129424937 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108899518 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145606126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155218428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483548598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.154066514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069955237 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110803151 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145443159 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145839568 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0985273 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223804966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127227754 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153939256 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125571244 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089585192 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125454291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.149052444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082395667 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12675495 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165855251 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080957127 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220752884 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200695442 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083390284 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221160244 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164970884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078436557 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156184019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123631605 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149829607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100616071 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14284461 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098179223 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794428231 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168729958 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125693605 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077681853 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17911338 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073627465 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106026023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085389242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090921531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789172995 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109191739 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103835766 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086700312 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098901895 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126270975 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143124549 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076363723 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166515099 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189287784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10070479 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124828799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086250722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144476714 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09836782 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106446085 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086901358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106119307 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127011742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075306589 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10577213 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153827952 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146940049 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.20153719 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550171238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093466504 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087430344 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209225784 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093058635 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252480974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142326798 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204617601 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145815595 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103261072 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294011589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149281841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182389427 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089279772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155380978 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090023368 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140787758 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150231295 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094557786 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078950954 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145721554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.17283618 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149892226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964945756 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074827029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213926024 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090527266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156452164 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078097625 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101434311 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.278535238 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074610787 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152113046 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146890141 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097518394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106158859 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.683745565 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085801248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164933781 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078955492 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200395521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.150000246 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142125464 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163366042 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081452702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144909548 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194804906 seconds)
  done (took 41.9186514 seconds)
done (took 59.303283718 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285501628 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218113351 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.237275446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149280489 seconds)
  done (took 1.82467195 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149475672 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10959456 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12106882 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08793903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108474693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08827876 seconds)
  done (took 1.523222614 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433539374 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281747023 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242258944 seconds)
  done (took 1.817514763 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305970497 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235221588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461140744 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306786831 seconds)
  done (took 2.275319275 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199678072 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11814783 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092261241 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087139109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.187144075 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24873987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130715525 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193804626 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102885099 seconds)
  done (took 2.264346885 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.184937463 seconds)
done (took 10.747240419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.194221218 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.22365217 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.229088037 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.217195981 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.136444854 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.186176113 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.148569541 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094097224 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.274557179 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.251086177 seconds)
    (11/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.13202052 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086711337 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.190697912 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074388532 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.240307252 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.202450435 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102546493 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.223457276 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082683751 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078464518 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144713403 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.169385557 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099842611 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197505709 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103264031 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.147084847 seconds)
    (27/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.18939301 seconds)
    (28/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074785274 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.100641204 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.232413816 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083597936 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198484196 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075070114 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077839661 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160354019 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166547252 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136382866 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076933499 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.122388954 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.184008942 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056168234 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130369813 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12978648 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.100173087 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.167681218 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203236934 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135103095 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076703869 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094145408 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118681819 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099561268 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.160872215 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101743806 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189707112 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075610792 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117424304 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.1994744 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.124822958 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.125051861 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144089571 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.097609028 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095113399 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054256943 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073826819 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108596181 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069794948 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093057814 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070494231 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081575436 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090903528 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063346824 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068870989 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16118234 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154113483 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079617843 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101975947 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08084496 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.156100056 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160803995 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069618692 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119900051 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079275298 seconds)
    (83/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074202837 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112746325 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078316801 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121698747 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112752285 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10522961 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074984252 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.091094161 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099871702 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191002105 seconds)
    (93/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063498378 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155695613 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115859976 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.138581714 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125957083 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093017149 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090119312 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105756954 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065881014 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10521204 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220088791 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14799861 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124325059 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117183173 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054549541 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090225564 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.159062817 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077069113 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098767617 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094265249 seconds)
    (113/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.084876002 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079689246 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.175072305 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06096053 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090603254 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 0.168828447 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152842782 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.096775933 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077667394 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094591416 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101122003 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.161684468 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078334877 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165576837 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09776311 seconds)
    (128/309) benchmarking ("sort", BigInt, false)...
    done (took 0.235763406 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074413085 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084456667 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09793381 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064900506 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095772214 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100445053 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101063409 seconds)
    (136/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065740179 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198371624 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076388007 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076284165 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159295741 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075376325 seconds)
    (142/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.100394358 seconds)
    (143/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054451762 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068037325 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075303666 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069259173 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05494066 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098215827 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099300374 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172287226 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054984894 seconds)
    (152/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090511659 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095993272 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194391971 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178334917 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077572858 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091102607 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054896119 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.270765232 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.173324248 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092447719 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163134169 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11391837 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103735304 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.097455357 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079033294 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 0.154390742 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109587893 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090171241 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103758671 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071294304 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089872939 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099024032 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.131899866 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071313668 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096272978 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070010237 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095287657 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077047965 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102858989 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163152319 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074422774 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090821974 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069201057 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075031855 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081130875 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068622041 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054565624 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076059882 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 0.129053169 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10043966 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053750349 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085403066 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.159782367 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.176235918 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065143143 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091015465 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066783293 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164730903 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093010552 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105107156 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093878572 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0667823 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099982615 seconds)
    (205/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075762815 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090699404 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204963253 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081253376 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067558236 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095618578 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053707205 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053272813 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089776052 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054532306 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075699312 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07509495 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05679877 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089597557 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16497717 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054886768 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098952818 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07798919 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08954093 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145575445 seconds)
    (225/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077071846 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.11144806 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099017589 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073461549 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075653673 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07660444 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054259151 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068002511 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08484771 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068836235 seconds)
    (235/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055058403 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161487876 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195953166 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145297462 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094659917 seconds)
    (240/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093149959 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134797308 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07897769 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06785736 seconds)
    (244/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097083641 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073756902 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054643091 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.134987371 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053721549 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090928787 seconds)
    (250/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103760561 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139100871 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073978566 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094524716 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054493802 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06805903 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085744594 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.0758065 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053719832 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090151297 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074677683 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068344846 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096166915 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055173728 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115255654 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075385581 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055091806 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098668627 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055057418 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053573443 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065675045 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130855473 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054843353 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076321139 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06347633 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.064625843 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087801104 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070492838 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05528758 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090616117 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055746616 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070780653 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099922243 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172110701 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093172967 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056699836 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090481603 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071502719 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054023572 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09305081 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07921348 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068471017 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089603585 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068794354 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076503003 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090052716 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054129286 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11411332 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071649701 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055992381 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095390377 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054647084 seconds)
    (302/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054540364 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131084617 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054864581 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07035272 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077083969 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07374895 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054909515 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091115469 seconds)
  done (took 33.994500797 seconds)
done (took 34.85321414 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08431798 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118011188 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077294351 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118234119 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085832151 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104106312 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076495711 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103832141 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083807871 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107952445 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083398153 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057117566 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100317481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077711743 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0999309 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097219654 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103114303 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075983805 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097909651 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067482384 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076134012 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089676696 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069527378 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057482039 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102100699 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075787603 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097473616 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078762655 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067995187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089400078 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071573486 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099141604 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068311676 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083314568 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096382139 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076455016 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099886886 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080214672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070616028 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089893511 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076341364 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090943423 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074973145 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077601626 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096345316 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07443474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098373649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084531669 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118559172 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070913941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077543171 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10166496 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081549106 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097723464 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072360303 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098598992 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074930487 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118999636 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078826049 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070757552 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098517106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07856547 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098587996 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077075293 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076753634 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103075743 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080173357 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098671493 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077875083 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074153888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089946343 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076869793 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094034435 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068541556 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080022816 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102081486 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067834933 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096513057 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07546347 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075039552 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089992564 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070586656 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07086718 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096063008 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070822859 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057880624 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094900523 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074933367 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089561598 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076611771 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075094222 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096938345 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070120187 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101978116 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067924814 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074964468 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.090589166 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068182341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070528791 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094341035 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068195793 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093198772 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078112699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071180294 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096416634 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084287664 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089849142 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075755352 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068200038 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090130405 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085837285 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100708169 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068594069 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07093857 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089694505 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075661555 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068011317 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090140021 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06853968 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091157826 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075578334 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068621172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092342974 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076004251 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082410295 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093480674 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072957135 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092653278 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070005795 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074320476 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091281168 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069652802 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070833436 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088382599 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072050872 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068843977 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098661929 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070539078 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098841412 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070884563 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077389328 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09622396 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074756719 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095919442 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067529397 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061200104 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092779326 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071099569 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070238409 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090726618 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070107364 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068273063 seconds)
done (took 13.556900602 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068734864 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177112478 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132008551 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100357222 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11401187 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069438121 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104029994 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134689425 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070362646 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13218087 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091887114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111659711 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143866498 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06794036 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068715953 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095974353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071099189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116992759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108826397 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113025069 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145276263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067303738 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124898597 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11730487 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094750979 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132205981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070807249 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094682681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072520032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120314746 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089404478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072895782 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091569968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12874959 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100352765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113053505 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069931172 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111600022 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069378592 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090623558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.098778763 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127773583 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108063565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087028722 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094101089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071988346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06996694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112997621 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117825141 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085674964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116069507 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139787935 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072906288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110547025 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06842334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114676395 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086704435 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093515012 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070493863 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072418366 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090684435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071746113 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115399982 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120646007 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072864321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109373401 seconds)
  done (took 7.479193971 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088655157 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118899387 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087229131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110025331 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069111818 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070557687 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092196184 seconds)
  done (took 1.554753133 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069679426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091946561 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115937984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093510856 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111986279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091030125 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102000707 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069893692 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110756493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070546975 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113932633 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110136646 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094294906 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077316065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118998262 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070561221 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094849221 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093135538 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072458477 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116800268 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07254947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113971385 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072039155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070359323 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108486429 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069424366 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142483498 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073985192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094321078 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072565601 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068686058 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143412669 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106855154 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081669407 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093155574 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085093963 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108126118 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069366973 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087593276 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099087186 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084998498 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093087429 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071812415 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067771763 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09796639 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080826507 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093463952 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071769102 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072429965 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113611341 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071619913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107258143 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069826318 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073723233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094343907 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076817094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102861201 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070904146 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091975936 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094733657 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087689802 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110251201 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084845329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111106195 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071973581 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108104251 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084912639 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073086126 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094467322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073267929 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111529369 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067324654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071509091 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103780988 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072336111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117084103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09471523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094255675 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080944462 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070590287 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092861957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071194689 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11689258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074004873 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092747602 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074155067 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072866285 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091032742 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069586041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073286026 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09149508 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070862526 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074120991 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093458762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073379964 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110607399 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070475766 seconds)
  done (took 9.543539996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071321009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070728024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095145253 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071377973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071939476 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094629009 seconds)
  done (took 1.408224574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103932607 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095586549 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085915612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09916468 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111083195 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109125629 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086551251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109023134 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087916347 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105828813 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086285663 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110533066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092301519 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100504365 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085656323 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098664253 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085738204 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104232253 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082537838 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100433144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093520733 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099721065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076709354 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110660467 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073478498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098655725 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082168993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107488423 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083910604 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111160734 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07758171 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0960918 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075640789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109398383 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086254203 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097849032 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077102004 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074312272 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104763705 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074039061 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109906222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077211458 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105281925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074484788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110707208 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07612301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098061295 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082086529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108997045 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074179915 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09805218 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075180621 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097458769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075706873 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075733884 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109353746 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097491042 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087438189 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099601378 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077216787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074327327 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097139792 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086685228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096303183 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084948583 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097068529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075467203 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09938425 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078218566 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098815362 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074480073 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096410536 seconds)
  done (took 7.554321138 seconds)
done (took 28.455044737 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657876039 seconds)
  done (took 1.583569083 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813558721 seconds)
  done (took 1.741379856 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.685233116 seconds)
  done (took 16.61763265 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.655961017 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.81139153 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831186092 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160372107 seconds)
  done (took 3.385529351 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.889590625 seconds)
  done (took 1.84159264 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24725588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256818854 seconds)
  done (took 1.43766772 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732532005 seconds)
  done (took 1.673499855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.308519981 seconds)
  done (took 2.245358393 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343689515 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190214804 seconds)
  done (took 1.47518879 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532166072 seconds)
  done (took 1.474379643 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.498181609 seconds)
  done (took 7.444340719 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235657986 seconds)
  done (took 1.19155725 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274907515 seconds)
  done (took 1.220365674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.259103762 seconds)
  done (took 4.202000907 seconds)
done (took 48.465181806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082180253 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084334744 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107240371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081334784 seconds)
  done (took 1.293531577 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081524562 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076147564 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10340913 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075105979 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105093827 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076842597 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10150929 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081504434 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098563515 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07829918 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076053378 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098486158 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079802969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100783033 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073809312 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079673356 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103628878 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07580298 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103481684 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075984938 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096855347 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078546318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102694341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075189151 seconds)
  done (took 3.049094937 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080636691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076896884 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10065504 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07607728 seconds)
  done (took 1.290630548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080857976 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119317548 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093872386 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104052672 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09780513 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114346879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073018021 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07206476 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09792839 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080702556 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093996547 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103547645 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115363052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079655971 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105298612 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068638199 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095285035 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091364712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080497229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104099137 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072965437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103781548 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071926387 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117074268 seconds)
  done (took 3.194256953 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079704533 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12839 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081892127 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115904365 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095900749 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068510044 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103332594 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095889672 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152514009 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092218054 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072555619 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068407668 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099299904 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068575151 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080341129 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136246014 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.139029384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07173623 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124738991 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068306579 seconds)
  done (took 2.897453412 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077849696 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072365616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091682932 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07168009 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079362838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098829556 seconds)
  done (took 1.452812437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070997408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071303294 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093843617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069688431 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073939308 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093370731 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068814266 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070938761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094448233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069995338 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093486662 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068622912 seconds)
  done (took 1.89858865 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.462426762 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070833932 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094327236 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069444316 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074396004 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092890958 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084209657 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071299076 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117710024 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069270817 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093207283 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072514879 seconds)
  done (took 2.335980173 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273954068 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081728498 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339282753 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174121876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143543929 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162961296 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133730109 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146601082 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180830467 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14334234 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236493813 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231538337 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140213566 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175343823 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093408136 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136941887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219372077 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204383885 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132225864 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233266472 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214925205 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161567124 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187718339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132336034 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139419173 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152546553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075621212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108426452 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241487062 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169266771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207705537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143079573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124385464 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216592098 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230251524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202897369 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167112156 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088317434 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162856251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169665459 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268470642 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118579719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227180146 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139041435 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085064418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180293647 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176256272 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152859789 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141981457 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094982419 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208602444 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248858143 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175458723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116385903 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117735647 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145496393 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148609602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13349161 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254944924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226923613 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164113801 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098081621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1031754 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218979436 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165825727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148981305 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159334608 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124474532 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176121825 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220543444 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149524576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180907625 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189274765 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117424048 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154543806 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179642985 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161941347 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240408148 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160794762 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076448237 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18120497 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110255587 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11103715 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175908957 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08004819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245481922 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128851235 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14573229 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120367744 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139643134 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14228205 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229793522 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21210245 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111084765 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094008498 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11033094 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177311176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183385264 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116708159 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117264235 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177438929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082523267 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19894424 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079481188 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157447662 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105770941 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160051946 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169686452 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079979933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182751502 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109695054 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132658998 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171443765 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228486009 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119574183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087360096 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235132125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16082896 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135774871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181951487 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223228761 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13208746 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13265147 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187088082 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252627388 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118523978 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207155642 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134395892 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113599124 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11669101 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161982909 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145966544 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154786592 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086732858 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160265737 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235983293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102466015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102807427 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194998601 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086851207 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110010118 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147082972 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129857989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101156347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13154622 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137747881 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177096363 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182922843 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114981168 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183919975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105519308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230170265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119997035 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135039771 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110028951 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09793204 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172983654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22690585 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084100065 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23356646 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161366797 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135157951 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153092732 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111562732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178783203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083621418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098906696 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178539823 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142591659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142886808 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218134524 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110214727 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16037894 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182455426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168423485 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167725667 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168465378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138236656 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116814434 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144359005 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161282739 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101946429 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101641595 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111822964 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13561809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124354604 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087752705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180408739 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186256693 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103789185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145483854 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129244458 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211712817 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081801453 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165318556 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153709147 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124446748 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22100531 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199945227 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1952899 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106939945 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208618269 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075321242 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10284143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096376279 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187546267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088349832 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113734349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152043736 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189448435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163523689 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200202517 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141048486 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156470996 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198929788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099940328 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122682426 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215292087 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160633176 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158576203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095957113 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128523668 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182653024 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135488322 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257224691 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148208314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181975931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193258087 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135330859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084364436 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134984729 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199743937 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137720468 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191536093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130809161 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118268015 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143407675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085803868 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136206791 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163494485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153224595 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197154942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149414395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169115727 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106717755 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149350345 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158485006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159137006 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067124327 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153185745 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231229892 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125583654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152119604 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221710059 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083893474 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15547413 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248689263 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209446897 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09083779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140180289 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155865193 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165630432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152135279 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205412422 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141239841 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172785701 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142888946 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090535237 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117067986 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129391537 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115106116 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126848221 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146897838 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151417885 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125541523 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167418125 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146123929 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141672771 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151128766 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128182391 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097214849 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129176517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243848733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154708474 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244213558 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132373824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19033179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237883016 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104437106 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084412282 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111117781 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179058778 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113264457 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171677231 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102532293 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134433108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160567851 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207496404 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100966925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097638581 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142131095 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171284161 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143671981 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129820636 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137377315 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205318187 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136462303 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109195141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160435386 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110387542 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135168505 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246659737 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064996308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127121991 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078776375 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110995883 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164559994 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223100931 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112982153 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133801114 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150558154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156679633 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193447513 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105407553 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128350423 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144099546 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186044398 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189534064 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095573891 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145168058 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19422518 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199803261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139429355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12745037 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24129057 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197513051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234388708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118173026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150970861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148614984 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144967697 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18036329 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11346557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237203964 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087430795 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199651354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136135634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099921494 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190278176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103518419 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120191826 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206481041 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177359536 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086624654 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10921396 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147917832 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156363073 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13447913 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079679814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201577408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076835482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174558916 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238372704 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110162119 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11299026 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126835257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111786152 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140267436 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136684793 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092224135 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.145381164 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244911882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096296553 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218145416 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204458325 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149090995 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176404749 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132527825 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670171378 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083165802 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223729628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153147953 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249502515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129778952 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154492623 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144989801 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157889235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18005867 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137475613 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209541434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170094062 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181463746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084380057 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136205068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145003914 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121128906 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140470192 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150232419 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148358099 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107906343 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180218045 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165100631 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08677931 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127138699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227009547 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15274727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182135108 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179164644 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114787933 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15334869 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208151489 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08401979 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159751675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224343297 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141767506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131966308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0865027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139411738 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242105148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102657221 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202183283 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186332848 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120039067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149029087 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.181805483 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171595259 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140884734 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161578291 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127052341 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1469062 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150175899 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116032343 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08264755 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139699524 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145992864 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130660548 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134794662 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123892666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219090319 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074886853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127077379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133818563 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184289859 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251260574 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121953819 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087949385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151877158 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147057565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15126633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187856899 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0876016 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112942261 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087444433 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160377415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144924868 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149688128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10971032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143610103 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237227898 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114981522 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231774595 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126627596 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14055901 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072684821 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109058444 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128273469 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102696501 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136294107 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128917838 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241501695 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103324342 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120877127 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125049939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076742372 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113821315 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167463894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145134628 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156233324 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128540438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066330116 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139912546 seconds)
  done (took 74.312257164 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154895313 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10843857 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121069921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.179855397 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150333437 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242597285 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184170438 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229257683 seconds)
  done (took 2.402245196 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072958203 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121041437 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106944952 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12001676 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092828075 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072435399 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311091471 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111993289 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093298751 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095711805 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123703678 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094468731 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484874173 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069462422 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095441258 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086491549 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069964807 seconds)
  done (took 3.245440056 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.447891633 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.637035106 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449805713 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100265802 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.897401586 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111013686 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.360863235 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164420933 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094240369 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.423729847 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727492439 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149494274 seconds)
  done (took 17.598008908 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077410579 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071980675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113220378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087519046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101600748 seconds)
  done (took 1.48561348 seconds)
done (took 117.391278676 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083416441 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381620218 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056124351 seconds)
  done (took 1.507101989 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086567988 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08930909 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11509285 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088334331 seconds)
  done (took 1.423954818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078584083 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078840634 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115104265 seconds)
  done (took 1.313785581 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299216617 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171402528 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092535886 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085721674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079964967 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107783206 seconds)
  done (took 1.312003727 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075599072 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078164482 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102388108 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08113516 seconds)
  done (took 1.369134508 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079345556 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05526437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058078339 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08407183 seconds)
  done (took 1.314845421 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094345006 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109299922 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084815493 seconds)
  done (took 1.32345501 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114341593 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116742222 seconds)
  done (took 1.269858694 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085056841 seconds)
  done (took 1.118612499 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096088125 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145748447 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167755023 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142992615 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176786342 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142558446 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117844026 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092278688 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107457797 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119095035 seconds)
  done (took 2.348122559 seconds)
done (took 15.977788477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081501147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393062746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364071818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121213221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673132566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386012528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984518657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122588057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112856047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0982084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088020271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676769098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975792989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347695671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96181109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326009999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677573472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071548102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097451894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072454414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970464635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096080847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070669531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09813004 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652511276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375805967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097854876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325499378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097214087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072983246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358321232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09712281 seconds)
  done (took 15.974746838 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073815193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147646961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077563715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087203795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10022709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072466886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101809826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072756101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152544081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071620281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115195444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071062817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101389616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071738838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090649629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097342509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072629035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097989877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0726313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072329143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116599849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07196771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098471521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071780945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071324878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109800367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072005561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097757837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073166605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072899726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100472974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072825131 seconds)
  done (took 3.891831681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120563649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158438312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078668664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132673529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145104896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073900576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175668725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097625253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155926852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072265884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114265358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07219357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132461748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073434765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119119188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072221897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098091639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072570469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072412251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097613784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090885618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097722654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072238871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072077423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097852983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085243086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098697675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075443362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09787478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07338214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075467073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098332018 seconds)
  done (took 4.219174029 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076913344 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078702249 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113230866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086828117 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099447342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075144483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075485783 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100660714 seconds)
  done (took 1.74932789 seconds)
done (took 26.867585102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08191815 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073051164 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103007514 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083874092 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102613363 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082820366 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070332779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104144812 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078305013 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102431437 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079186476 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070343625 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101196716 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070759345 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079062111 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097697421 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083661785 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101652265 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082956635 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110603907 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073675198 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079826943 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103680551 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083607588 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109391968 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082817558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110369826 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076959088 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072961746 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100316192 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079915793 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11668116 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071579625 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109232736 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072361099 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070818717 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097390503 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070951263 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083249725 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104070704 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073814892 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105445388 seconds)
  done (took 4.745942856 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093413804 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097204995 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116718074 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066066776 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098984838 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064943556 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120314397 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063119858 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065572233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120196368 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058474164 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060527869 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089286026 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057454396 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060023202 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059172761 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089930484 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05903073 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060672975 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087758205 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063113628 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056594356 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089549146 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062210658 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059490191 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065026617 seconds)
  done (took 3.034235653 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078899491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085812273 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117677267 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132423685 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136590138 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078351257 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108576748 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089626937 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114914509 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070131526 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101399475 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099502728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089962716 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105026275 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070317343 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114342675 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085571419 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072816614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.1040672 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092140996 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115605936 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080910534 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119456299 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083095726 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07065389 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099995945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074627616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111519711 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076872497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080363651 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102311182 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074647377 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099121252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082827068 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.110197854 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072564272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116892339 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080818212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079531487 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098999344 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073783011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071526813 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118178079 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116060186 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097123047 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077661597 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104990152 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080779501 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097282229 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089947439 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080523909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097307231 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074116481 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070471577 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098399962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085315659 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099285195 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073630881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080367857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100406911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083108599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101445576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086410536 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071752897 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105292591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070400841 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097978303 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070014871 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093823934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098379103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111452165 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098848579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071874711 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107421055 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078829876 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077678458 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098507144 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086627264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107454687 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074378668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10741545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075113802 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07477401 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116541694 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073030326 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072736819 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098541522 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077781586 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100125235 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072220908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086077401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097930945 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073538125 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116109042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070471085 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072547355 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10464309 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075166042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097430363 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083451148 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102926992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071408381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080027378 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09820971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073837287 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107082479 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076897319 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070482472 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103209857 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077017759 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097986453 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072303573 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073959567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100976203 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081383911 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076604213 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103985754 seconds)
  done (took 11.633331344 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20237157 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192715175 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074342468 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185581523 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083267398 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111426787 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186362715 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104451384 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098555784 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072061415 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099374486 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111968556 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132257052 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1440709 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08329937 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070608933 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116442936 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142073883 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19058467 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153333686 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117925337 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079032001 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.10176435 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072859524 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100448865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081294296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.116771518 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083355174 seconds)
  done (took 4.373924558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086766535 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131530689 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076425045 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121040851 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097223378 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098673831 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075516489 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072284497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111140795 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08538871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098373866 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076925737 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105618386 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.08056325 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072303018 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108644966 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080595403 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099255801 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074659839 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074797173 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104803132 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.086120636 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102830353 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06965309 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078316726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097675177 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069594179 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116915449 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071153135 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11976614 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069549394 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105187804 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081312412 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071744919 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097560791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07365273 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100252513 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073330318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072841873 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097088892 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070412678 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060235196 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097493339 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085305457 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104746431 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062400114 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077544381 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103496206 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076559447 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095925895 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073255065 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074116403 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101902582 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078458801 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076695639 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10293081 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074473521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09733139 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077681593 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0736674 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094760352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069477128 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075520559 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097557416 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07917347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103077184 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069849596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073021587 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103735851 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077383358 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100876975 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073623365 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068988553 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100735393 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077465712 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076224592 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102386312 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069319717 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098288692 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07165763 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058244561 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098086959 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057260672 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073988563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096708253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071154081 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073428504 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106938898 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086737501 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099400015 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07887493 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099566317 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070986089 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074329177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093798487 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074100442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086530032 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114682949 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098491394 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069224047 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08539162 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103546659 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070076681 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059063936 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10560011 seconds)
  done (took 10.115347253 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095778097 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123139832 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072964011 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086046526 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125756056 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097189253 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106897258 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07704676 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073275537 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11541351 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070839799 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107884801 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075474833 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079789909 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12300093 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078681659 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101038975 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081120776 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106554609 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.107775719 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085473906 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112967049 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081984931 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099169216 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07508409 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110820685 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099097425 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081346901 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107479995 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084929182 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108784157 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09877257 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114119635 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075726605 seconds)
  done (took 4.312007329 seconds)
done (took 39.25527356 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.124799825 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.335114432 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.121904938 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.980684806 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.131292087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.13451879 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.149912989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.123609326 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.540850057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.123758361 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.370938444 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.668463762 seconds)
done (took 58.871719114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.249872655 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.264559282 seconds)
    (2/2) benchmarking "String"...
    done (took 1.394524515 seconds)
  done (took 3.733753725 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.523495821 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.073615454 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.408919574 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.120660916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.125823506 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.54451559 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.657210019 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.971545461 seconds)
  done (took 26.96747271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.121417092 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.469770942 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.396136187 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.397824917 seconds)
  done (took 17.453958905 seconds)
done (took 57.996079243 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.120095471 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.134523396 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.140730499 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.107569343 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.244789997 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.154180363 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.701210551 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.398110863 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.122964366 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.129302097 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.129939333 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.125558561 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.138968934 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.149920378 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.127493471 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.12932784 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.173236254 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.79725358 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.501509059 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.127844171 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.14871548 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.141780283 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.143451315 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.142560944 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.141843934 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.127049727 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.125492848 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.138862097 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.300348056 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.127064275 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210781661 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.337829045 seconds)
  done (took 188.808253111 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.123768471 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.337822662 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.398962781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.142088041 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.636548087 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.320741644 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.258479218 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.848856625 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.138668511 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.151027193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.433322884 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.124456718 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.468350276 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.108373078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136988801 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.128746482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.441740525 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.464969888 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.147193027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398047503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.129803863 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.379358455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.316775046 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.374271844 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.157181693 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.17075442 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.142964945 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.127646938 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316012588 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.355145834 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.134937033 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.153341219 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.676333905 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.986557222 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.138431967 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.130628213 seconds)
  done (took 147.964405969 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.387539319 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.12537762 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.125281537 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.127464802 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.154137671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.124817683 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.64516977 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.64905069 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.648809264 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.446114848 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187452809 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.328560104 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.126264451 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216679065 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.138532731 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.125916086 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.139877634 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.153520912 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125288801 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126435026 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.647946866 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.141222467 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.337304438 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.131881893 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.126034942 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.154353616 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.517248768 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.126482009 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.155425241 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.997503925 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.440108869 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.167945236 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125928918 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.126056909 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.419337716 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23662684 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.128219265 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.156749997 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.126311326 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.391115389 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126877017 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.127502912 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.13076371 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.694855669 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.129034632 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.648519751 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.128582495 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.003104467 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.127250272 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.127327395 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.475215102 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.133563134 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.592003248 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.129630626 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.126322325 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.129092185 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.127233433 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.127014407 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.158161129 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.512581144 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.222992508 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.12799112 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.130359692 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.155747619 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.127844303 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.18784342 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.127543555 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.645308313 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.129492735 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.347253262 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.186259896 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.651683269 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.130593822 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219942959 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244888086 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.12914154 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.126641872 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.127845535 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.12700131 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.233832732 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.129104333 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.517519172 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.128443702 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.133834718 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.129566323 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186970442 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.220123 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.129202265 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.423274042 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.130736179 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.128710142 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809292555 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220022124 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.129374878 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.128818668 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.129345763 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.517953618 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.654594972 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.302190384 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.131508014 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.456738203 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.13124826 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.531695323 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.632374246 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714861412 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.131567496 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235273941 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134167514 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.130934143 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.129545153 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.158576933 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.129375487 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.185251388 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.129794776 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.52520777 seconds)
  done (took 336.215960421 seconds)
done (took 675.44421929 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.824046982 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.771684126 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.895058312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783615847 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.770497884 seconds)
  done (took 10.118843562 seconds)
done (took 11.193202857 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.307073165 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.307408713 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.187820819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.309386578 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.160219924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.323109311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.286204856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.15365622 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.226239032 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.20173658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228714595 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.176389157 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158829186 seconds)
  done (took 17.101642695 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443980645 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483108967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.197298852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.476664906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174369006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.479398956 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.335638069 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334007237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346230236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.147936428 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145789665 seconds)
  done (took 15.640414048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.446725103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.445182741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.200792807 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.443497428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.176466227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.454215498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.33007317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346255945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334983258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148940043 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145800063 seconds)
  done (took 15.549173197 seconds)
done (took 49.366517416 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.14265706 seconds)
  done (took 2.217984133 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.17506854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.334876836 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.159277812 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.148002958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.144068177 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.146625126 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.147981942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.143481561 seconds)
  done (took 10.476353036 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.141347752 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.13941158 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.141677942 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.140776634 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.139905688 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.139427704 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.140653219 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.1433168 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.142229679 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.142868841 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.140262953 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.143361003 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.143548835 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.143620646 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.139855928 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.141432467 seconds)
  done (took 19.341403075 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.141735994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.141552052 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.139553935 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.14073486 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.141565688 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.141483064 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.142384358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.141263622 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.141041041 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.141496489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.142146488 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.141000835 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.142128068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.140883722 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.141294356 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.141423587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.141227447 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.141238138 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.145853338 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.141068918 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.140367976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.142250035 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.142806919 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.142356685 seconds)
  done (took 28.478656235 seconds)
done (took 61.59081526 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.165372253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.714320837 seconds)
  done (took 8.957305957 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.143918842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.143529101 seconds)
  done (took 3.367787424 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.144150123 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.143662257 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.144411667 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.144144503 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.144685368 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.144352451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.144412514 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.143796649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.14435007 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.144747275 seconds)
  done (took 12.521799331 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.143118049 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.143871483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.142557051 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.144369559 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.143932801 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.141825244 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.144280149 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.144941328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.144557531 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.142317666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.144465023 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.143140883 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.145329593 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.143778226 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.145000114 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.14280397 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.142560793 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.142970352 seconds)
  done (took 21.665665855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.146035128 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.14601546 seconds)
  done (took 3.372176666 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.143380053 seconds)
    (2/7) benchmarking "second"...
    done (took 1.142029982 seconds)
    (3/7) benchmarking "month"...
    done (took 1.143302462 seconds)
    (4/7) benchmarking "year"...
    done (took 1.142710834 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.14438551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.143819855 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.14264335 seconds)
  done (took 9.083006708 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.146654891 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.333410366 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.411032253 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.733421296 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.147733126 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.148996474 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.992892225 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.14906563 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.15117478 seconds)
  done (took 13.295127872 seconds)
done (took 73.341753738 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.12329635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.138578681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.029196351 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.146144269 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.156129211 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.437057048 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.194107325 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.258198371 seconds)
done (took 36.564299483 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.139097525 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.841823945 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.88676393 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.156175132 seconds)
  done (took 10.965033232 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.126093211 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.041812537 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.127675766 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.149398875 seconds)
  done (took 17.526265984 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.744832864 seconds)
    (2/2) benchmarking "read"...
    done (took 1.47421698 seconds)
  done (took 4.300255015 seconds)
done (took 40.011373111 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14683526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.146008939 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.144396593 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.143639962 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.145457685 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.14730535 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.14444363 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.14386121 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.146817016 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.146248845 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.146627265 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.148074209 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147176277 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.147418847 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14521055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145742143 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148271173 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.145068735 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144522075 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.147946416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144897975 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147358135 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.146005174 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.146538273 seconds)
  done (took 28.588119319 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.146149986 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.146066043 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.148300192 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.14850251 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.145127243 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.148241672 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.148060188 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.145922587 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.149487525 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.149169278 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145918458 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.145289005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.148267934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.146046518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149058209 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.146914972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.14912423 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145759422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148940629 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.146832864 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.149825768 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146783105 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.147588774 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149155274 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.146593781 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.146787793 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.150387423 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.147621084 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.148606792 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.147489982 seconds)
  done (took 35.513303714 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.153203395 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.155365004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.149649464 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.15004716 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.149492539 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.149642328 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.14959345 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.149731327 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.149231868 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.150164796 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.15030843 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.149590697 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.150159605 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.149833194 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.149508497 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.148580151 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.148753569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.151349881 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.15169814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.15107841 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.149855972 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.150020053 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.15006159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.150464826 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.149116315 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.150334781 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150935308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.150678097 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.150613523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.150524376 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.1510738 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.150954864 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.150227999 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.151009772 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.150725166 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.150931632 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.155108868 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.15760009 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.151249597 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.150962192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.151001429 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.151045626 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.151425481 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.151106013 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.151242743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.151473137 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.151137483 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151896386 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.151126452 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.150640588 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.152041771 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.151454331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.151342694 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.151762636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.151447457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.151382458 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.151366962 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.152332291 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.150955083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.152611967 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.151595186 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.152376082 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.15148102 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.152113243 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.153523004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.151686181 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.151594853 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.15202342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.152793934 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.151835311 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.152564212 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.153827209 seconds)
  done (took 83.971728284 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.151734619 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.149706998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.149812524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149591252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150041644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.152667822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150352511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153048109 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149821654 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.152199609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152878702 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.150715152 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150615239 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.152537745 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152206762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.150825037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.153440297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149959344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.153394885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153437853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152752047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.150873329 seconds)
  done (took 26.419322371 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153155871 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152445399 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.151210319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.153187479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.150488251 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152888691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.15374085 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.153043445 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154113696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151197555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151163892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153591091 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.151640108 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151792642 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152413615 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152163393 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154764551 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153056707 seconds)
  done (took 21.834747351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.151973662 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.152032093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.154561231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.150369361 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.151032298 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154928388 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151926952 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.154862776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.154183359 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.152648325 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.155318628 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154790197 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.154691995 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152276348 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155511606 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.152700741 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.15487384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152560071 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154539851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153010965 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.153616101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155565859 seconds)
  done (took 26.466784697 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154998925 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154773719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.152858759 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.153093343 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.153415736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.155188729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.155667163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.152607256 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.155365338 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.155675377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153340673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157297979 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.154857383 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.153753968 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.153525491 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153433261 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.156988493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.154842828 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1566988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.15357563 seconds)
  done (took 24.182438652 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.157481991 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157947563 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.158692717 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157336519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157739074 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.157969459 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157638757 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.158832589 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157746293 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.158514884 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.15849345 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158389304 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158344227 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.156946606 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158158006 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157688297 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158671007 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.157368224 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.158175297 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157841778 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.157480521 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.158323744 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158346895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.159232972 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.158685894 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.158726475 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15798928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.159084273 seconds)
  done (took 33.519031523 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158097107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.157733643 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.15486531 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.156570451 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.155539814 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.155342497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.156799894 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.15610114 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.158055734 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155556295 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.157904497 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.157903123 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15939804 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.158822077 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.158885631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.159427411 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158583008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.157287382 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156212479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156654892 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.159424725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159383781 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.158889705 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155964892 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155945213 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.158915011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155958917 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156813478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15907634 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.15665572 seconds)
  done (took 35.816239822 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.177093516 seconds)
    (2/2) benchmarking "in"...
    done (took 1.178183526 seconds)
  done (took 3.448429998 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.156669421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158621171 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.160008306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.157581806 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157879253 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159088687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.161689626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157289373 seconds)
  done (took 10.362546885 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.158320886 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.159494521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.160283197 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.16036268 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.160461971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.160611496 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165692129 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.176951607 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.158952652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160046349 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165559246 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.166436134 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162851479 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.15908649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.158946375 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.162244685 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.161519667 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.161175376 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.160762331 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.160315383 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.161577081 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161969756 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162162738 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.159007874 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.161491228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.169734428 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.165139844 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.161451611 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.160170057 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.16410081 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.160728925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.159706274 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.1629564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.163341187 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.164832263 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.162070044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1692084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176739084 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.166884426 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161797964 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162613021 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.159489833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.162328731 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.162562178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162722571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162269946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.162543112 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.160340765 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.160201798 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163600613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166536146 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160907604 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.159078536 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16456406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162913829 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169294647 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.178824203 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.164180279 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.170159434 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.173530097 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.174633829 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.169570819 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164418772 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.164344668 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.170792983 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184232238 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168448246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17693866 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.160141969 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.163577697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.168249091 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174039134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171260088 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.163523013 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164488516 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.164536475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163469494 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.164832666 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169472726 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.181763017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.163682855 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164335 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17176129 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.185195634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.163232868 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.16434112 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.16474164 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.164051263 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163329492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.174375016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180246266 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.164297874 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.162873024 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.16323678 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.16659693 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.165211236 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.163817082 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164167907 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.163011525 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.164504248 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165252527 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167732683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.172900883 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.165318695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.1655938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.171102131 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.165600816 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163204568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171619453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.1663422 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165373667 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.165678682 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.170550834 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.162822694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166760631 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.171976785 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.165437728 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.166029902 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.166229712 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.165286087 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174726428 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189593565 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166477309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.166256955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168907859 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.176303312 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166772826 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.168282471 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.166221786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.163532178 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.164459814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166666938 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.166610173 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.164554254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167923645 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166663913 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.164337419 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.167706647 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.1658133 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.167046787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.167530986 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.165623552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.167135223 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.168455983 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.166977231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.167733608 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.173261489 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.166460536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.16662886 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.166993492 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.165131618 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168258372 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.167208884 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167232634 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.166138775 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.168061196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165382038 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167636357 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.168555059 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.168281054 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168797504 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167863125 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170498988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.168984709 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.170840956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166690447 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.166720953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167227445 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.169388174 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.167518399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.168125287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.166492506 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.17105611 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.17677528 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.169159235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.169082463 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.170144811 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168447455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17001223 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169509756 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.171084836 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.175940775 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.170423603 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174374688 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.169517496 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.170581 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.169407832 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.168875281 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.168253074 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17168243 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.172500528 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.176621336 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180815813 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176951663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.170134855 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.173599892 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.171488137 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.173915893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.17328651 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.171580088 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.171813393 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170412755 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16955867 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.170570394 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.170946595 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.16893225 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.1691541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.170320492 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.16942428 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170392415 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170636611 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.171284733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171017281 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.167904988 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171787241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170933898 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.170016717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.169423052 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.168938277 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168699253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.170176269 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.171536781 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.176693656 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168311195 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171719534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173273817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.170202231 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.170082463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.171460216 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173681846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.170225416 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17803283 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.186971492 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.171179165 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17707045 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.186350746 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.17104209 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174227767 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.172581959 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.169375295 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.173822475 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.180343835 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.172632909 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.1723466 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.172476979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17267617 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173075974 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.178518385 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.17035817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.171632213 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.172875647 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172896138 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.170416627 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.173560026 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172470451 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.173782678 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173566469 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173747303 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.174386645 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173689035 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.174241881 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.173486103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172924137 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17529849 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.180314766 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.178168499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.17279378 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.174509396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.173465507 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.178492144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17180092 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.173085035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.173665846 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186730202 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.186360895 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183842715 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.180230184 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.179322203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.183878395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.177335481 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.179927915 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.176671813 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173475886 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.173063641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.172634874 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.171377981 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174450111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.174334408 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174863286 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.174645614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.178067381 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.175629149 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.173574658 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.174209318 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.17521558 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.174973246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.173667265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174847824 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.177114745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175815381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.173074478 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17404242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180820101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191344099 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.17506583 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174239124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.174865572 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.173391307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175466799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.175523378 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.178440222 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.183347392 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.178083344 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.182976216 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176303775 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184302344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175479281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.177936431 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.182984017 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.1744532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.174794365 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.174968609 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17696923 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182462193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.192336508 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.176863115 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.180728506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177647522 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.176786747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.176806484 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.17649789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17739282 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.176987973 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183190571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.192712418 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.179436115 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176755972 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.175122623 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.178075721 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.177102152 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.175835837 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179508887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.177552312 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.177652789 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.175775968 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177086095 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.177403172 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.177628583 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.178206852 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.175481467 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177890433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183679258 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.19291362 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.182181067 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178402645 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.185123658 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.17790834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183871605 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.194940958 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.1786097 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.179397751 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178419976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.178904187 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.177819222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.178397103 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.178935827 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.180852397 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.182619096 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.179564104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180251954 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.178416369 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.180017461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.178231314 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187375556 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.201988235 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.179492707 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182358232 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175738058 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.17972832 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.18240188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178986379 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.177206996 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.181323703 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189032585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187591336 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.17812278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.179985739 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179072949 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180117165 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.180621308 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.179595391 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.180536024 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180807973 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.179082429 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.179245373 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183235617 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.179857374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.179542755 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181312979 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.180784844 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.18956513 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.180182612 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.180742943 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180115531 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.180517832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.178819616 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.179435608 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.18027408 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180424799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180489111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.18041531 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186076364 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.186749872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.183506477 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.179393739 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.181949491 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.180389736 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.180787049 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180222817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.181673699 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181395758 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.181722727 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181566821 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.180590946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.178593104 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.181462528 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.180227313 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181886558 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182722176 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.18731617 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180793136 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.17973366 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.182629862 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.182504853 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180771296 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.181506409 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.188045263 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185436054 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191664514 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.188900957 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.186309243 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.181745941 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184582541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18955855 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.180481544 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.182584368 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.182826501 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.183881018 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.182745142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.185445892 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183670815 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.188783421 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.182723583 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.181464139 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18974972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.198080324 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183398459 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.182727833 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.185342223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.180936426 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.1810666 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.183624724 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.181978565 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188962512 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.199536872 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183610706 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183756873 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.180864324 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.183539979 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188166662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185229185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.18422702 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.181680595 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.182896544 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183534035 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185216401 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.181008567 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.182683303 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.182630444 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.18624473 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.190489632 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.180877995 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184721071 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.18309536 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.184028449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184920775 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185072975 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.182768494 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.182123568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.183669439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183735049 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.184180413 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.186505647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.183464591 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.184722525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.186362823 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184525288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186909333 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193574102 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.192941437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.181667767 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.18219224 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.184433029 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.187138725 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185383757 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.185050309 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184538221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.185614354 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.186717931 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185615732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.186717126 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.187578881 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20002465 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.202909607 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184458891 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.185609544 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188514234 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18580724 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.183251853 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.186264549 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.186911047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.188187259 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.192795292 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.188209537 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.192569767 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201594055 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.186235427 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.188444807 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.188577003 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.193435317 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.187987344 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186744086 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.187148475 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.190147092 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.202191114 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187461743 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195362628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214709365 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.202624742 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.187528661 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.186767344 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.185984182 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.187631117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.187897909 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.187633754 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.187258947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187730483 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.187033388 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.188391794 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192382415 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.188512784 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.188180269 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.188476863 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.186935926 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.188651929 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.185177888 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.188504516 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.187947326 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.188246969 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.188354712 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.187854918 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.187666083 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198889554 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.196377798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.189007395 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.187555675 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.186594702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.191246729 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.190190853 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197660839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.19559539 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.189192425 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.188578607 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.188374942 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188811153 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.187156026 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.18814145 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.187912375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187477967 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.186736006 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.200429967 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.19775554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.192767197 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.187792475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189082249 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.189524783 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19026846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.18845674 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188793304 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.190179367 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.189305095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193427983 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.190462591 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.189955096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.191157403 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.19774088 seconds)
  done (took 702.519687029 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.187647991 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.187868584 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.1878877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.187472971 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.187841649 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.187959965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188005793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187880399 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.187769797 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.188287003 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.187363813 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18806208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.187241061 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.188833588 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188906605 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.1889296 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188795462 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.188457456 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.188839248 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188542146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.188101809 seconds)
  done (took 26.074406563 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.191455829 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.188840844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.188828976 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.191155115 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189178853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.191943623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.189228014 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191604658 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.192557012 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188551208 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.191863927 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192569646 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.189176041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.189293277 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18871803 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191537258 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.190658959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189828739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.191718274 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.188624959 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191181339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188673735 seconds)
  done (took 27.312102781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.191933001 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.192745441 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.191434421 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.190416877 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.192587857 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.190246667 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.19237354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.193315022 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.191883098 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.192362613 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.189783352 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.192350663 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.198457849 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.198031479 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.193869163 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.193238629 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.33617152 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.192811162 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.19269672 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.192895138 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.191415099 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.197850544 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.191014622 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.190336171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.191629314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.192891246 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.192994219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.194410588 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.192863744 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.193790143 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.19721505 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.19395726 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.192211623 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.193544986 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.192359475 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.193624525 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.197058264 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.194684714 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.191798399 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.193991783 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.20307934 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.214407621 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.194455169 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.19973515 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.194900296 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.196589038 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.196455388 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.202281953 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.192603321 seconds)
  done (took 59.790286689 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.195409774 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.195437487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.192831714 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194109012 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.195654858 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.195609039 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.194650919 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194618455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.193017032 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.192337046 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.194934188 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.192605208 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.192230503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.195785011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.195377408 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.19269561 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.19242923 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.192428914 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.192148907 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.193156907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.192465556 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.195733871 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.195767375 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.193635651 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.195041026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191761968 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.193271582 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.194878173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.193103911 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.193577832 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.196021425 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.196609801 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.1960697 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.194729467 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.193897117 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.195654172 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.196408046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.193617233 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.195755214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.193500124 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.196082213 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.195932628 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.196685274 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.196873866 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.193277951 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.194786569 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.194677229 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.194147905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.194272633 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.196722216 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.195605746 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.1949723 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.197148599 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.194309209 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.197256159 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.19719884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.194536659 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.194436148 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.19755656 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.194040122 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.195138386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.197613053 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.195076484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.197877336 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.197223731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.194199638 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.195120326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.197682096 seconds)
  done (took 82.380048468 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196108072 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.197659606 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198234285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197847448 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19732597 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.197224816 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196829153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.199032554 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.198375896 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.198487556 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197332904 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198120014 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.198390606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198347556 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198329623 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198236008 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.19823949 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199045758 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.199432553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198971988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.198351431 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.1985882 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197310927 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198199995 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.198417435 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.19773775 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.199215268 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.198366965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198956679 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198600584 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.19900329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.199248962 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.199093999 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.19993101 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.200059551 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.197960885 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.198417397 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198796805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.198447157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.199136832 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.199822828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199051777 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198405336 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.199497553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199954399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.199886248 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.199903905 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.199363978 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.200748847 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.199084615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.199769059 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200417725 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200256977 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200517187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.199819943 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.199932548 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199660441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200492784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199652406 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200047942 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200070773 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.20099481 seconds)
  done (took 75.465183645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200588919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20052513 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.197423099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.197369975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199659824 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198340688 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.200456695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.200438956 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200551557 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.200324639 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201344395 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197791597 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19928745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199892516 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197607698 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198965833 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198321797 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19745498 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201018545 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199368513 seconds)
  done (took 25.120435941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.19873635 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.201675224 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.199263521 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.199633257 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.202224902 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.198536973 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.20292378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20305022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199546347 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202008128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202549852 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202777775 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199630405 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200201907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202129452 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.20023974 seconds)
  done (took 20.350218439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.200185352 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.202140176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.202191151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.201732018 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.20135001 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.199750681 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.203283239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.200987006 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.200188662 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.203529828 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.203813798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.2027838 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.203336042 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.201626537 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.200573361 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.204597599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.200530106 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.20129919 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.202868201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.203213676 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.201612046 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.201325111 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.203655936 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.20317491 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.200077293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.200864272 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.20174424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.201526193 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.200689717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.203242994 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.201095688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.201185251 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.201591908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.201730111 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.203546755 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.202119357 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.20330324 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.2043003 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.203944889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.203951212 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.204102286 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.201541048 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.203576681 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.203822541 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.202040298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.20419248 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.202137902 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.202408592 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.201846477 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.20205331 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.205151687 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.204817129 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.205948659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.205170394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.205114901 seconds)
  done (took 67.276286105 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203856884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205415038 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202262926 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204396774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.204292047 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.203293339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.206457301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.202964411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203449782 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205032243 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204528933 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.205765941 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203901917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206005589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204119244 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206224996 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20382788 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.203535936 seconds)
  done (took 22.817106256 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203855787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205707817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.212403441 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210024655 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.202730766 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206267259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204617057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.205830756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205950477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.204376739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202422275 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.206133157 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205601786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.206363194 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204024811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203263173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.205462849 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205903724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.203810886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20398945 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207205371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207725208 seconds)
  done (took 27.662818644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.20481737 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.205287204 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.221456368 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.245326947 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.235167181 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.205319043 seconds)
  done (took 8.456565259 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205543193 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206869751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204803911 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207774973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207429488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204737113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205342983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20536978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206842633 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206111449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205179209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207596129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208174726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205528797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207591855 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208338159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205668256 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2058978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206200538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208113515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205980028 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208027081 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205907157 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205854507 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206077923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206292804 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20857843 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206313815 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205811934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208021322 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208467028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20581124 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208643601 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205975381 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210248265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210618347 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206375987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209227728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208799723 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206705915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.208782111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209079127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208827252 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207368499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210035045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206768848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206955642 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20747151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207311136 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210020861 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209924643 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206424013 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210648892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209712228 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209707702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210835772 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207978484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207381413 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209056296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208006682 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207715828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209980696 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206992129 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2089964 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209911379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208834459 seconds)
  done (took 80.84373223 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208437673 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208008803 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209382151 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209470194 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207840242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208611067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207212865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209174583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207968032 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208585428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211197144 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209643569 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209455855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208380071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208270288 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209526736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209703714 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209680068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208344052 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212087054 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208964481 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210785619 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209150422 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209846608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210366778 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211589415 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210042404 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209804417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209703013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209881658 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209635615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20974518 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20990604 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209796909 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20949276 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210020805 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209412946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209125226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210238291 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211717748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209368837 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212801146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20974545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210201939 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211523923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210087034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210886894 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211074915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210994437 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210668101 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211024628 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210940685 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211027395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210056974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211022961 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211742603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21032337 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211475576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21090722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214984995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210945114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211196088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214296696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212208447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211336085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21220729 seconds)
  done (took 81.018066197 seconds)
done (took 1638.291107461 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.222263588 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.245110612 seconds)
  done (took 13.612763902 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.373815683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.332968735 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.211398922 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.230495854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.209999109 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.235413268 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.20559152 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.211407781 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.210617789 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.211540487 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.212014516 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.40067298 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.214492164 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.211333735 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.210563564 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.303924504 seconds)
  done (took 41.138930189 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.23822489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.217150012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.323257479 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.233572606 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.237532946 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.391339694 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.267089366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.215044328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.383618187 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.256631848 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.815595835 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.239957496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.215358506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.347138975 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.234679374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.391242555 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.454811799 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.824078515 seconds)
  done (took 28.433977727 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655731415 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.224869145 seconds)
  done (took 9.026259201 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.212795357 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.243730283 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.244468333 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.231278771 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.236469413 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.221971763 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.287148755 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.279150644 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.235434491 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.218838401 seconds)
  done (took 63.564473626 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.233024715 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.216178913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.217527128 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.2140911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.206889111 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.224050781 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.214147055 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.206073554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.795014208 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.338510159 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.230893602 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.221952602 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.215102928 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.21594401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.214467586 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.249314356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.39169917 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213976725 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.212809287 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.221855259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.216177177 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.322229712 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.254260985 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.214782364 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.338177436 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.81172555 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.220028708 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.223786925 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.331762284 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.214589262 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.215614204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.215559977 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217548575 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.788364038 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.660380907 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.222444558 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.238778993 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225293853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.215416498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.356487986 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.216135624 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.223968195 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.208014199 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.629514308 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.371318451 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.32568398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445377652 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.219976053 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.219060039 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.275981215 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.21836261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.217823969 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.245163379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.975419543 seconds)
  done (took 104.698757698 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.261719889 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69912372 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.378656344 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233101231 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095471001 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.98250067 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.211902939 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.494597236 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.235242363 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21021226 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.491460805 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724001018 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212217463 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.266018536 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.789727695 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.246288688 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210549679 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.162430329 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21420831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.214197761 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639271252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227602787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.209719389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.259847365 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.249889033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678903263 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.696960788 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.722143868 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.216957332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.209770689 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.688486877 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.216299654 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.269394233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.214292683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.484901231 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573314712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548602937 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.21831155 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.235931489 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.213927887 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.234224728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.673861516 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.558705423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.214937829 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.213788085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681374222 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.21476768 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.213415252 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.219173463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418898552 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.961389815 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.212164136 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.705523661 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.215689657 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.49752981 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.260131044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.233986268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.697975984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21260544 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.367479584 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.247182694 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.214126378 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.216464583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.214630904 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.216957058 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.563095413 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.313095587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.219429361 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.566123752 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.683593017 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.214946282 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745677808 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.154612734 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.228629749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.258012418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213432253 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.985728281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707081666 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.231523571 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214181138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.550613652 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.218013863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.49532858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.229960692 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21762693 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651836974 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.237774888 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.253409448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.213446083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.214777733 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.043544332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.214955972 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.484059315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.229407503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214866472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.213427862 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.252985592 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.223481892 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.216631507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.215985283 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738679622 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.217578928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.349474022 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.235186611 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216406717 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.216338159 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.2174551 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.21441648 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.438796779 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.831820071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.220366987 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214489952 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.215114369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.225982643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.222746324 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.2164402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.526685697 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.218944627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215283656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.224285 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067953332 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.254853133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215084302 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.22160993 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048675785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.424941048 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.234385475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.230894849 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.216541216 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.216482855 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.571402165 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215008893 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.282974113 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.220946014 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925989002 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.257849563 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.225449045 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.648680679 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.222891774 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.204977268 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.237913983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215865966 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.525751129 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.4931906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.249592104 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.219573401 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.218655358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91264824 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.249908305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.349342528 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.234387962 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.254920342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.41498588 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.2333989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.217287055 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.765793181 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.219325803 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434380823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.217066387 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55164749 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.717185742 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.220759266 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.224205056 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939543535 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868634158 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.976809006 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.218896758 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.499202035 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.219981209 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.674085402 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.218534586 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217555914 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.845142639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.220559238 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.22425161 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.219022385 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.218869009 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.286238427 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.393452698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.511691397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.221521504 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.683818392 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278492371 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21835252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.225272182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.222705029 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.571637077 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.252452309 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.222012249 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.235572303 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.220341936 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.222207467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69334385 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.193016576 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.220978615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.372464857 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853515059 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.221555871 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.220598897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.013579267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.617876613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.777687437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.230120377 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.534538673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.226800086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.258987634 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.035913838 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266952662 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698860628 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2268318 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.222276332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831491311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.223050379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.273706562 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.219901448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.220539806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768031128 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.223440241 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.221860444 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.580845358 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232488735 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474613246 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.220809255 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.263458504 seconds)
  done (took 1085.704142059 seconds)
done (took 1347.325996343 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.220963844 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.220278449 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.208060561 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.22325874 seconds)
  done (took 26.033959577 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.232843886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.22731403 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.229909017 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.228074796 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.231040642 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.228007404 seconds)
  done (took 8.536237275 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.382125986 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.222638978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.223703135 seconds)
  done (took 18.989741435 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.443065701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.467456009 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.588092991 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.375531048 seconds)
  done (took 10.036917786 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.229535743 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.230349771 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.229451185 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.232699921 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.234434611 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.236415833 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.232726048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.233079876 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.234355693 seconds)
  done (took 12.253046708 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.171495568 seconds)
done (took 82.181146298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.249171741 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062249225 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.582564598 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.225738764 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.33427598 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.221976615 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.946070241 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.251279097 seconds)
    (9/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.763217049 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.210913456 seconds)
    (11/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.427737241 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.696512212 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.815927887 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48041729 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.876769713 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.716009998 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.56015232 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.151608433 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.28061795 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.251471292 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.32516787 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.884574581 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561876633 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.240284235 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.879541829 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.246386556 seconds)
    (27/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.519265581 seconds)
    (28/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.330168253 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.326030795 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305829667 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.495434561 seconds)
    (32/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.217017748 seconds)
    (33/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.253463744 seconds)
    (34/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.209887108 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.803332852 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.226510257 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.214754041 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.348710679 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.700097048 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.226129094 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.212982948 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.326879694 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.224080675 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.331456719 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.632154051 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.226128602 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.722173461 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.328414446 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713424901 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.301241469 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.25464775 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.21409012 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.252927435 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.881478085 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.339435388 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.487597905 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.655152796 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.247698113 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.224585881 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.234571852 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.304343138 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.293578 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.649906629 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.443172912 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.95269944 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243404503 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.295683968 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.283729074 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.354256832 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.226005461 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.732495523 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.246058667 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.402466946 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.251231332 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.227562186 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.25704593 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.251876368 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.210878277 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.320833691 seconds)
    (80/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.314396013 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.640045664 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.348522361 seconds)
    (83/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.243272991 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.744885816 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.228391302 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.238286983 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.247232152 seconds)
    (88/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.836717803 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.002115075 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.445486213 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.741498328 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.887601452 seconds)
    (93/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.549404725 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.337769824 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.080532887 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.761260721 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.461419162 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.757253181 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.830786544 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.609135224 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.128216552 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.376681771 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.872852136 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.25255672 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.213360864 seconds)
    (106/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.237769543 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.604627876 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.827199256 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.216196549 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.258899705 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.443415547 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.633450625 seconds)
    (113/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.5897426 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.26712732 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.232850807 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.112996116 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.236651277 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 4.249616233 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.398991856 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.101588694 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.314911025 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.293557277 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.24171776 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.743865725 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.256249427 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.531331907 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.492026676 seconds)
    (128/309) benchmarking ("sort", BigInt, false)...
    done (took 6.228906114 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011980475 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.507687416 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.49447185 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.047982373 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.696905935 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.460759306 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.188579108 seconds)
    (136/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.823767724 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.25345347 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.336141008 seconds)
    (139/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.256409039 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.227592287 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.258692072 seconds)
    (142/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.227850047 seconds)
    (143/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.418403853 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.922271625 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.996339811 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038281123 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.224258955 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.25976603 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.636810811 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.567047155 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.225547342 seconds)
    (152/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.232945591 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.762226016 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.23144491 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.832210199 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.256731937 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.638848292 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.870092348 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.643826853 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.556893909 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.378477701 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.334999172 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.043915897 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.281694034 seconds)
    (165/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.428994244 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.259968841 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 5.232582765 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.603095012 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.58508069 seconds)
    (170/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.865122954 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.2983999 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.681373322 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.279456298 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.468347946 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.234767114 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329576275 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.828196726 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.276643516 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.781509171 seconds)
    (180/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874775912 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.395699145 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.048904838 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.231497838 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195092907 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.260697559 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.660063219 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.870749558 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.134206185 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.219312586 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 5.554896441 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.276677363 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.664427436 seconds)
    (193/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.627780516 seconds)
    (194/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.108898568 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.70740627 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.096504438 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.243109375 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.359204467 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.40444251 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.260488282 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.322992815 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.261042542 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.290987432 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.58534176 seconds)
    (205/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332115979 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.253685899 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.247526277 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.234540062 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.009116396 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.355309059 seconds)
    (211/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.758831052 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.180523816 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.708519691 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.129718218 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.245229786 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.73000633 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.221046633 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.634224758 seconds)
    (219/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.838218671 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.323256398 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.441924266 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.869158237 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.641331329 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.359430367 seconds)
    (225/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.224792491 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.512773607 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.244127433 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.25658911 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259500566 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.190456494 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067423325 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.277102757 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.609151932 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.489617695 seconds)
    (235/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.881875102 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.824344999 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.235750122 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.234722194 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.257080661 seconds)
    (240/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.319045875 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.030150122 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.264192094 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132377739 seconds)
    (244/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.264239606 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.260862001 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.218442116 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.307106649 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.659806068 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.203301253 seconds)
    (250/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.857358752 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230113566 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324453018 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.200769999 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.597990878 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139429042 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.572060375 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.264000279 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.522183906 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.463857049 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.276357664 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.046150303 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.26481436 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.138870134 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.083854632 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.338188824 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.220772554 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.62259585 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.182575698 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.451767425 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.617834673 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.222925013 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.591486101 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.574204649 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.624412347 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.170557389 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.231673177 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.299487415 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.663595487 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.238666501 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.260466099 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.322827357 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.331040596 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.324128768 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.251173855 seconds)
    (285/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.267025854 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.32351379 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.344565214 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.615419342 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.29892809 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.323328837 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.335766526 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.355169652 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.073820856 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.068999452 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.651182726 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.95114205 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.674112787 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.382606865 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.909476307 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.282529584 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.424534195 seconds)
    (302/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.620178761 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.312413207 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.833193953 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.34496076 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.568944493 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.262165144 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.465034171 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.237947731 seconds)
  done (took 896.171506828 seconds)
done (took 897.333924712 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.270867425 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263731446 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.248824596 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.269316114 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.359053185 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.279983232 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.258832579 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.251253309 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.295655841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.298137974 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.246906971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.279218919 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.249139904 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.248685505 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.248704786 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26200035 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.288712233 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.249929034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.266847718 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.259800598 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.265676392 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.248581716 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.297046976 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.279620471 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.252641457 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.251374006 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.253634567 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.269046094 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.361235037 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.252084682 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.254252592 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.261752036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.288847335 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.248337617 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.24419695 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.270733799 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.260743716 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.25985242 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.253288229 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.282966369 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.734576241 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.252243205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.25226976 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.252026222 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.251041822 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.255406217 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.251978923 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.257048622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264358059 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264935245 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.683352176 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.267443767 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.253503152 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.251978999 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.262117085 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.25060928 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.255131694 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268229599 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.271838758 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267796255 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.280093694 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.257396146 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.254019707 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.268871118 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.260930059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.726034387 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.247252009 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.257217055 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.702685498 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.257846174 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.726343531 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.260865639 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.254179024 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.267195868 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.284762901 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.296417698 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.246777603 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.252315642 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.260484094 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.250912651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.263001727 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266728106 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.257942222 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.254886868 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267803641 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.28477204 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.263117606 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.254387139 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.263082979 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.272934452 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.260541334 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.264047048 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.257417411 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.250246443 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.263831722 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.257180051 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.257073805 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.256252102 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.259017688 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.265144255 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.705988641 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270457523 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.251917046 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.251136055 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.253684458 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.267775549 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.7079185 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.254821975 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.27557856 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.300988729 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.25599447 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285875935 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.257498236 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.269481149 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.263168943 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.261789162 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.251892267 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.289655637 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.698654689 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.269122551 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.257801343 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.252886371 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270096225 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.256847505 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.251952509 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.304194509 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.254761777 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267199067 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.375617066 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.266769915 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.287625762 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.252822154 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.258420981 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.283049307 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272025009 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.287774526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.258439924 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271650786 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.271697202 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.252760505 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.267806764 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.266059241 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.257797238 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.264064252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.250301173 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.287606418 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26876008 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268872688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.278431033 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.377104859 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.254616342 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.290890558 seconds)
done (took 213.287120258 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.31408454 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.249536746 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.33744448 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.253833793 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.352382001 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.351323929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.25060874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.252663121 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.251485586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.630323102 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.251798081 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.251622676 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.2499435 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.251198841 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.334599206 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.25510753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.252208496 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.595780788 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.253745792 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.325322614 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.249122132 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.252977205 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.253662728 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.658508063 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.245631188 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.249385408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.325468535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.254475422 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.603117222 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.246438668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.246846355 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.601801566 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.346670366 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.272498411 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.265438547 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262958184 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.354949087 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.272522432 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.33687177 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.336713449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.339645476 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.294078524 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.254586349 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.253592469 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.257271025 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.256620082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.253841975 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.283012649 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.249519321 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.253118731 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.597185499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.265827092 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.261974514 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.254303759 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.254037799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.275608443 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.254090843 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.255960826 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.346878357 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.256604408 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.316852118 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.660870113 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.633118453 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.257140294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.252849564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.253049543 seconds)
  done (took 143.179116175 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.323255773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.32908323 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.367820897 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.256494564 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.305311898 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.370236933 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.258042586 seconds)
  done (took 10.397477824 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.261236852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257809939 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.30632099 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318136255 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.256779529 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.403904615 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257318146 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.268060558 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.254763279 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.309070475 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.258906135 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259123977 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.264820463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.2482096 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305446677 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.268421291 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371525582 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.258134209 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.257464808 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.409357885 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256268477 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.26631056 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.308351419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.270543958 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.260049569 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.264020033 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894238286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.258187261 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256893706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.258184601 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.255845218 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.2972316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.258884339 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.257930083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256951183 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410748263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258823738 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257488004 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.258705782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.250733826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.259377879 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.259110243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.259982722 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.25629427 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.259093773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.281484187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.259670917 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.260499706 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.259723625 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.260641188 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.309095347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260021142 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.257862462 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.256623004 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.313790203 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.267741277 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.259578602 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.257818125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261318997 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.257304596 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.41034593 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307069965 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.260520654 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.307199925 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.260076733 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.259813131 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.260384822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.259976006 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324229409 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.260024027 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30713594 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.259341504 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.412885035 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.282216754 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.261982875 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263231781 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.263925376 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.260751244 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.252864793 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.267023233 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.258402522 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.261339258 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.267110719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.259204476 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.258936556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39124277 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387254759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.258745738 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.273061273 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.268348142 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.259953053 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.31309892 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.261490058 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.258700055 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313121797 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377220141 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.313268983 seconds)
  done (took 146.080092065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.265819343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.269615321 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.261724794 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.276861476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.262170906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.261530658 seconds)
  done (took 8.790506198 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.26262898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.263476822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.262925955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.262161187 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.261560385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.265097183 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.263209793 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.263579403 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.266633344 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.263421345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.264109164 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.265452034 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.264591846 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.263295671 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.262588462 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.264223652 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.263131735 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.261431687 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.263676351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263540264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.356911257 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.263470591 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.263889618 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.264136471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.268965011 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.264850801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27052539 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.264342631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264235059 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.27101075 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.266506362 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.265697399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265075473 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.268971904 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.268535214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.265381281 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269783999 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.267198063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.261863394 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.265682782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.267954886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264669781 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.265597707 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.267962539 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.266061321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.269585657 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.272512264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273780447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.266134746 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.268683122 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.268367879 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.264898126 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.266814033 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.267918153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.26488664 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269158655 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.272551252 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.265974607 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.265510658 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.266610129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.268366825 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.267718496 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267074218 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.270269149 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.273424213 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.268855466 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.267570371 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.268858204 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.26576875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.26603544 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.268901316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.264363843 seconds)
  done (took 93.456129553 seconds)
done (took 403.088021111 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.265964701 seconds)
  done (took 7.462603941 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.297457961 seconds)
  done (took 7.495357258 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.254879298 seconds)
  done (took 22.457776487 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.330744006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.379063763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.266164323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.263035144 seconds)
  done (took 26.438214401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.337296978 seconds)
  done (took 7.535799363 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.263068352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.259711981 seconds)
  done (took 13.723361531 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.770289908 seconds)
  done (took 7.969040649 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.874140922 seconds)
  done (took 8.078536733 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.284392997 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.287538719 seconds)
  done (took 14.022055895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.259700282 seconds)
  done (took 7.457746581 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.23826702 seconds)
  done (took 8.436857376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.261459928 seconds)
  done (took 7.4619328 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.330865596 seconds)
  done (took 7.530425386 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.412376225 seconds)
  done (took 9.612027378 seconds)
done (took 156.877494341 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.259342276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.264818947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.260902863 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.260759038 seconds)
  done (took 26.244864749 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.30187858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.303388572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.303986155 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.313803551 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.305569785 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.302517053 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.296041829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.296703486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.314639043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.306251422 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.305181381 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.305318368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.303256367 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.294787403 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.305793345 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.3054181 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.313858035 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.304754701 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.296830173 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.306449172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.270801735 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.315229986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.306898484 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.271471492 seconds)
  done (took 32.452021237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.467513357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.342315281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.422626965 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.321812494 seconds)
  done (took 6.755222858 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.322411917 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.324315813 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.3358946 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.374744443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.402650942 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.333075667 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.298280033 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.29229315 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.279060851 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.324892273 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.398540121 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.340898679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.407818299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.271309849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.457960239 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.272195793 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271088902 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.323570695 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.374528196 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393169083 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271827925 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.323569911 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.327190979 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340960486 seconds)
  done (took 33.26381222 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.270041809 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.279630459 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.277800357 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.270750816 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.27154133 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.270991192 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.27597792 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.272046278 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.292837561 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.272834812 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.270887834 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.271180185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.270692833 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.272183832 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.270204513 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.284433623 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.286879806 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.270907597 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.274849986 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.278349032 seconds)
  done (took 26.708081697 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.265496502 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.118014952 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.615473606 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.520588274 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.266544003 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.263724621 seconds)
  done (took 27.253281126 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.342283879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.480759275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.272436592 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.646235763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.727700913 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.275130968 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.271499361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.518020333 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.83999756 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833277775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.328928219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.337914292 seconds)
  done (took 19.078591376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.269545784 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.268049991 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.268458206 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.284345826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.328190579 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.277550017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.279651032 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.264435311 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.330988977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.333015082 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.277309077 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.329732413 seconds)
  done (took 36.716361742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353627223 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318791039 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.346716628 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137558686 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994579778 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480418633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.154807217 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695120865 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.27413833 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543481957 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280667996 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358704079 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526346625 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269558382 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271065512 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.252731462 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498474891 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787508946 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273038278 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.320406555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296088314 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28122748 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.494023644 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.298054751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481553559 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251860963 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.530843159 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046332014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562701597 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282912474 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280680919 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269317438 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543588205 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950194288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368748464 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280886824 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.121488008 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.822151976 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.254295716 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.396953844 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28022022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273534044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281640515 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270642747 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204561208 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285362643 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704434574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279137411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.982654459 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269857872 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281921006 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365790953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.274078444 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.843492679 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341584639 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27759138 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.269347974 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277585856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844632979 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322406909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278458475 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.2071069 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.737229848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.324058933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894519785 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.374538582 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.275791356 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275434213 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205361039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.407125698 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291326413 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409023693 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.296711927 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933557629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024140105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286351222 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205408263 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862489839 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291103978 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.208722549 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500994379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049672445 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21225067 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.223384179 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207613703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010396269 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284186456 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.72185284 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281865782 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.701601329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287869168 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290010163 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296221867 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.497408091 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.158921209 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271635352 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.27224611 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391962363 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294808529 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.702236799 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211246148 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.275785189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531676452 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.486095118 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278984248 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.264365645 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477635788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279474932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.290460631 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.278943561 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285919337 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.864890049 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.28898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886159683 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292294084 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05370675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055357229 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293932914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.376844921 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27691161 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529679086 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.076562132 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159897928 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341670251 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276395357 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274202905 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.411942207 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12757382 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.156260083 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.278121519 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27369012 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287514167 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.276865951 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233112848 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.273424551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277938174 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.058629446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49798755 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286231235 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55202182 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210002057 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413359772 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293629622 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.498936521 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.532618059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.276244262 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537390972 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279200862 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279660501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288641374 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294449139 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372916891 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296880321 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.278340728 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.534616257 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.280710168 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.279761031 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.434146154 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.056399072 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279002882 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.282721776 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.164171005 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875182635 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250202061 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284407556 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16983238 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.290942366 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345067961 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282608591 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287275444 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.153250792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22956469 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.284090687 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.289481477 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502650653 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288126916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.34199119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357317876 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.475371046 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8809069 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293548212 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.211635736 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.989010481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.96943393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27723391 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.474209815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27693742 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2864425 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289239263 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.92546636 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.875713956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283003535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.337922123 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.285633408 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289381434 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.28383293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277815673 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.14671183 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88604817 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282551272 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.30600557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422488092 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.293950553 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.213581778 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795011174 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283691617 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278589403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.057979113 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313098285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.370675067 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764630227 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541386885 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.096550459 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292658475 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.50916298 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.311767033 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.277678931 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292257924 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287890183 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.284464391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290180278 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.289962026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.410841006 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.729864799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907474572 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043950437 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824927538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224313737 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.287722348 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163445275 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.716661652 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217676108 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939285756 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476272608 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71991964 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239442695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480268228 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.550529167 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076361605 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291620213 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.509410353 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223494844 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.286779101 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294639407 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493270989 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315124743 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287822328 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210364379 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.564304271 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508590641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292776316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364208492 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714175918 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288239738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059712893 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.278495882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.706953174 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45983612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.832503692 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.677125559 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289865329 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29605364 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762874501 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.291112043 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.810875002 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932375668 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294497384 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.485507154 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225011399 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292575334 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.291958638 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.282118836 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.673626985 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.287107653 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.540255819 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293672063 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217388039 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282704842 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828189054 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.143693039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.289885579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281915116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066132687 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284718144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580651228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.29952086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.148800041 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289627109 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.217409642 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217212028 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.976240988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283795163 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254294227 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809395205 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.706422099 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.34165106 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316952457 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132740404 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539734451 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297828309 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887615685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513635948 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.210661597 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309283697 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386138197 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297124781 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.270927382 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166083769 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519938692 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166402183 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.508531459 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.366696757 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.199783618 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.283718207 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499198482 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166818275 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289885711 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544791292 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.998058073 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.306163109 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048709849 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313223283 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298372912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305110737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.750979543 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295542014 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356855745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296251284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.295880612 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.296444625 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460669813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292159819 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290065892 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.300422963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379991595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.952356592 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.158340473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.061450758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907840577 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071825226 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895970382 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300963465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285906206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29647482 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221215902 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435377663 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.817334188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560103171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406786898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.834148107 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312097257 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301516731 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293153174 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501752321 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561810828 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.162598233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295829261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.952498172 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.168919262 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298402015 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.498609997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820183472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888504974 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412224598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300435566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719084838 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564659745 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379018964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287018643 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88237562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.295715323 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.724647417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.296244319 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295675286 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436832821 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298674959 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980247088 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.301939164 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.444358516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.062955149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.388394153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.551055242 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831255731 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.30228213 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898509466 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023735672 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55531584 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358417788 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300635271 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.405799118 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433063324 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.287467101 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172707547 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288363892 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13949506 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.998801855 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298628546 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900954525 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555924253 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.285870854 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.290970816 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314895869 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.298700657 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514090931 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042929797 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518045636 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299686575 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291631846 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.862247635 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89732445 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304955702 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224836719 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.293832648 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54620392 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52947938 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31444352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.742888723 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.001336287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889566216 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.268156002 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311348238 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290063521 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040289768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899541578 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.168626534 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825654328 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954760315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30323732 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567211558 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.295592575 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290527774 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568446735 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.294213497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290852726 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30478874 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.899118872 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099343169 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.304898459 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.418104577 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.230808972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.520605744 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986712257 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230852907 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301059791 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.477759017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294972908 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412167465 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305336474 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.295016349 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304682129 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.049800169 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582975356 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.298616663 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.275292832 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.278671812 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297141894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298665297 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523439354 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298217284 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.963988238 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.642753417 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549966411 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.294080595 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.276697044 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29603525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293046158 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017633518 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269975724 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.932180384 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895518364 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.303894928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.305389829 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296485939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.510318103 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5052414 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302412354 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307463651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307486631 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310546018 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.197969842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065670013 seconds)
  done (took 1565.51786361 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.338902751 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.301964369 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.299364758 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.36000728 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.30918983 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.311261563 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.393924389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41272983 seconds)
  done (took 51.956276761 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.29288655 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.451648765 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.323108267 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.303374597 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.303371033 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.301609928 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.766310667 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.292876166 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.304560473 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.302655572 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.294952965 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.293974527 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.962690239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.301898903 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.299670785 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.281682717 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.303509385 seconds)
  done (took 64.615721844 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.298889108 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.456066964 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.314301721 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.297387421 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.602966685 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.306880598 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.52265072 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.323577686 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.311410053 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.34037174 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.969268668 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.295438275 seconds)
  done (took 79.27041473 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.302109439 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.303474269 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.303042227 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.303823614 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.303194428 seconds)
  done (took 7.746617679 seconds)
done (took 1978.779404642 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539321552 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005423075 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.965415161 seconds)
  done (took 5.200779863 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.44016809 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.489389484 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.649314133 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.636962035 seconds)
  done (took 7.445224561 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.574541544 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.666355957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.484430921 seconds)
  done (took 5.955131287 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.757932362 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.311989421 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.418284761 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.29290263 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.295390693 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.297249088 seconds)
  done (took 20.116868368 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.298304829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300945189 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.298399999 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.299939702 seconds)
  done (took 6.428442747 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.27804413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.995177615 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.279335097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.298504581 seconds)
  done (took 18.080092253 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.044231197 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.057901485 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.042263066 seconds)
  done (took 7.374917628 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.299217503 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.139582882 seconds)
  done (took 9.669541775 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.607308529 seconds)
  done (took 2.838118938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.430131876 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.628508864 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399480947 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.344519743 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.393958211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.361249055 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.04318679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.58764973 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342652198 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.611875004 seconds)
  done (took 28.374114304 seconds)
done (took 124.740559195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.229858359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.318376587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.499967632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.204244532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.52835897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.49961399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.590630826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.170214453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.898123301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.705756392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.208395213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.527653628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.54229909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317845305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.542249694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313340123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.527154941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.261728491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.892591398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.096277626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.590664251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.841532795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.033362473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.035234107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.530807866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449881539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.421327183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.314349151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.061473716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.612880327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45397824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.26363691 seconds)
  done (took 190.716075862 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.294425081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.294158289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.296585036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3079257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.311084071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298211184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.294571895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.295341037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.310757801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.299144841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.296059512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310837674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.298115565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.313397015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.296511242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.310230778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.311073503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300259352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29540969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.307941459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.29706045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.295378735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.295597937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.307329485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.301255313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.297918203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.296115607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.302671522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.296667631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.296522809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.317836092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.299462445 seconds)
  done (took 202.878768366 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.309501254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.300042706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.297350296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.296720971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.310061431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298612663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.298841174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.315377613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.312882835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.311895997 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.296424649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.297065041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.313873806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318782168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.298243677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.312416676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.296915114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.304826995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.300479307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.296959235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.300207239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.312939172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.297695029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.296977314 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.315326415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.298540163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.300681255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.304927452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.298847514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.302077922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.299263943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.311316752 seconds)
  done (took 202.960088021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.496848487 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.306602111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.308567174 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.24054955 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.307918791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.306819195 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.307179123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.504980656 seconds)
  done (took 14.015257467 seconds)
done (took 611.800770524 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.694862547 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.400130762 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.504728183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.331275674 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.15015635 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.330334536 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.328915807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.50083536 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.247425111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.503238106 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.611212392 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.327940768 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.757019356 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.328269658 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.579372385 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.425791892 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.229940089 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.353909111 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.653130134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.923945301 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.593166752 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.858654334 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.502895898 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.262630943 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.77098326 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.857399849 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.070764591 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.229526582 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.332073308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.656834901 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.078011062 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.32514692 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.38911806 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.370007212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.424266531 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.404802545 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.253976895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.366709999 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.508116213 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.596553653 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.86642967 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.052199864 seconds)
  done (took 91.189620284 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.294784646 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.296011797 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.295591773 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.296482977 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.298251724 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29762892 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.294715425 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.295927599 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.296184862 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.29498338 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.29618789 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.298669997 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.296711176 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.301746466 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.296239266 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.296538359 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.296619352 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.298854651 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.296476404 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.297062992 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.29679287 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.298024412 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.297430185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.296512846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.297881576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.296340256 seconds)
  done (took 34.959390428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.311483334 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.565482245 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.732609823 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.318452774 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.310846426 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.314829255 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.391200917 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.313791845 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.314295212 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.313504171 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.465957614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313687921 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.348343046 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.762167997 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.316348428 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.31215434 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.313002648 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.311670896 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.572118793 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.321539993 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.411192973 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.31289419 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.391090607 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.321627246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.334067118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.31161159 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.316154612 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.834496749 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.314240028 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.465749846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.116809632 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.391864881 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.784714585 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.744727908 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.132878566 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.317276737 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.314129609 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.474154481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.315706833 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.313051034 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.39227728 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.313433314 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.746290753 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.940238122 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3291696 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.314301454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.856493128 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.474311484 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.572766112 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.323722881 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.770666957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.317086866 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316112961 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.313830508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.573372355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.322648351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.313239216 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.850591934 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.333776204 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.393029997 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.315739991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.31385223 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.578964508 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.314212057 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.5774543 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.313695565 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.323005589 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.315566371 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.743226797 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.317487226 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.960943353 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.330229206 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.316460107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.467006246 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.5772182 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.887734668 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.317831578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.58493282 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.798453616 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.39124819 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.318289979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.826244714 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.39538751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.319693456 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.318580784 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.31966961 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.317321784 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.367567262 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.391701038 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.888822655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949767625 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.86524511 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.409918714 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.327487815 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.314943642 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.851739855 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.334292076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.315526947 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.73426149 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963958621 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.331940678 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.323817489 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.947044808 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.33334743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.394334626 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.320508938 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.757426506 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.317920767 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.367487517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.317915378 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.323306725 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.320898099 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.39542614 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.320051525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.317740502 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.937502025 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.491300984 seconds)
  done (took 173.648413323 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.325145761 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.30821716 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.326701181 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.308005695 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.309579501 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.316855809 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.30976052 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.309666054 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.315381814 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.309795641 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.310242346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.310726047 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.31199766 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.329464019 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.320738408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.317946364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.923030401 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.309516142 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.309758144 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.324686484 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.110485022 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.31453081 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.310366435 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.325974675 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.312063254 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.309972265 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.319489048 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.33436123 seconds)
  done (took 151.491932692 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.318224865 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927181534 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.32258715 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.454655811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.343122598 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.317945321 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.454359544 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.379557423 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.319703245 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.318590085 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.317405092 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.643753159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.323049962 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.872950687 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.518510106 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.457576928 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.874578501 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.323972759 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.317482595 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.317736954 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.45480913 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.326825688 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.63141227 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914329784 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.323044667 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925391963 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310348668 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.320963645 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.318777076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918127442 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.321378417 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.631678822 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.397549652 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.380181369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.905746351 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.874411624 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.875639073 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.473849324 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.320459517 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.320076044 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.318574752 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.309531178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.935420258 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.324195116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.320325999 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927284258 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.340386768 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.321844987 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328906793 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.319177205 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.381199841 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.382153835 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.651241117 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.940310285 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.399334677 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.342099779 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.456778059 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.707132397 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.323484172 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.875357108 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.311521125 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.93218879 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327638145 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.309295869 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.32270204 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.327028808 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.474313721 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.455720336 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.872767361 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.324806757 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872589109 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.478442934 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.320659447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.321258133 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.323790164 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.935936958 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.876980493 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.478151448 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.458528629 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.521619771 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.310394345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.320783199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.311750213 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.399461569 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.323623983 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937924224 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.85724596 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.32431958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.322577171 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.324435664 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.324999154 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.505127247 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940729334 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.401001453 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.852036693 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.663477946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65058599 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.324192217 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.383721328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.325349939 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.648977943 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.324944693 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.381450637 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.770700245 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.639251141 seconds)
  done (took 159.040468774 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.580400607 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.552945782 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.418228528 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.439102404 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.925201085 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.888744766 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.641942829 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.454382494 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.433875882 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.572492443 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.507573507 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.415298717 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.494293083 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.406468395 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.075963694 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.39287241 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.420271951 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.450929951 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.418903071 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.35152066 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.978406517 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.627969577 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.500421877 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.298873018 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.417424926 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.111087622 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.890053181 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.855798822 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.497619773 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.637110348 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.874880826 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.464147711 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.289861452 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.99153091 seconds)
  done (took 64.53163362 seconds)
done (took 676.096855583 seconds)
SAVING RESULT...
DONE!
