cset: moving following pidspec: 6882
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353902038 seconds)
loading group "string"... done (took 0.660279159 seconds)
loading group "linalg"... done (took 7.883255968 seconds)
loading group "parallel"... done (took 0.167716795 seconds)
loading group "find"... done (took 1.172838424 seconds)
loading group "tuple"... done (took 1.828442677 seconds)
loading group "dates"... done (took 1.304360056 seconds)
loading group "micro"... done (took 0.229132539 seconds)
loading group "io"... done (took 1.045688472 seconds)
loading group "scalar"... done (took 39.098031976 seconds)
loading group "sparse"... done (took 12.314384392 seconds)
loading group "broadcast"... done (took 0.992272264 seconds)
loading group "union"... done (took 12.784785577 seconds)
loading group "simd"... done (took 4.672771404 seconds)
loading group "random"... done (took 9.057836315 seconds)
loading group "problem"... done (took 1.980468363 seconds)
loading group "array"... done (took 22.133700024 seconds)
loading group "misc"... done (took 1.793234796 seconds)
loading group "sort"... done (took 3.595465025 seconds)
loading group "collection"... done (took 18.12242103 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566635138 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134763549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13668373 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128655071 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155234532 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123931329 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135911585 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095541152 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915180448 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160207979 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125876191 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433614584 seconds)
done (took 5.68146352 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181407045 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090876396 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091148572 seconds)
  done (took 1.392031696 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073634366 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135411372 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.076142735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075205447 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075250175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075457192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074871668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074057743 seconds)
  done (took 1.796261612 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080333741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077345121 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074051946 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075568435 seconds)
  done (took 1.519939111 seconds)
done (took 6.186949133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.813715122 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.221419372 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197243899 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420532435 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137956545 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182465122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656757318 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313227268 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197493188 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084618056 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117434653 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353902138 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131448287 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649845534 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082302687 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098716834 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14335394 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428902642 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074776042 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090659613 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096571995 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.137492017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092759855 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081465271 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153815245 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075494713 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144317602 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088652025 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074167498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226739492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180390631 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664420412 seconds)
  done (took 10.663573286 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107381265 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108695954 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076944512 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133077555 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107425672 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077828543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083608952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075141296 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.099278271 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141675887 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100970365 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111228079 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0735796 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077038637 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093813602 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213199244 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088260947 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089551844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078702072 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086343974 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116123769 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085696238 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088365875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087939971 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13687071 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187010332 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104415027 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104840613 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074603268 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090920307 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122062876 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135647793 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07367113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073759049 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.135740696 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102360823 seconds)
  done (took 4.991017536 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.027569196 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152561209 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098296451 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141437088 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.073216718 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116120057 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073279487 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092052628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219884435 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.442933791 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635986971 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118759841 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113299712 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075454027 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094421075 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075377363 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075046811 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.547421808 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104854869 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114301814 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089024469 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078063274 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076748151 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363886656 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074997464 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073008451 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076033815 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064706998 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130824139 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076658804 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.993979201 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100274851 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170821787 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07454227 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108194871 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.308820437 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097908983 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150050293 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07703837 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073135831 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163548503 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078543257 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073850896 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091761374 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111169538 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125404531 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07315483 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074115061 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173216618 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.074234774 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088593233 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.129759424 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165545822 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085905142 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072863485 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286067092 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098028088 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07843087 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072973422 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189866241 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135732161 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072378598 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075443121 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074158631 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07643365 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07653894 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36880325 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073919689 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.99628548 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077930867 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085429011 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077131053 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07685567 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080294519 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080484509 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095998681 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073760721 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071863496 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082408883 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07382033 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073783465 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076661533 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089894324 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405310699 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074676833 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0752169 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.177160565 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098120297 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10371707 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075893833 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073720387 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107700518 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075731958 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074788511 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120466345 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074946579 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089828418 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076894947 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12093475 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07378259 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11608588 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074134185 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103058037 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077321871 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11056555 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087428726 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076799626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.45111979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073626581 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076280538 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076079379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073781453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074996139 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073596742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087567663 seconds)
  done (took 22.914307681 seconds)
done (took 40.809171253 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261359965 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083410354 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080751761 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080886247 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080713175 seconds)
  done (took 1.889995599 seconds)
done (took 3.175217267 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131462141 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108009901 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072837666 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106003423 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072847284 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110256336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109848963 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085024805 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108570755 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072437752 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106722263 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072334227 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072400101 seconds)
  done (took 2.533635423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0926719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093266756 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078854736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092869942 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071913189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092480463 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090779769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09725767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090854528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08098845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071715081 seconds)
  done (took 2.232512381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091091132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093054074 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077908062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091333381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071952998 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090490232 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093072113 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094598707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090762778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082608725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071426848 seconds)
  done (took 2.223171249 seconds)
done (took 8.262569972 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.085812849 seconds)
  done (took 1.352860579 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.580867369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.004877361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090011083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117640837 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202155676 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123687249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26902544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094951564 seconds)
  done (took 8.93232791 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112968422 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075667014 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077729083 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078303319 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079872303 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079284799 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076299513 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078134115 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077232173 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079574495 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07987707 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077753824 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079892328 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080104903 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076115484 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076184367 seconds)
  done (took 2.622403316 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100611315 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10023232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081453047 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08249047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080517694 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079432537 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081460083 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081396591 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078577738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080382529 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081947632 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081183114 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079391444 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.072020023 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081432027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082446841 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078576859 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082194414 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082777011 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082771917 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082784514 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071784345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07911927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081487212 seconds)
  done (took 3.340509739 seconds)
done (took 17.524114585 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113384609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075119818 seconds)
  done (took 1.463313901 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088790164 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090394646 seconds)
  done (took 1.462497363 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090157413 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073813613 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097604941 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085478922 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07344903 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073443224 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09344466 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074013539 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07359415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073958937 seconds)
  done (took 2.093492474 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075123758 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084117218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076998395 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08870529 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080354606 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071205137 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079618731 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075324046 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084646327 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070665073 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.079123072 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089997731 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078283915 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092395239 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079674697 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075464234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077899488 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074776586 seconds)
  done (took 2.720351204 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073180362 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07470879 seconds)
  done (took 1.436265977 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074327581 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0709013 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073877871 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073853093 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070750647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070490419 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071266971 seconds)
  done (took 1.79063153 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396567374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127354416 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330327807 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079829674 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089441102 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273610598 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073946636 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0783873 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078986325 seconds)
  done (took 2.857114906 seconds)
done (took 15.114249982 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089923663 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095550852 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10522322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389517744 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098912325 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074560689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121500467 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194737779 seconds)
done (took 2.469978404 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221849109 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.705943107 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.450770198 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221739303 seconds)
  done (took 2.671483167 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361464499 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097365237 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067369968 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07551375 seconds)
  done (took 1.905029505 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074251075 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078291965 seconds)
  done (took 1.451452232 seconds)
done (took 7.549342771 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075218857 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093283313 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073401412 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072207542 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073935196 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071570696 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.072272107 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071586013 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074466017 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07355061 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074405979 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.074028945 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073881693 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071220622 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071252806 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073681404 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073614461 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071964813 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071637202 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185234499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074330824 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071843418 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07161272 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.075048354 seconds)
  done (took 3.218274357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092209016 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074333576 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079310621 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078883795 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077953045 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.079067728 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079420265 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.074075084 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079162333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076330795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077201939 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077469281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07597271 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077488389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076075139 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078174569 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079700733 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07321059 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075868735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07710675 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079055268 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073525342 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077152901 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078674129 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077026033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077533977 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076435536 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073672618 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07847539 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076999843 seconds)
  done (took 3.634378501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076997645 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071920017 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.072008679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078514957 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071585033 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071430434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070702691 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071493664 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072341834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071180947 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072454154 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071643524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071607867 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072555494 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071413389 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075195645 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087005575 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071457824 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071717958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.072086625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075133193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074244558 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071379739 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071361551 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070536476 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071553365 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072207225 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071710822 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072440561 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071024573 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074271254 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075119359 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071096421 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079213398 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074908737 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071007706 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075749378 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071209494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072285511 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071153997 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071028368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071206323 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070972132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07899086 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071029871 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072355003 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071604529 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072488251 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072366736 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073591502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070706666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071223802 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073721402 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.073224428 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075287155 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071362473 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07188183 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071069436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072286492 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071723301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071064075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07133959 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074174719 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071921472 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087395555 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078609818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071357286 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073198536 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072087641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074070724 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073186078 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086562134 seconds)
  done (took 6.585355697 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095588803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095835661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073690655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072840427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070051479 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071706708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077719738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072324647 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07374343 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090099917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071863295 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07288818 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07265048 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075875396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071886622 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073939522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079996863 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069265223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072217928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074852538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072474656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077055508 seconds)
  done (took 2.998326806 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161792596 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078198604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113790941 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083082371 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077223174 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082500056 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077387558 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07740544 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078017201 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07511173 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075995306 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077565161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077424431 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07515084 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074974085 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075182704 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077841628 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074963559 seconds)
  done (took 2.828561585 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083191472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074073251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09546699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074120425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073774957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07695613 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077610478 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08168288 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07686417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07382382 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080900271 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075500888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075971265 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073912504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075887395 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07326391 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076004318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07391195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081146822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077166346 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077385001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080792219 seconds)
  done (took 3.026240445 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087777528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075649334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089033352 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076212984 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069322357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071829791 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077142061 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073388898 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077053142 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075090795 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073279686 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07221869 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076007473 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073780091 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076372207 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07339746 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075953885 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073882661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075638252 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069605506 seconds)
  done (took 2.829859094 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093353631 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076897203 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076427303 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082504533 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075164322 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075221327 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081934923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075392358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075266267 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096568252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075231674 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075743245 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08249054 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07930527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077910887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081908526 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082136209 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082078401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075193847 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075603073 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096664723 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075385603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082191969 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075512751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075240223 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075328488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07532221 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079837483 seconds)
  done (took 3.550917384 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075214669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074435651 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071011265 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071357691 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071416603 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071256929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071223764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071180203 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074042548 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071942381 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07329079 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073479294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074113079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074109268 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073563093 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073223074 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07443459 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07137233 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071660766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071669203 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074100473 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074059418 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073759987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071380709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071529835 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073360113 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070971676 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07167954 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073802749 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071207014 seconds)
  done (took 3.502667741 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082653396 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080315744 seconds)
  done (took 1.48630676 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.071247978 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087779395 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071966909 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079291531 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076921751 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074439211 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081009307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076937515 seconds)
  done (took 1.939124313 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090013416 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.086384913 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.075036061 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086234874 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084692129 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091586748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143605424 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07439651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080361715 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071996134 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087878827 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.074307529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080363093 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074105607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079910246 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080413691 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071772152 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079386124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075618232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072294715 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074627594 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082460796 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076879342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069043006 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075471802 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096652111 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084725571 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073148964 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07707143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081311598 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080346579 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067723197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074248978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074399358 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071627163 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084181374 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089152933 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076912085 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082640702 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07464938 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083438835 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068662552 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078690877 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081109034 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084742606 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07466673 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074091964 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069108688 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071909095 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079042541 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06894593 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074495306 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06934147 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08192717 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077918 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084982522 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073005728 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076834705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077279435 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077472159 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080785882 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076767594 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077324825 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074302394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084447913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079197574 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082693178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068853069 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06802441 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072288728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08392225 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098445793 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.081236996 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.075030563 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074313838 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.072235822 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077688318 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074199447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079568886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080498088 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073856576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079084431 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080967618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074749569 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.077306981 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08146751 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07331024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076668175 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072633277 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090488031 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073442009 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071929804 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072380221 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087146238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.078325055 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073775061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072376133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082319864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.068310876 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.074111364 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074430951 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075534671 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.084161409 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079409713 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079015821 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082654256 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081141929 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07380696 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075601338 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069809157 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201742175 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07431556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081202353 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069624409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077593584 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075313074 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074993699 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083283424 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073071221 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074476404 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081702332 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079212765 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07259677 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070908449 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077217249 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074404326 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07785166 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083256636 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072906669 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06859712 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069375807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078231273 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074339475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078166116 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078923351 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077632327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068844389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072851644 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078815739 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083578315 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075549684 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07581354 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080293688 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075580431 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072905402 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081938115 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076832535 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073565708 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080452564 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075610534 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068776612 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076073362 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076768283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073474227 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078575305 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077304363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076731596 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074174906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07275211 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079981492 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075071698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073379323 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074833021 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072949147 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084535294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076387281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069918806 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071498863 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082281076 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072045742 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07311637 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073341831 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076885205 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074845457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072734963 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07466532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076641016 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083335438 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077235743 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074555598 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079149852 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086052009 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073875904 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076319918 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073291171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075068466 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07434296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083849895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080714093 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078473448 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07680668 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070702313 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079472268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081658741 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073595799 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.07175504 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073541915 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07812208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079807013 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077912561 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074688404 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072898448 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074801164 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076504658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076328872 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.07455417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073452374 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079696446 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.072354959 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.080582664 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074286417 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085236572 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077621526 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06906996 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077003935 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072053428 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0805653 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068768448 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.072724646 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.073554953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073682361 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072219689 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075090406 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067361374 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20983199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083107729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075701964 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073559776 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07361951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08177582 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076633999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078323264 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078283953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081390512 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084602377 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073850259 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078375005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085052512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074681026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068666876 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082974433 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072899846 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.073218967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073760509 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073376927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078195625 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082195575 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081859569 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068079053 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07706632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072377943 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07472214 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070272001 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07917235 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077969291 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075294795 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080973609 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075358606 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074834742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078321312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073886094 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07484901 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074650584 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077713283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.075157865 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076140724 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073608776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078193097 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073511727 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.073087472 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07688876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.075246706 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076022363 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079510041 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074335361 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074330521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076635209 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07415184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074737924 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074960477 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073765223 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077244278 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074871371 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073903358 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076434227 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069905546 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081579844 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.074227102 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081456229 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075228164 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.072067199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080419651 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076835165 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078810299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07553737 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074551469 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07563196 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073327411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076940467 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081832284 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072479765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084914351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081897528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075153205 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077155576 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074461413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076112122 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073527102 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075897717 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074987275 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074718057 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073911982 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079263408 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07784692 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074440345 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076337192 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074839612 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0752882 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.075679715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068580942 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074205576 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073844356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074685934 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084451167 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074957475 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074967619 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.074724244 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075231099 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073753121 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070861681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.081423295 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081495765 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.074432595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080957188 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073550806 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.076570206 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083975061 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067755702 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07262875 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070888113 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.205442371 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082969395 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075500967 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084296009 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075927421 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074113396 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071676397 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075539825 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073941366 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069790624 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072770149 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079357877 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074079986 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075396948 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074811798 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077314281 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075095379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084141192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074628679 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076216047 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074687371 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071815784 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073296869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073880002 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.078329292 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.076321644 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072501082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072520178 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073903521 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.076116932 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075780727 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074363043 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075924349 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08142918 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074544231 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077743824 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076418037 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.069086431 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077464962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074867794 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073914737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074058863 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078177295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07739179 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076032345 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084228317 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074578021 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077862289 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074508076 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.072015696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07421757 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073966367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074239247 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073476413 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075236501 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082081311 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072028515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078610406 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074601294 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075427331 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080391079 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075035168 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077878281 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080000341 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074247841 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075962443 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082924795 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077852528 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077395312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075815038 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07629746 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079705093 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073360954 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080046286 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07476445 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074528126 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076466314 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071892545 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073494332 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073590123 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072998684 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080004213 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074818845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073098408 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073406431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072360504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07522201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076444607 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082053387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077012153 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077198557 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068915236 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071794382 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075068564 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072245643 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076594692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077366157 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079985333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076869296 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074729927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072929633 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083718582 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080646833 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07859175 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072992521 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.078229637 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.075145557 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076302357 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074889899 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074214892 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075212114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077722652 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075729515 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073614151 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080126953 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076501745 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074348613 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.207247124 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076503086 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075592768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070562747 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074426809 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076875665 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079388286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076966571 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075908253 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085523641 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072772885 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074957156 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077667232 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073522785 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079670079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069114858 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.077286535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075110025 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075954264 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069334296 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073949534 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.074337769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077077065 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074355814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069761637 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085699303 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083040955 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077961685 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074355204 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073022543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06931642 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069985281 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073930654 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076327113 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076338474 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08575072 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073698888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074482945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069557336 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074501099 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077678362 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.078306734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071465588 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069647395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073963715 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077681105 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079881957 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072917683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073779286 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07766336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076910052 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071844295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077178156 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070601801 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078785639 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087359215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074880983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075903684 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08114787 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08146692 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.075422992 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06937641 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074549291 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077371863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074689682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.075392481 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.075142463 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089300567 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077719364 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073082389 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072606498 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076959361 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073637953 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082066775 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07533282 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074612507 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07963966 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079213308 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082340052 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077379129 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082095078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.078326569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.078120845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.073353751 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075277813 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072949096 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07343667 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075475543 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07473519 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078647131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081176141 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.074633852 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084992457 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.084003143 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076160435 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070867524 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.074408442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.074266345 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069360879 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07490757 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072580797 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072572777 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.07256716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.073890276 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075449224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07920076 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074922317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074355014 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073990787 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068562575 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076428397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.077057887 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07513509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070983421 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073992713 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07435867 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077545441 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.210224691 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072973726 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077439766 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076891171 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076182714 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069592436 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081802785 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074729845 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075871727 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073871902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074641251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07476304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076990243 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079413106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076441547 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077654463 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077955472 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075729549 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072033652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071047032 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080862531 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072183249 seconds)
  done (took 47.535971894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108368681 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071104473 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06983458 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069721005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07945114 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070565067 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070061765 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07056081 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070732002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073173988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06898226 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068795525 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077644724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084453787 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080116689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073548559 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069570968 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070309391 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069097435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070218011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076891518 seconds)
  done (took 2.960000275 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.081186779 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084616547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082990114 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089064632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077957777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077493774 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082362701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077063732 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085098833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080481659 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084719549 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077899556 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07939125 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08003585 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079967493 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077828446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08525977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077778159 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077587255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082534214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077426718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082301933 seconds)
  done (took 3.169417245 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074438073 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07472536 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07507709 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.069349058 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072833078 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069030859 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076270969 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071367041 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076554226 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072470868 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072330194 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072199786 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07584058 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06886266 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.0739896 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071500292 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115706118 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07636591 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073101768 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07435281 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068796519 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075054806 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068921044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069885053 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073205695 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076310556 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073841645 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.072016768 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07351895 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072641362 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073130326 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071884598 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075827803 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073552924 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072246084 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072921649 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072847195 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073558254 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069245711 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.072158196 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074041687 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071556974 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073802122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07446813 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07233727 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071359482 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075008967 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.07339676 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.069179689 seconds)
  done (took 5.004612331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085540218 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11845181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075488683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097018021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087211871 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078950399 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.078316064 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09722337 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070211141 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071038802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087809288 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086054016 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073105731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076766631 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079936404 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073004899 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074399883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071937457 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076334269 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072093418 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076163367 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079694136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086394071 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085455985 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077197762 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071300342 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072293558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076626803 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08512095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076903924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077135588 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078004463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08759135 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.079086952 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07180349 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.075077546 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088060012 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073277023 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075132236 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070623833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074814222 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076826507 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079989854 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088803604 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07318971 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078422336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072880611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069836142 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085089394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075346979 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080267724 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086586873 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07633597 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073255611 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076656021 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087457128 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072915418 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071043972 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075896628 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.085069683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070433565 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076819749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085878656 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074271092 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079898646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08605117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078833614 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076338623 seconds)
  done (took 6.911708029 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083833675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103588057 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089880296 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090242552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08302904 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083317541 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082729891 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083307637 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09082286 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086784078 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082941668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123105948 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078522007 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084228291 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083697101 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083346285 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083352138 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083202171 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082871919 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082425298 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0830555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089148072 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083324375 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089551996 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087097775 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078867431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082199759 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082471895 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089554546 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082828245 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086386004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082583064 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082955805 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089459163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086226031 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083291491 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072978871 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082489381 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083234155 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083028844 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078287806 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089172136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082531288 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078872235 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083376946 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082505675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089273429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085943312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084584668 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087034208 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082552585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089662235 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08396329 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083037163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089727248 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091981578 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089475366 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089400196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083112813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089201909 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089407852 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091520216 seconds)
  done (took 6.734373767 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088238351 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08111632 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089270303 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069281858 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072618083 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079330086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071821919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071716309 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081008871 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082783872 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082518952 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079004202 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081315981 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08251107 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078651418 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081973783 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079031686 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078849109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080388488 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079284083 seconds)
  done (took 3.004726271 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08310951 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090892751 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074387626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078140263 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076419722 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079351918 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075886757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076587881 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074346511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077458792 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083046004 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082955047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074247365 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078530736 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082952298 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078400331 seconds)
  done (took 2.674469047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092941019 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080530821 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088109952 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074279005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07487081 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070042578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072862458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069427278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069467819 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085188716 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073350404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083324789 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072949272 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.07261538 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07032818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078498128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.070012689 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070371423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072554245 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085507367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076901884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071924848 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07628892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073074415 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075833496 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078247223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071932494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073342913 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070851535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073136151 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076282681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076871566 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070229014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.07097205 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072608512 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07045159 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073070572 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07399766 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078953238 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073249683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.072477237 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075537285 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073697646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.075034257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069721351 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073531167 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069803005 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075267178 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070952541 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075988539 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07304216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.076032553 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073412891 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080366546 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075923309 seconds)
  done (took 5.525207633 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087284428 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077568255 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0698092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071553648 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077286059 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074898671 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076832601 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074717384 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074485957 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071660216 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075087706 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076195466 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07520141 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077314202 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074792664 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077028466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069447405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074764844 seconds)
  done (took 2.77592276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078893139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073202083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081468771 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074388808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07323103 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076185115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069328722 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071983779 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071993895 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073570896 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073289164 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075936103 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071958136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075632681 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072979451 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073387342 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075669531 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07254827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074133959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070017608 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076008011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072824694 seconds)
  done (took 3.041979545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.102088427 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090878821 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149325837 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086874203 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09325929 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079513772 seconds)
  done (took 2.017151867 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099220606 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107951351 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074509631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077384353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0829954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077289345 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076955539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077720847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084912758 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082137944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077080751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085262833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084539096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08384718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082361933 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082364931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07699353 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079764374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073665642 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089584303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076978151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085010912 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077621629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077342494 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077637438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083924533 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085626394 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082591531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077386467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085821535 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08271037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077448278 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085231893 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082252059 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077127809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084501877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077672107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089733127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083061263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084570491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076673939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083167945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084732006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081979966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08540895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077999012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08129812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077370501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077314739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091588162 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082856898 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08408723 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082609683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085680465 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085389842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091628652 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082462263 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084223471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082995258 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082562496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084413422 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082892901 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083923925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082534231 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082906839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084287809 seconds)
  done (took 6.873619395 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110919365 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075012086 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077247089 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083230374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084118167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077537882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077381714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077047893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077449748 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07453482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115685803 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078042737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084025942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084561144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077390284 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076874147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077045857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084000404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074699893 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091314977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077599909 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084415383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084059495 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084136128 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082467643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0830347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077361938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077925445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077812746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077405042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082266987 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077659269 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084446682 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074373051 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084327568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077736451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07706882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081898163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077404794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082628533 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084261998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090047949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077794008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07742785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083361165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078234974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077777431 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074174181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077475017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07519008 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082750461 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082816932 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082436281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083977837 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077714449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077140031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077727888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077567029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077273098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082495835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084477841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07756165 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091663092 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077535683 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078000646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084475319 seconds)
  done (took 6.790050079 seconds)
done (took 141.92124883 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201515744 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177190784 seconds)
  done (took 1.7921151 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075157302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106449308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084613415 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136335868 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.075279902 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107884846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106582598 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08618591 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073693027 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074335256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07372653 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07587111 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139274899 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073602395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074071937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075917312 seconds)
  done (took 2.865836861 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10775043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170989292 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110647407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073369623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106831353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079876635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072803453 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082490842 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077947171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073367394 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080321396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077968659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072563851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077509284 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081100344 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079707074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072883902 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080206749 seconds)
  done (took 3.007524402 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106057791 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097914653 seconds)
  done (took 1.634142902 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161725688 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140570411 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209166479 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354919723 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164650416 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154982842 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150014805 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148862647 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122657742 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143855395 seconds)
  done (took 3.177458915 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107151611 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162428629 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278931079 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12581935 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080550973 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101237441 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127406621 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086192782 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.088324567 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087611024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087537972 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084111917 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108304632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080703011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082768123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084238782 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11187455 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081192671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082987103 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083159734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109431987 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073763022 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.081274952 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08126151 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08454939 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084562137 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073881993 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073364869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083264052 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082519132 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083819382 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099667991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084236632 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112249051 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078921589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11276945 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084401922 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080962775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082868488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080778251 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085000373 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085660076 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080608107 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083785216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073329705 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08428175 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073372504 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073421939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085316871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074522655 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084730707 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083641603 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.112582613 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075009485 seconds)
  done (took 6.468144618 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112963305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115086402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078753894 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119963828 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110938276 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077686559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111434692 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104182551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11234533 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0779178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075674671 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077636281 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087125213 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087976625 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.123032371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114331111 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079797019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076624967 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114672103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113616179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076394547 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107274064 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100306714 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111836026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074695357 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.078423787 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075619067 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077174662 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084127591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0856219 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076147362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08639809 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091244919 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085764213 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074406781 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075133609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075561006 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086706075 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085848516 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086360059 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084098357 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074546899 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07555968 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076989883 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076188776 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074809296 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084340935 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086938009 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085263425 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075586958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077489365 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076750981 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077241198 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086419412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083695348 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086446915 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085761892 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075790912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07527612 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078747706 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087069817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085247951 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085218997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076498313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086572079 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075862393 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086980588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089887129 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076160371 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077124003 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076427065 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076342337 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079093196 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08384955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084084626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078110573 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076042741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076265883 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085743655 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084477845 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076002322 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083681861 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075233744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076164227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077254525 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077198518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084477396 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.086393998 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.078189921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075898491 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075649924 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075416105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074419982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083350528 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086547117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084546811 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08381197 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075501521 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08378153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.214621987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077989625 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087121714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076428944 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07800827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077540057 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085288022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085514503 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08576593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07754376 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07689936 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085328314 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088683449 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076210651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085119776 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087331056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085419357 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074538922 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087855418 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077211624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086894448 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076656326 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087429182 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075928972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08679756 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076371947 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076402287 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076299989 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08631801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076879711 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076945634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076981298 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076238309 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085266911 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089173812 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077431648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084771261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085550023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077037465 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084282131 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075915815 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085868268 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076037201 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077055401 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075433576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087741924 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076041296 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075941985 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075617584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086621638 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075624025 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086391395 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084387066 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074740221 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088271724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086475506 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084613752 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087339737 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077712124 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075586193 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075891019 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076020066 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08432124 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085846965 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077651809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075865406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083640187 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086122972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074395657 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084274856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084705097 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085478158 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075850078 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075859515 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087534898 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086739706 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084455684 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084788541 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084946784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076649282 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083948617 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084234135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076575872 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090882537 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075972084 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088899928 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085999204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083476246 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084962167 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086475879 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086359195 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086929854 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089624073 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075466596 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075618366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085860034 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075976163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074762125 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082857187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076135612 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076507382 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087218344 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.20889439 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088464848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076061471 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085746812 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075134074 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078665401 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090170718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076837008 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078316682 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086060414 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07640175 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084939324 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087385313 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085367841 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077651811 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077812522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085939456 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085780326 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.080158073 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076472139 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078044238 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085806347 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084233837 seconds)
  done (took 20.315553327 seconds)
done (took 40.700058601 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213273925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15802815 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178088794 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122484476 seconds)
  done (took 2.198555235 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122130442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108455274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098448291 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072672004 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106640734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073441964 seconds)
  done (took 2.045908235 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302562305 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207604011 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186541551 seconds)
  done (took 2.158310041 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211875332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196571681 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455579647 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27829334 seconds)
  done (took 2.712396374 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150044548 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093571402 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075651396 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091583038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136430586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164283686 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104731329 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129955575 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087063134 seconds)
  done (took 2.548745116 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151043625 seconds)
done (took 13.282061393 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.241293356 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121332498 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.13101131 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107691582 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210494827 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.082123255 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.214626439 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080733139 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083062688 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110451768 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091160531 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077244723 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.082399638 seconds)
    (14/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.242628763 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190970341 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086645534 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213285845 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.227102979 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081428411 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.108999534 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083726141 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080699027 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.099846721 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.172337635 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077383528 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080590316 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.189524222 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.229181219 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084573151 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.218365796 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.081024613 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108213573 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085488187 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082139723 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098290681 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08754269 seconds)
    (37/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.168894999 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109197062 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.281083886 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.166521713 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103901884 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135964498 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097096484 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181296555 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095904234 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.080068935 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170828878 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.058696073 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17076606 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.133146613 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.100262866 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081286793 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170258347 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18810589 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080730657 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073323866 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085963622 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159187316 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081033899 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097457829 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195841346 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092550463 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09973298 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111697229 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202491627 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121194839 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.242121704 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187289498 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073839428 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075094445 seconds)
    (71/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097925003 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.221096015 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12823915 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.122904767 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074317316 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 0.141067769 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075926799 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151574427 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074592714 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.369061105 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102001033 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196922579 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061361364 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074969578 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.074623701 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.092039692 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097478622 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084699783 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078082885 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101426371 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.102001721 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059175301 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079902497 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082523201 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.184491345 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098748458 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073486834 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.111196195 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096457909 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073287985 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091637765 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112409258 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.097126699 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081178714 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072712785 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059341455 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.073944357 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082987482 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20161073 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058178112 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060125927 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088480804 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085485303 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073524178 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.107163143 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185337689 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073203484 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.084659006 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21470549 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060477513 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169861544 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080898492 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.074370632 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08386997 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081776109 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07685957 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153924557 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076649014 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203326139 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.124709815 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158152537 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086263648 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07343356 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.147487116 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.082040393 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107417003 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08071242 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162994497 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203688634 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058263272 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073483001 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081557047 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122854744 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079569511 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080497021 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059649831 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190813255 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108493577 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.0799056 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072964915 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084190296 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134483022 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079824795 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081777113 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099089409 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058250712 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163132262 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073943612 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072730904 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080889131 seconds)
    (161/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086564515 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073171728 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191016676 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07291772 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091653191 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058183584 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058319979 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07362474 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058257938 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081973369 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073272749 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08165721 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.168335305 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079712398 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.058313432 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182734348 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080886922 seconds)
    (178/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071957483 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057812623 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073313553 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161021371 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14799495 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058081917 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060096829 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070103427 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070810647 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095784165 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074659457 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080364132 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.080169975 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11721936 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08032127 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.120569947 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081595485 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191643373 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057847065 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096855048 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081368484 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085299414 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079334086 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082849756 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071121322 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09554473 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092529948 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.094178681 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071668258 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057023923 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096343274 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057470566 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099615209 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057839458 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056992293 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.14845032 seconds)
    (214/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.057991258 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081706317 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108753389 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078458447 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080645599 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07924331 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120451706 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058424869 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159298396 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068801719 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071494512 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07775398 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059471394 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080571972 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058229539 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069905395 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072318646 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070460468 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144971304 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078091209 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074009446 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074214417 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096973492 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147207765 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057717763 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148505485 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058036181 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097946086 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057640516 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077154149 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057311482 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0591274 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073426043 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059539644 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145328935 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.069604432 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128377491 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072531646 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078299053 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058862516 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071106054 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102858393 seconds)
    (256/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057963039 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05853431 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071350116 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058306715 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057186895 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078332322 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099297033 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057074631 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165858289 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078957886 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057098115 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085044606 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.137876131 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078132303 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069018038 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057609959 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080589928 seconds)
    (273/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082727527 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080872364 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072030748 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1185008 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057111965 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076803613 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.070037888 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083207059 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057513155 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058838589 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094213328 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154269518 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139466116 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100499528 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073748115 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08078105 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070379354 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058308466 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070833848 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057147814 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058350863 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079379558 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134998715 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136290971 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057817627 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057020928 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072289492 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079573449 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078330207 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071859784 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.070172976 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073354507 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07225216 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128332244 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077998015 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.343119786 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075408329 seconds)
  done (took 33.533155011 seconds)
done (took 35.010059993 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09060474 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102053699 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.086115273 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.103300356 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090225015 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.085507863 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08273922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088715447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089560971 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092083827 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086830205 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06335123 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08441221 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084012726 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084637517 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100580607 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.089207191 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08254487 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08256645 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073893852 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08267425 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074409541 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076918361 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062825294 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.088025066 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081464799 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081895256 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083704733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074487602 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.075474305 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078474329 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083392645 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074600346 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.087216692 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.081528285 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082869264 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08399329 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086316282 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075972028 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074170592 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083860619 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074971001 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.08181834 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.083288585 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081226004 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080544196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082690236 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085838002 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099983297 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076800774 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.08390542 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085374558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0839584 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.082302294 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078361016 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081464963 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079692214 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099462522 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082134197 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076136197 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083371214 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.08261006 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080314204 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.08142832 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081174298 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08490537 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084506258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079387875 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083516328 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080046246 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073232355 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081302449 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077267953 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073508109 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084512465 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086162674 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.073201148 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079913575 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081201908 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079344924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072707178 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075911717 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075317262 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.08010976 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074980484 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064599519 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07846271 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080683167 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072650944 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082167304 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080083673 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.080823276 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07489556 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084040901 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07284919 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078538406 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073445603 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.074102449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075847586 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07762082 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.072610203 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07515562 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082986067 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074691622 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080518092 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086578739 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073506528 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080014289 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072212836 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072564819 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086801949 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082961885 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073571343 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075991849 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072037997 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080159707 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072659883 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072962473 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072967359 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073239521 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079459561 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073807764 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075032137 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080479251 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223950159 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073637368 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077311618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075720651 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074127201 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079511499 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073607784 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073593538 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07566297 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069815159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075709581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074498004 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081331154 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074941304 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081296314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074876219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081994458 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078890405 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079824027 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078801387 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072076849 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066742508 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076238989 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075876744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075433741 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073059019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074568089 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.074487424 seconds)
done (took 13.855236049 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074247192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145494681 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103358345 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10319838 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091859447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074928329 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082774512 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106972568 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074840057 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107070641 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095253845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093535295 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120787536 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072565294 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074025981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077187691 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07523018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088282768 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106337762 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094935226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121257722 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072826555 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098995064 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096457744 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094960438 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109718051 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074932913 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077722701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07698628 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099035537 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095861535 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078406733 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07410481 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104222067 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100273954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090129835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074008968 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089665597 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074065232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073767716 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074949192 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105213639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086734596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.0877715 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078010652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084812146 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075351364 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089709116 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096381137 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085649161 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092860044 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107571934 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07689623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091231043 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072385638 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092961468 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084423177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076594683 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07414388 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081902702 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.073819976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077295071 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087771605 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086775383 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07781485 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091264171 seconds)
  done (took 7.429472789 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091397828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100705358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090547962 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091158582 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.072787701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074381032 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.0739195 seconds)
  done (took 2.211391933 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075052821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.097522081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097241342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097645161 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089529205 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096121678 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085806292 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074226369 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095623232 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075441382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09534191 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108121501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077343354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081328225 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097939642 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.073893825 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09848015 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.073837926 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077051494 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099520238 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076311362 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.103702251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078190194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074893307 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088779414 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074419804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122219994 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078485919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076373253 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077611551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072861659 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114219885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088218029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081912607 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074072414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089482684 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089574508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072731124 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.092163958 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082820804 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088610114 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074389644 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075048675 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072181964 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07850045 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085339191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075679173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075007772 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076894763 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094831813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075046379 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087859491 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.076702451 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079714933 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076053665 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080663565 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084795728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075998665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094320769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0757417 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091496516 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091031759 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088599021 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090548153 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076528191 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08807797 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088926736 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.076919075 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07641021 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078298542 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090419966 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07330062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076690327 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.085599372 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076871391 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098091692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098447316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075989047 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088213593 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.074627873 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075167473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074831486 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098699222 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079981791 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074475173 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078875606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077805597 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073027398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073755723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0785827 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072343213 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076027789 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077658777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077032572 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077816451 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091247756 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077507536 seconds)
  done (took 9.705454033 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076493967 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07579238 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077485967 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075723647 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07611509 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076002231 seconds)
  done (took 2.09882492 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100471676 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076053538 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088525157 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079364161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111318841 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095003584 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094818622 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084793101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091380503 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086432141 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094015795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095601929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09926323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079195083 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094202149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079343779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094664416 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081626286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086157044 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079945041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093071655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080305858 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080441236 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089199631 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083283461 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079071441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086235461 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086395909 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085072858 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085897633 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079315939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083088252 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078058762 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085060528 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094758229 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078182786 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079515456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084706371 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079073903 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082923391 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095178349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079244554 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081512927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084717405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085321412 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078355319 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08451078 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086782417 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094536863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084108486 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.086756391 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07885487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083442813 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085485756 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07816949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085231416 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084704886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094625246 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079568005 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078396093 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076227077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083171254 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084584039 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083926507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084865782 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08491751 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078334342 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079116121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080907411 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079013428 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085209696 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075770602 seconds)
  done (took 7.750574413 seconds)
done (took 30.797512346 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541330031 seconds)
  done (took 2.15043379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630758131 seconds)
  done (took 2.263653073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.598458432 seconds)
  done (took 8.226749063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39467663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496272939 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747881308 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141353248 seconds)
  done (took 3.454660735 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728120451 seconds)
  done (took 2.366257803 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23234359 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220450228 seconds)
  done (took 2.100762497 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386440936 seconds)
  done (took 2.016994763 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.153933818 seconds)
  done (took 2.785943272 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255490079 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184727251 seconds)
  done (took 2.074966785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.495070575 seconds)
  done (took 2.127013497 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.894439093 seconds)
  done (took 6.528434751 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225756826 seconds)
  done (took 1.899536902 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243941603 seconds)
  done (took 1.87799981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.761051229 seconds)
  done (took 3.39720447 seconds)
done (took 44.909831195 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09077906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093127049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093634339 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089377966 seconds)
  done (took 1.989178501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085016794 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080730302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08366079 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.079948262 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.08412076 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080301153 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.08187781 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082659437 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079941071 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081109218 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081251468 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080523002 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082552247 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082414795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078782021 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082668601 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083390464 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080148797 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08259631 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07985496 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.077856797 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082495374 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082724025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079561683 seconds)
  done (took 3.594082192 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086417005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081979431 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082972636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080125399 seconds)
  done (took 1.975585109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086009237 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100495346 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097293429 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087154843 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100113216 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.093937429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076346904 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076644915 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077770506 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08508201 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075237768 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10413393 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096080983 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085625123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.087130577 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073833972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075260537 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096125354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.085727531 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085893852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078264121 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085314506 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075892534 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096388107 seconds)
  done (took 3.721868504 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094208479 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110583832 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089042734 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097740233 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098785927 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073135166 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095376372 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.099305664 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134264181 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072387215 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.077939864 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072775869 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080950583 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072508953 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088885636 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115704742 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.119470551 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076865481 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104761716 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073113961 seconds)
  done (took 3.497512073 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081536777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076783325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076477624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073500124 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085830389 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081112545 seconds)
  done (took 2.127095774 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076323671 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.077881564 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075627355 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074213625 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079202688 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074898821 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072829373 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075573598 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074899459 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075194824 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07426116 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073292468 seconds)
  done (took 2.551455269 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206741049 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075560311 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076341809 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073991736 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078316632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074117085 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089255175 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07562464 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.099610257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074205769 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074368492 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077033009 seconds)
  done (took 2.724837071 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215773389 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084167328 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245499985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159017321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119418242 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123170327 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12051978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121157507 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14916301 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10787357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172892966 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174507577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115548965 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144222529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09804408 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.110940272 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164390403 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171888935 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113389469 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173072794 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154454704 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134658777 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15406926 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109653219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112699388 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13014309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078848897 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088789472 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176207511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139520602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151616601 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119902528 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100903369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18363087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178689884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14777567 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156015746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092828071 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110227989 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141620364 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206459983 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096877428 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170190818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260714307 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089741695 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140554123 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126182782 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126824213 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11231788 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09785252 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153689368 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193070052 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145392025 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09599721 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132436174 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123334678 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12278828 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121395317 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187889231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169048906 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134797196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078829159 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116190832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15903609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14016356 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115747479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132698213 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098964294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142744969 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16184979 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131601037 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150645867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.124894359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097167484 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125338579 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148537051 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134925221 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166158381 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13111152 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080711873 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13216338 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109727492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088297623 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157639861 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083157735 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182257096 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107791872 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113745861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134057769 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116891931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116248568 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167498106 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298692946 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111984012 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073744816 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114438694 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128315667 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156680033 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095055446 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116354022 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123670365 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085386356 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146375706 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083084134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130491676 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083298653 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13137161 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136434291 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086536729 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12987653 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110506992 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107135973 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140308956 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165903804 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096120098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090996612 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175927667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129742065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11105673 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15227257 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16393889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106889852 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109893336 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158681519 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179183948 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097539795 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169331764 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114622944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092169556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095653127 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129453593 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11892553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131941922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088962156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125182712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174308892 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082390727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102434845 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140827428 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086088744 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088143843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113076674 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113904443 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104176468 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107425533 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109110189 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143850357 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129314739 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259571769 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132993998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107337199 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179355732 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094825793 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110079149 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112515986 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077245137 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141143791 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167465668 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088565922 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169199855 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128535174 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123337063 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125390301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091431384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147612222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087167212 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077639987 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152114075 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117765569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118343463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156719284 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123247122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132023995 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125143393 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142331755 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137771763 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135747615 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113135682 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095719698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118261181 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134551858 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081161251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097699003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086716775 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112306808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103045157 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091291406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148661273 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130332016 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116532622 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118560051 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103630482 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153199443 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08376387 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135368544 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126189474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103152676 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157988795 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158284962 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138552885 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105782099 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14304908 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.223850144 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081830053 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097528076 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1291915 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091774928 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091006167 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126280491 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154956798 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135448701 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145477682 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131507423 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12792507 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161503843 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077019537 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12603094 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151503606 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127644332 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113857803 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098198938 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106701427 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1485275 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114554621 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188632638 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119906821 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129530646 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159420881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108763675 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087541666 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109867698 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141377962 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112157543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149438732 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106388043 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095069499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115317983 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082698815 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105614408 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134771511 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126448498 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140737835 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121020929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140422055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084745371 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123842759 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130954485 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12980473 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071688602 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12675082 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165306734 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101802055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12385334 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157604073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086633927 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.289858977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182224725 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151678 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094316548 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115890447 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127011883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134755076 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127327763 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147713101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115286891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145125063 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117019791 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092881575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0962066 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10569864 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110558008 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102645686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113235153 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120686268 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103995371 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140226318 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110286484 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117639972 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124144287 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107563126 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099082201 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103954352 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18432856 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125515777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176756507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106696355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148227296 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168099393 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083090371 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086720515 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085135476 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146129853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092413697 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136205922 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11479401 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124738516 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130064472 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148798778 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102428077 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075714499 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11558313 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141887548 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132278669 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106109261 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111579762 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168500598 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110302493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086791751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120339467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123357605 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257631179 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17764649 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069647816 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114320143 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084324874 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088522296 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134720618 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158860448 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087089806 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107435446 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126057461 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119770211 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134737664 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109563684 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116179653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134789283 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158344279 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135313404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09730489 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119488449 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134720551 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16183099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109403585 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104207845 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179745503 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157570749 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166436428 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096528898 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119996424 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119904092 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11769176 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142842377 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091174093 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167627926 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089327468 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142866943 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11093006 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095544529 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136950065 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116423616 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095733095 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153028312 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124368288 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090934648 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085265029 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12602678 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125803963 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113482686 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082588097 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145378976 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081374721 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138356057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314188806 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089525351 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112670969 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104057159 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087516652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116341086 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109392671 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095952196 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106787844 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177487247 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093324286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154460674 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140480839 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119564045 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14161552 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109865391 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648143981 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085812242 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15576458 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124037841 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180203291 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106600134 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124558748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116030742 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13080745 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151712011 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110914871 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.193199571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1390158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123137543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086879811 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108938783 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111155548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095659647 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114677584 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119517626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122320152 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100021601 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122964824 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13100853 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089389983 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103199835 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16172906 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124581354 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151494063 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14713355 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093525164 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124609506 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143678199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08694037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126601175 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308053129 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114779514 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108541219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.088533648 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110394886 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166954986 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081657424 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167730321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127979382 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117283906 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11903591 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120034489 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140885938 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115637713 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129637993 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100377517 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116004897 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12112903 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088793862 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084371253 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113581965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118777894 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105172991 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104915546 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10577978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157624441 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078962165 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107018987 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122713909 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153452564 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180228306 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094791469 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089981117 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126219338 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122739991 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119204664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127689852 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085690953 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088565203 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086777604 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086077133 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115670101 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120381306 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122046025 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117288415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168963461 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.09071235 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243718546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103324054 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112088679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078219812 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085122788 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104207804 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105979201 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115226729 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116726471 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313150237 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102345968 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097334132 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0995318 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081690539 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091730907 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134777917 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117489265 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125371868 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109834895 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070570944 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116499994 seconds)
  done (took 62.724615851 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114013786 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090615215 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103512429 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151812645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129995857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208490744 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160681425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196555029 seconds)
  done (took 2.910194911 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076504417 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102891751 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111153596 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.090911972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074748895 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076690027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238314967 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08875632 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07418274 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10367074 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085483295 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075578375 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.442810383 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.075029444 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074064679 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069671107 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.074666055 seconds)
  done (took 3.679938324 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407961202 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624941999 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358024331 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08399928 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.951454496 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097537878 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.176747628 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14068225 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086496052 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532467994 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415880782 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139409119 seconds)
  done (took 18.768788143 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090130299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08497093 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098604981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098336139 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087464547 seconds)
  done (took 2.292378779 seconds)
done (took 114.229958659 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090200553 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.627947018 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061507383 seconds)
  done (took 2.47278598 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093468691 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094437564 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094164623 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092719311 seconds)
  done (took 2.136307043 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082832859 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084794241 seconds)
  done (took 1.923845278 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246952002 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177697268 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105283442 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091959046 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087895067 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088909651 seconds)
  done (took 2.032935971 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081546789 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083468809 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0808738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085387201 seconds)
  done (took 2.090562312 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0848024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059973505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062634496 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065757585 seconds)
  done (took 2.033370905 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095220403 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088301268 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08739853 seconds)
  done (took 2.031517659 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111356119 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095146987 seconds)
  done (took 1.967269533 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090640791 seconds)
  done (took 1.849976649 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104179391 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109829854 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.142968341 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119673737 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148880104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117736921 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092447693 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093168295 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08508864 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094630846 seconds)
  done (took 2.867357626 seconds)
done (took 23.778945644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088580391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.379143611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367994259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09851585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678029126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365366933 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974274263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101476752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123707039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075696257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093281378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657264163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965710389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334326637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951753471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33310764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657442736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076296529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076176408 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075800271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961625208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076411831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07599235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076570463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65669047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.381015135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076394327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3498675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076205151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078023751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364204983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076680537 seconds)
  done (took 16.464234541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07955886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130205883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081477968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092778695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078651072 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077912894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079409977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077295524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12981563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075833438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094268581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075768506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079638155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076489968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095920941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076094924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077348865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076769819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077245209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077110347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09612198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0765142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076713658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077077538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076774738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089606089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077197206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077024278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076965123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079029996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079281164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077152427 seconds)
  done (took 4.437217625 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123985975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137005001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082873128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113478119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120486648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078353709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153682629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10265117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136796711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076118484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094146116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076365024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111908456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07768095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096830882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077188635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078388128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0769252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076437128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07697432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09667119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07703269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076745562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077853324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077384706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090576541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077185895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076753142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077203856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078443484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08068913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078176435 seconds)
  done (took 4.705125862 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081242392 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.084175623 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.09160702 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.09369433 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077976781 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080902004 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081756149 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078186277 seconds)
  done (took 2.443010653 seconds)
done (took 29.811524912 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087675746 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078461883 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081843323 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090517913 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081921208 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087298532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074989499 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083818104 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081266841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081759247 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083164133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075522987 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080319355 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075551417 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082616634 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076058964 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088489592 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080726443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088353558 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088862021 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078511449 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081886059 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08342445 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088063741 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.088867833 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088319989 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08556721 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.082387157 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076687966 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079017745 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085834255 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092855566 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076837212 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088160368 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076039855 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076174965 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.08033867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076146317 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087888964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084892024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077766364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08478558 seconds)
  done (took 5.222351924 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0963873 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101801965 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093627761 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069984539 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074793535 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073730103 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098128109 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068369871 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067644503 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097647934 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063909431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067904474 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071639559 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06151486 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068703839 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065308754 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070470368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06351906 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069041662 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068253781 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.097801115 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061726896 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086649354 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071377638 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064615445 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069632352 seconds)
  done (took 3.748901156 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08306366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094170044 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098544635 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141299443 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114148585 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087957463 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088188343 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105214096 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097551625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075003566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079569807 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102185482 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098662958 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082829525 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076142285 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095386747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092966303 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077739768 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081937337 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103344423 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09616519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094767958 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105091113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091845616 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075046754 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0784323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079872658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090974881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079023999 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085693047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079052025 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079834998 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078510353 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08777294 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078379242 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078022691 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104547551 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086588256 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090634096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076343618 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084193726 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076973053 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101997531 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13634328 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075137496 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081987568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080652367 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085742371 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07528204 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096974232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087769771 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075942842 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079663797 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075291056 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075303842 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079261696 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078224808 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078881687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084991254 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.08242279 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101550145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081113844 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092950961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075640108 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084244701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075475751 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076868869 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.076989007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.105361758 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077548034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120382498 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076666464 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077263252 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085545965 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084337233 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082472357 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075954514 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092723817 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086719706 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079450111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084936111 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079800323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079065705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100442658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078591553 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07757204 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077191206 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081719442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078887957 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077413329 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089393492 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075547947 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078801311 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093375176 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075576612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077374792 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082197804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.08071143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075386618 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087203499 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079979875 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077239351 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086100762 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076002695 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079009805 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.089361302 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082629157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075048625 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080725593 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081854243 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076783117 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.078105436 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078781195 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07760274 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084914179 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082604557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080341125 seconds)
  done (took 11.779594109 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176185828 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16798429 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079921552 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.170167397 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0857578 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087990757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161017811 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103623729 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076965818 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077542151 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077345885 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119711907 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115121577 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125866658 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087228322 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076436696 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093240916 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.124502634 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162958774 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156957902 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093285186 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086138907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078776898 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.077402962 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078898816 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086658248 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094570833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085441964 seconds)
  done (took 4.825256424 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088249799 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.115401171 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083806001 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.10062682 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098815763 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076015272 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07900638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078398827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090611972 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08586451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075427315 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082472776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083095247 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079693835 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077147461 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083204172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083389989 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077540432 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0801226 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082259574 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086861424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100707056 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080937878 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075877798 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081041345 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075568336 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071122985 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091912178 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077121669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104665977 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074312926 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.08180131 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091508865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077331978 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076993791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076143565 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076168603 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076156945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078632635 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.077039118 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074979455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065503444 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075152267 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087184585 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083150209 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064211838 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081339752 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081777595 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081866201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073418633 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079077153 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07894033 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079514103 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084157852 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080185299 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081450158 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077119832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082194297 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085508946 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076058464 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073064986 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073982669 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080453959 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072326077 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085797046 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081484619 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074661668 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076082165 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077934015 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083308042 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076459235 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081016905 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073349845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078280157 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080781898 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078319599 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07735365 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074607761 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075848861 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07680346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063109588 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07609593 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061494565 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07933812 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074204936 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074367734 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075882014 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.08092465 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08726769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077474836 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082264632 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077424737 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075427398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080062268 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068767224 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079100767 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088707072 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.091073967 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076286376 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074001565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090384203 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081069252 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075375391 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064102214 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081149684 seconds)
  done (took 10.203764693 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100245773 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079212971 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093082543 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099406373 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095984647 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084391951 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087162775 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077381861 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093473962 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083202082 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086503345 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077156109 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087568169 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086510518 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079450278 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087263605 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081147864 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094456305 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092353997 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076538857 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.086111134 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089700315 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09978068 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091309209 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090461029 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090615991 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099776497 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.087077915 seconds)
  done (took 4.297136228 seconds)
done (took 41.84651807 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.87610173 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.039718548 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.862300233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.204073293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.939089692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.072597873 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.942060555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.853180345 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.106724473 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.890813586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.149921848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.06059558 seconds)
done (took 66.925567452 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.913844812 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.996990024 seconds)
    (2/2) benchmarking "String"...
    done (took 2.10016255 seconds)
  done (took 5.884059875 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.145225553 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.435202223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.112933783 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.86046904 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.867882328 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.179630048 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.663347931 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.375498606 seconds)
  done (took 31.284530419 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.100843826 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.085161915 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.599759266 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.627182274 seconds)
  done (took 16.256172601 seconds)
done (took 65.357812326 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.861201496 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.892968209 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.868692018 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.842495949 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.924590091 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.872962494 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.961191903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.877301998 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.863175202 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.851891733 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.864387884 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.347205375 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.874655297 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.027941655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.862964798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.869242997 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.943762476 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.277181083 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.023244137 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.877251541 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.869814451 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.903688652 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.866259414 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.999455416 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.870639724 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.871076649 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.294556629 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.875147011 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.490821141 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.869391903 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.895136104 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.241218869 seconds)
  done (took 206.62075164 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.864407556 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.872579739 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.954234949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.872381868 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.377094869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.047874836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.959150765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.402509894 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.871771361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.881459664 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.081377526 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.86881359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.114111591 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.813432549 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.887974908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.931735518 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.13521714 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.149936994 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.896208567 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.016141096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.866101856 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.01867378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.979435203 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.084140491 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.902556979 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.96886553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.882120732 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.885838786 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.054323688 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.103171439 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.903171677 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.908533146 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.065584212 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.734262515 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.878587788 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.87663565 seconds)
  done (took 173.902871164 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.025180658 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.867827351 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.867218916 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.866921972 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.872801784 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.86725574 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.991764021 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.995218244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.472260282 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.541804906 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.922767073 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.673250953 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.868112777 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.93638227 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.868477021 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.880465306 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.873040011 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.882863364 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.894839538 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.871852307 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.868961003 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.996606209 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.882899614 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.021985851 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.879060907 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.868592707 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87559372 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.235277061 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.868478778 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874586661 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.109281606 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.86948666 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.869224241 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.868957549 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.720009904 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.030468151 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.959147857 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.87253577 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875021108 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.86924018 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.086478596 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.870553779 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.870372995 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.872414604 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020210321 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.869640194 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.997638768 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.870348473 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.349096519 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.869966469 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.87131859 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.977913162 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.673245752 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.870214318 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.869868049 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.874405899 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.870590341 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.870546431 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.882727648 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.868554843 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.956290751 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.871799155 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.871117142 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.873945367 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.877201405 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.871210612 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.108024287 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.875159323 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.302263422 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.929420915 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.10481584 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.993606789 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.874772459 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.938590625 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.96576263 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.871476616 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.871540006 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.871705093 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.871578452 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.871612441 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.951795922 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.872466033 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.022830191 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.880330563 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.872843704 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.925039499 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.941472861 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.872622369 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.72861732 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.875901383 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.872361842 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.149528709 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.938888856 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.872484619 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.871938346 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.871941301 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.003487077 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.995421445 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.588234777 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.876294407 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.835018078 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.881374282 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.017377992 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.874675593 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.012106073 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.875636991 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.955592759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.878730453 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.874521822 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.8733629 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.906739198 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.873700133 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.929244354 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.876788178 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.246429767 seconds)
  done (took 413.210859113 seconds)
done (took 797.605045506 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.514749163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.476979212 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.588084764 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.501362754 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.476343929 seconds)
  done (took 14.357692545 seconds)
done (took 16.158391909 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.964878287 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970243065 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.899084822 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.967349314 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.897504325 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.966948726 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.951250873 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.899971398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.933943882 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.899791758 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937454509 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.898802149 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.888356267 seconds)
  done (took 26.876046328 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.101630986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.111285869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.941937267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.120783536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.917557765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.103110303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.032203676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.021907476 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.024725754 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.887849906 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.882943553 seconds)
  done (took 23.948973638 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.102682037 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.108323394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.948579731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.097738137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.921177112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.100597406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.037622349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.024348639 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.035662151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.886600534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.883805877 seconds)
  done (took 23.949218877 seconds)
done (took 76.574883152 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.877903237 seconds)
  done (took 3.679334245 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.90533014 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.075716262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.886238116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.88330828 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.879230029 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.881859318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.883100488 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.879526887 seconds)
  done (took 17.078302828 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.879541131 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.876301121 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.877147834 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.877308655 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.879695194 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.879287012 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.87560915 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.879454307 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.8770731 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.879543359 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.879983082 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.876776138 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.879911507 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.878670544 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.875642807 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.87632245 seconds)
  done (took 31.851469876 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.878714405 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.876755262 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.876256701 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.877348427 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.876209188 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.877740664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.87743149 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.875648764 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.877136102 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.877085847 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.877345102 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.876786131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.876257076 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.876412192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.877270423 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.878267417 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.876766549 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.87726891 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.882041312 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.877208355 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.878557279 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.877403153 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.877693132 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.878043063 seconds)
  done (took 46.864080691 seconds)
done (took 101.276205523 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.633550661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.51499794 seconds)
  done (took 9.953274511 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.881569575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.881586484 seconds)
  done (took 5.622756207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.880487732 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.881168888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.880815259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.881466066 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.880923245 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.881283429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.881385611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.882503259 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.881774488 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.882469524 seconds)
  done (took 20.619212008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.882516877 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.882010167 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.878972073 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.881858483 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.881610516 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.878660952 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.882358828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.882692531 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.882564227 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.879209063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.882099807 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.878768783 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.882767815 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.87985351 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.882053119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.879127639 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.879117754 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.879646357 seconds)
  done (took 35.662281597 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.881783423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.882018477 seconds)
  done (took 5.570092933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.879443214 seconds)
    (2/7) benchmarking "second"...
    done (took 1.879165486 seconds)
    (3/7) benchmarking "month"...
    done (took 1.880433276 seconds)
    (4/7) benchmarking "year"...
    done (took 1.879675349 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.879394143 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.88047355 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.879010595 seconds)
  done (took 14.964163414 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.883089271 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.039968563 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.111449617 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.533110957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.883631644 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.886754029 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.845713068 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.886844956 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.888320922 seconds)
  done (took 20.765533161 seconds)
done (took 114.962762809 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.698701265 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.877442386 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.126942684 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.927976857 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.929647283 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.21799736 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.885148177 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.186612901 seconds)
done (took 43.657778925 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.901962497 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.19846115 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.203997006 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.904024629 seconds)
  done (took 17.113579745 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.864163006 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.404523364 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.915030817 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.468405446 seconds)
  done (took 20.493004344 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256971919 seconds)
    (2/2) benchmarking "read"...
    done (took 2.226747518 seconds)
  done (took 6.295338552 seconds)
done (took 52.6140876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883264919 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.879892047 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.883562918 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.881857955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.883704616 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.881181421 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.881248071 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.881022626 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.884112273 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.883070334 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.883481835 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.883760241 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.883721727 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.881522551 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881133334 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884076003 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.883699113 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.881245996 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882308423 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.882546745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884590895 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.881612307 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.881780484 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.885896917 seconds)
  done (took 46.992092261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.884545139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.882266858 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.884688079 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.885360806 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.882357425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.884530082 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.885377471 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.882548199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.884957499 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.885534171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.882955508 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.881994665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.885530813 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.882618831 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885663859 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.883128985 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.885062571 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881963558 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885535475 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.883322549 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.885685858 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884690322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.883394665 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885744301 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.882683284 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.882773067 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.88606783 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.883569468 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.886021168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.88270998 seconds)
  done (took 58.332867617 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.890874449 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.89453461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.885457588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.887973309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.885941447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.886207944 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.886289878 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.887202725 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.887696418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.886437795 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.887271188 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.887324761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.887423265 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.887052896 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.887443558 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.887450377 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.887522675 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.887107374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.887235659 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.887014224 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.887542481 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.888416251 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.887015425 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.886614121 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.887683792 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.887107402 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.887553479 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.888903828 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.888036329 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.888089809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.887399958 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.887176482 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.888505348 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.88687613 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.887090606 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.887856732 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.892907622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.895508802 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.887917903 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.88793317 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.888235017 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.887658421 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.887494249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.890479322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.888977919 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.887738303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.888283949 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.888171107 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.889044726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.891807035 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.888098846 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.888923278 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.887749697 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.890095366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.888948836 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.888774997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.888812787 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.888995211 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.888901227 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.889652986 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.889464962 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.889566496 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.889020229 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.890274824 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.889531207 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.890430585 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.890154581 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.88963219 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.889320129 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.889974906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.889567759 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.889514708 seconds)
  done (took 137.783368794 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.889143968 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888307504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.88714081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.887130187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.887437784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.8896016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.887187119 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889425708 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887081744 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.890370914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890353797 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88785178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887146055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891552017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.88989464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.887325974 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.890106227 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.887566523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.889775156 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89077256 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891304978 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.887591855 seconds)
  done (took 43.368621151 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891542544 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891773408 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.888535822 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.891812711 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.889192737 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891907335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.891499071 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.891347922 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892290242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888017246 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889255094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891649417 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.888535378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889233853 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889274271 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.88948842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89146513 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.889423458 seconds)
  done (took 35.841546497 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.889895781 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.889896466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.892657368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.890056189 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.890507086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.893287674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890249991 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.892522869 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.893009762 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.889813442 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.892441836 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893179086 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.893151139 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89066845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892819173 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.889908167 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.89344302 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891045126 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.893677916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890859179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.890487607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893458401 seconds)
  done (took 43.433849502 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.892909145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.894314229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.891218914 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.89130186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.890482989 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.892855403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.893017925 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.890685433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.89415725 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.893379233 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.890376556 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.893696413 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.891909088 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.892077041 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.891390214 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890715466 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.893553149 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.892569402 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895506074 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.891688176 seconds)
  done (took 39.665100055 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.894558754 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894411074 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.895195333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895201425 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895277747 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.894504732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.895989429 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.896510863 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896338425 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.89648208 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.896173537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.895794854 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895992919 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.895767144 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.895546029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895927168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.896162645 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89641085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.896533021 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897609035 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.895491656 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896429028 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896070136 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.896328481 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896346511 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.896933804 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896743967 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.896451335 seconds)
  done (took 54.905948352 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895073583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89557861 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.892371433 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.892981065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.893052573 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.892846796 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.894025894 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.892759969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8962783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.892911962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.896920915 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.897823565 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.896801927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.896362924 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.895384028 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.896981929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897241524 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.893504505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894350131 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893855932 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.897022812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896970073 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.897510444 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.893887202 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893723262 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.896794998 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893946294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.894742997 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897811116 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.894752763 seconds)
  done (took 58.67391896 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.915970178 seconds)
    (2/2) benchmarking "in"...
    done (took 1.914244364 seconds)
  done (took 5.6510061 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.894944728 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897895136 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.896668639 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.894521548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.894844403 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.897212496 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.897855756 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.89509452 seconds)
  done (took 16.989558178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.904471299 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.89875861 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.897892081 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.898041394 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.898925123 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.904036725 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.908232518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.898936485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.904858985 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.904779852 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.91157484 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.91213396 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.906651335 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.903339224 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.903696314 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.904846276 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.898576467 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.8993707 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.899201442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.898637524 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.899958115 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.905659661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.905953606 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.896853427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.90579109 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.916554853 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.907551148 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.898953208 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.904815028 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.908509089 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.903717998 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.896935244 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.900040243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.900062489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.899853969 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.899715334 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.912196099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.905019198 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.911139642 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.899858869 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.899962923 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.896755362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.90682453 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.906962042 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.907148864 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.901462035 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.90021662 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.897559614 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.90435317 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.910434527 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.906444037 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.905286758 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.898111442 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.909391286 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.907469195 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.911775133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.901029444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.909741475 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.915493521 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.916347475 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.920327482 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.913632766 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.907682809 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.901133572 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.917094154 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.92949995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.911684359 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.897878265 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.89917313 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.901747178 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.914795406 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.919394699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.916387271 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.901155828 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901771261 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.901492233 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.907239648 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.902130727 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.913950395 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.909019852 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.902396883 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.902042016 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.918264235 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930009766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.906278869 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.902917792 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.901809378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.903082367 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.909040495 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.917475467 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.903354603 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.903584505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.907961567 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.907505617 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.909082626 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.905066112 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.907937551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.908663727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.899610122 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.903080119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.903742436 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912006451 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.918193701 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.903766612 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.903831093 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.914762649 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.903147845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.90759037 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.915706206 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.903390967 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.903704813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.909285233 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.914990026 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.900348372 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.912691889 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.91730405 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.904656069 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.91077285 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.904791326 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.903786865 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.919810255 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.93587182 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.905019966 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.903844344 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.914442366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.91576135 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.904515637 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.912326091 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.90473311 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.901991796 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.902307148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.910991887 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.905005749 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.910683694 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.904627204 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.91068823 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.903350883 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.905054324 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.904915969 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.911749147 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.911142986 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.910674471 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.911798438 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.912164166 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.905866949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.911504952 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.917205478 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.911144726 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.912474595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.911652024 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.903122184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.905894675 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.912278414 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.907064826 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.91146127 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.906039943 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.910400143 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.906886594 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.906552462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.905992447 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.906796486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.91268131 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.916558676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.907466798 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.915233559 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.911077746 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.904831854 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.90670746 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.906359431 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.911970388 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.906285505 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.91138615 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.915817098 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.914213706 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.905911348 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.907625369 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.915284009 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.906701432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.907239326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.907626229 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.918882694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.920099815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.907164675 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.919382804 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.907309755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.907855759 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.907105864 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.912577607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.911887048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.907561175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.915785578 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.915061356 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.925455019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.921472012 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.914970399 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.912293516 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.914645367 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.912972311 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.917168492 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.908668597 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.909323408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.90993852 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.914497072 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.909102872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.915986326 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.909539557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.913590953 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.909605027 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.909296614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.90982122 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.910180516 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.915489958 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.915779336 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.906354053 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.910189864 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.909283146 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.914688499 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.906280906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.913483133 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.913382918 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.909897318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.910204748 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.921216613 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.906886079 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.916310413 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.915873398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.914625831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.914648729 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.909428757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.916798212 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.915480917 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.920648813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.916222594 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.917066172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.920939917 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.915987647 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.915601052 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.918450022 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.91118431 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.907834459 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.919424198 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.918836857 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.909877433 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.912812712 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.911076252 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.91668267 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.911703632 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.922491681 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.908131041 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.915694766 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.911059382 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.917318509 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.908561992 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.917701323 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.917573112 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.917410785 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.918907985 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.911679047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.91207084 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.918078268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.911593934 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.911650919 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.912536517 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.920747522 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.921437679 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.923933919 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.917554296 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.919986594 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.918231205 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.916539295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.918061257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.912215406 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.918055696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.929665479 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.921289373 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.924150993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.919252577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.91348937 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.922957031 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.919395726 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.921513845 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.917885868 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.917809771 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.918531387 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.917446494 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.909187858 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.91874602 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.912997206 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.9194636 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.919826549 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.916677082 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.913417006 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.917842494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.913562497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.91261924 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.913851564 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.918313488 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.913045488 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.921881397 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.921582705 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.918070344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.918287526 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92517289 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.920497811 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.920726905 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.919437502 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.920547717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.919486154 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.921452518 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.914441857 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.924256344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.923362244 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.921880533 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.929855782 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.921662604 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.929916752 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.915122132 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.924160993 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.922900306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.91303622 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.919085448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.920458217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.915022668 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.927132928 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.916188698 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.921894523 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.919284475 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.914810383 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.915525328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.914931948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.916393733 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.916246341 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.916948318 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.930174524 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.922161226 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.925002807 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.922683072 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.913072435 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.91547889 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.915757616 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.919867723 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.923927739 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.916294566 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.922815668 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.921029059 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.920388861 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.915505089 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.915700495 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.916426312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.913861334 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.916063925 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.927059205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.922359638 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.922804844 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.916893797 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.929786733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.916686544 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.928595906 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.917718024 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.922255274 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.917510359 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.916674558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.92330366 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.921841223 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.92337656 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.91705805 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.924294265 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.920440708 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.917613402 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.924747416 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.923808512 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.918634899 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.921926875 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.933767276 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.941118641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.923968098 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.921622557 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.914719311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.92480626 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.922096154 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.916931264 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.922135366 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.926748209 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.934129201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.926443887 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.923523306 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.917838103 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.923833354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.917877769 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.91873117 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.918749387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.919023881 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.917958105 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.924988915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.918641406 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.926862573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.919348645 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.926623315 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.924776224 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.926097512 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.934468298 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.919406301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.925483295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.919474342 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.918148064 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.925590284 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.924036212 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.919482471 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.925173544 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.920393669 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.925992171 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.932167589 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.932618641 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.92790368 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.924314279 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.921750592 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.925864865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.926054365 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.921429344 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.919920608 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.921418909 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.926406283 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.921286709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.926443907 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.926191436 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.920557832 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.926665749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.92009786 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.929572637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.932756286 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.925929036 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.917618167 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.919984871 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.920784245 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.925238015 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.925836202 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.933085877 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928942293 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.936844324 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.935301304 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.925964755 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.925889845 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.929687079 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.934083888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.925583384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.926892912 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.92127646 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.927061658 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.927336754 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.930387749 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.921911099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.93372342 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.925910184 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.926157836 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.934828509 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.928704896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.922156438 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.928302137 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.931211798 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.927093012 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.919164574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.922673865 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.927285203 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.933713645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.930141516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.922581455 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.929525484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.927212187 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.929363443 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.92754172 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.924206137 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.9295459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.920410427 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.928921246 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.923033137 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.92322064 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.919976887 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.927479001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.927237044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.931449011 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.935462267 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.920237058 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.93033789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.930355397 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.929656017 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.925519579 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.92451003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.921007294 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.921122077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.928018066 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.923047245 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.928498062 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.930834016 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.927577359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.930563345 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.926710493 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.92375777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.932617646 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.939856098 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.931750723 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.92117005 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.929307405 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.929435813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.932417022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.923554235 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.924490784 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.929897179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.931262814 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.924561413 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.924766735 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.925115475 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.932234119 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.945667262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.92482087 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.930441078 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.929567571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.93358555 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.926386497 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.923339815 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.927222149 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.933341568 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.933740615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.933130828 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.926824755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.93748676 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.931199913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.93258607 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.930777786 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.933706573 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.939102382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.933095103 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.924906267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.926097438 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.938307791 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.948176446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.925636365 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.941741968 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.961072269 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.932167975 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.932499218 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.927266724 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930756575 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.926536744 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.933145961 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.927142676 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.927475627 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.926866157 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.926989248 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.933288332 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.938108104 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.935110459 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.926528595 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.926495385 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.931763955 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.934033749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.924144445 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.926866621 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.927904685 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.927607452 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.926966391 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.927277518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.933610173 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.945975355 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.943182148 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.927639063 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.928784621 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.924925702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.936273903 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.93705533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944823637 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.936332882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.928274929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.928251108 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.935711868 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.927592051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.926895217 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.934935121 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.933486025 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.933440492 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.926399826 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.947938011 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.938143422 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.938919314 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.934520332 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.9291741 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.928831517 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.935196448 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.930031216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.928673077 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.935140844 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.934904978 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.93360754 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.92960338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.929408229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.937702407 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.936423867 seconds)
  done (took 1145.204687888 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.926602576 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926540598 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.927649673 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.926711466 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.927283962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.926863562 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.926126584 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.926058743 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.926638029 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.926424525 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.927370572 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927278231 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.927642218 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.926887618 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.927615773 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.927114925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927935867 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.928049936 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.927034031 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92733298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.928322715 seconds)
  done (took 42.321285162 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.930182965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.928224621 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.928211917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.930839197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927880521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.930282783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.927592712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.930496123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.931488782 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927454701 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.930505362 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.93145042 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.92764181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.92924521 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.928592849 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.932079015 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.931519986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.928409156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.930933676 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.928838155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931518237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.9294227 seconds)
  done (took 44.306535758 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.931833483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.931692339 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.936723288 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.928398297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.931780085 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.929224281 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.932372814 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.932284383 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.932606124 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.937286417 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.936447058 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.93781897 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.945057126 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.936401894 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.938754181 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.931905449 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.075707992 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.93194379 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.933066342 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.932305854 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.928794991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.94302288 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.929489452 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.929204021 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.937269172 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.933152738 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.932807483 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.934057179 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.932877733 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.939106636 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.938063079 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.934362347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.938042426 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.94118297 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.93803573 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.941426118 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.938551289 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.933913899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.931078628 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.933973059 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.950539851 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.955174382 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.935128467 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.945923004 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.933896277 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.93503138 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.942875667 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.941750275 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.930967356 seconds)
  done (took 96.859093687 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.935263978 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.935047619 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.93148129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.934256442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.934825608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.934315057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.934884812 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933818386 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.931433016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.932121073 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.934202681 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.931489612 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.930190855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.932793299 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.933539247 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.930829294 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.931641081 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.930420996 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.931523395 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.932118408 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.931242519 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.934455458 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.935508963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.932163084 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934964134 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.931437379 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.931072446 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.93455774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.931731853 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.931003947 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.934788153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934109024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.935494507 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.93188281 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.932720429 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.935562077 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.935628723 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.932143527 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.935526601 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.932297732 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.934958198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935116585 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.935070379 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.935269714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.931348143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.932889337 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.931702007 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.93206735 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.932915896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.935232737 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.935436977 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.933087445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.935507352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.932266125 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.933894704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.934566526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.931243787 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.932865409 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.933433476 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.931079425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.930920264 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.933407594 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.931234329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.934363266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.934423655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.931770302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.930778894 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.933703048 seconds)
  done (took 133.314017832 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.932355612 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.932598581 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932288388 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.933002665 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.934435771 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.93160649 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.931931549 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.932410226 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.932073676 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.932951817 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.933751487 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.932531366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.932725652 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.933201153 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.933237693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.930745747 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.931310256 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.930858243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930975892 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.932888511 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.93115176 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.931723494 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.931640892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.93171189 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.931886434 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930607561 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.929664624 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.929981308 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.929342604 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.929843098 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.930403252 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.927961343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.927601856 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.928832708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.92814722 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.927720603 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927891923 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.927857553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.92738803 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.926752952 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.927081252 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.927155538 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.927650179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.928313923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.927553922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.928123912 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.927715604 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.92822125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.928257245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.926936202 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.928734655 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.928232884 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.927858832 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.928598959 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.928300068 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.928291853 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928029842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.929218058 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.928066445 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.927837496 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.927661595 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.928864456 seconds)
  done (took 121.512335169 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.9286229 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.928029752 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.926200936 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.926842381 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.927796748 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.925748192 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.928885449 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.929462946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.930036136 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.927927836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928321503 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925949337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927647237 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.928517825 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.926845034 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926663352 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925840728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.925770542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.928257514 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.926568021 seconds)
  done (took 40.400591342 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.92498588 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.92846124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.925085537 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.926945442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.928426787 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.925500526 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.928488141 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928732053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927437057 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.928036262 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.929562613 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.928529739 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926040835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.931298619 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.928206353 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.925993318 seconds)
  done (took 32.692554513 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.926487219 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.929537233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.930590296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.92826168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.92579587 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.926704669 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.928847361 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.926261746 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.925275759 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.928802165 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.928820493 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.929660464 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.930148855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.928510396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.92605503 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.929002754 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.925542521 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.926430202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.92405538 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.923944562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.922222306 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.9214408 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.925443021 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.922264769 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.919279949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.919689572 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.919411838 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.918968424 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.916885668 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.917985296 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.915556572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.91717453 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.918376681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.915040027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.913714502 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.910792076 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.913656911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.913343241 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.914528253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.91323569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.91385267 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.911569517 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.913478113 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.914916393 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.91038948 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.912123359 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.909768055 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.910798659 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.910656144 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.910798604 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.912811239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.91345952 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.912765659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.913586882 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.913429705 seconds)
  done (took 107.434965193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913301188 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.913061484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.909948293 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.913613621 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.912969475 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.910673236 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.912735991 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.909773431 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.91065394 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.913673875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.911094615 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.913509284 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.910810715 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.914993849 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.91173874 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.914047786 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.911404411 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.910647622 seconds)
  done (took 36.254402935 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.912252658 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912056319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.914916978 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.911582539 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.911548584 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.915559222 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.911921835 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.914543844 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914527448 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.911641958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.912015632 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.913953055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912988191 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.9136151 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910994771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912908856 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.914067193 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.912939819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.909862208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.91048485 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.912924657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.914143491 seconds)
  done (took 43.918433749 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.917894447 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.917537473 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.934483376 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.940492189 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.938484654 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.953948375 seconds)
  done (took 13.436779653 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908735136 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912780846 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909142775 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91167049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910791502 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908366859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910897765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907540222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910343636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908566346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907836818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911602775 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912240969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907485251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909708351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909549186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907662179 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907461706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907065386 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.91031669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907575718 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909478159 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909001353 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907478736 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907064138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905950096 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910138109 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90843052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906427592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909543392 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909769156 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905657629 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.91009611 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906412677 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909407837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909346837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90693219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909744527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910055195 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906573086 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.909035364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910159689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910401465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90806261 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909316211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907088687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906771544 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905884033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90750299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909907986 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90890681 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907667553 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909775692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910355203 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910102434 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910157007 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908206379 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907352381 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910048507 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908529395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907239532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910579497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907613855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907564503 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909883153 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906677992 seconds)
  done (took 127.815500241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906720363 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.907144631 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907524271 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908512894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90859045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908944103 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907701747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908765935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907778821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907227192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909900969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907211656 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907254651 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908368032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907845253 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907221983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907837626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908595431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908227283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911510951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906696244 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906577598 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907071853 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908069007 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907447604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909803409 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907332212 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907423991 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908202124 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906878848 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906827873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907144738 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906147998 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.906222174 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907481329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906499685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906250227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907443157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906815308 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909537543 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905938781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908900601 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90727043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907012769 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907796009 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907167217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905823019 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906020119 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905653196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907566752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90581488 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906168038 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906466967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906864946 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907103551 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908561576 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906079804 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907781219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906110669 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909766623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907361647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907724523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909858511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906348037 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907446603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907778471 seconds)
  done (took 127.729161023 seconds)
done (took 2656.650344146 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.941729307 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.892015522 seconds)
  done (took 15.665716679 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.074997216 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.02835924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.914290551 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.960116199 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.914702605 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.933838437 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.923558103 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.914258694 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.913924255 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.913667401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.914567075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.102451446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.908780718 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.913628766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.913275664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.009639298 seconds)
  done (took 53.091496355 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.916194459 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.917974355 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.927579864 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.921286941 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.91655353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.927891857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.95014577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.920106705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.951763882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.930231169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.985263108 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.928945367 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.91709015 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.966664275 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.930576575 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.931701008 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.014530449 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.992335281 seconds)
  done (took 36.779931515 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.99670619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.921349187 seconds)
  done (took 10.757989906 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.941061614 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.974204059 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.936911055 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.933971718 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.93288775 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.926955162 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.935501408 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.938711354 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.941119588 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.927099956 seconds)
  done (took 71.228498841 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.92278804 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.917446271 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.917748815 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.916438239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.910381383 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.91416851 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.916474978 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.913780647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584906219 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.953079371 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.923774192 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.924080525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.916843459 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.919272963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.909679263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.941663282 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.013422666 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.909224075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.909704819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.922506762 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.917941609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.968648424 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.931884068 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.913402011 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.948279768 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.585795229 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.927304995 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.923800886 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.011435877 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.909906716 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.917380579 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.918727576 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.920355435 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.287225121 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.223056284 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.917569612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.933241468 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.926384631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.910387446 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.016229715 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.918513949 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.92523002 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.540320298 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.204642186 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.016349021 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.959175121 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.242922199 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.935254142 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.919923212 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.945638322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.921156911 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.921364614 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.931907023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.397855372 seconds)
  done (took 134.786086531 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.912888313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.268130062 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.085299489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.91497272 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205523334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125814781 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.915858115 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965056753 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.918622562 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.14637023 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.17439489 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026707772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.915814191 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.913759629 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.917126327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.913430059 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076551105 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.990522848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.917191629 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.912941394 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947606023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162036416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041917461 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.916276065 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.945505485 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130283697 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.041732181 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025700066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.705936617 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.913633611 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981578018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.915878513 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.916891463 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.914508905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074946589 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.013064062 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000976276 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.917220815 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.915816874 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.914042907 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.590974659 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119522138 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.0140191 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.058394818 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116362557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.126221423 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.701039945 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.913871427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.66124049 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.083880236 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.149968828 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.148978652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.040703062 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.918825986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.241735532 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.915027987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.91438267 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.169222185 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061587114 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.019174523 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919441984 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.915649433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.915852853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164881292 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.919193394 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.016097153 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919778647 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915907067 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.018338632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022336133 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.059251801 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134372163 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.949990158 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.801322823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.456008712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.167960267 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.986987377 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170791218 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.918741947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.915976961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999395712 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.765088082 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173026361 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.169225602 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.173027447 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.955752218 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.642150683 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.918047874 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.148129784 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.141748649 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.172588521 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124600778 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.155831363 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.259718055 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.916831958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.918944021 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.134993796 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058630931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.919907556 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.272819191 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154370098 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.488562568 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.941151748 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229324809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053054959 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.920128502 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.562380408 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.917898099 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.145723442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.960796634 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.919491916 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.918727284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.140961121 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.897711895 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91755212 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.781146459 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.984824724 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.920202608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154513879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.919429742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183666216 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.921977554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.161182368 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.024276359 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.954086709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.095977217 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125173767 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.921075959 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169023348 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.168003662 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039476339 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195454989 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.824096888 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.922156366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.211625577 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.925596991 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.918422622 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.092844181 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.920320666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069059718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.921820036 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.208084869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946136884 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154304881 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.923723223 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.177985069 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.957685353 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974546079 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.924516747 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.057031524 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925196198 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.758993352 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.084591082 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920804617 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.921295214 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.479286593 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.923180171 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.073011402 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.160935029 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.94595574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.996225047 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593624701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.919708969 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013818351 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947794296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.310697242 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.921677128 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.180299817 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.923181646 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.921509779 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.920624487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.166064769 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.162448207 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.922408521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.920957523 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.821786595 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.921093066 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.922267385 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.108405056 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.286086831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.921035611 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128701481 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925579839 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054304983 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923935887 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.004015192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.26114242 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.921175494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.921822931 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.923675558 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.922231394 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.924658066 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134621098 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.951958516 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.460924626 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.063607038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.192937739 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.237613346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.174661903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.969638792 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923580138 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.182659629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.924248915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.989017438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.923645989 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947333542 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157646713 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925074235 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136008103 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.205245098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.968245822 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973465521 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.924879863 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.924490375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.922972848 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.073140547 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017290423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.929418806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.9230029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042341383 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049592063 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.137832978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.926846803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.949791035 seconds)
  done (took 914.922912947 seconds)
done (took 1239.065265291 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.923507623 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.92365534 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.907685766 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.92683123 seconds)
  done (took 29.529205938 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.927050108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.929093035 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.926705027 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.931668929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.926024215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.928989808 seconds)
  done (took 13.415185616 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.952341333 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.924466872 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.929727691 seconds)
  done (took 21.654266414 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.99960421 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31608233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.482739134 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3506653 seconds)
  done (took 10.995360997 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.929621276 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.926911186 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.925651789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.927868568 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.926852908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.929748286 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.927022569 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.926465965 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.929183713 seconds)
  done (took 19.199124854 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.527529941 seconds)
done (took 101.169671535 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.414111055 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.935668718 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.060383932 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.959307862 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.26744504 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.030374216 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.991284422 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.016456857 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.93295026 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.150130001 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.149775912 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.000280093 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.954522595 seconds)
    (14/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341907626 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.113818194 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.978358864 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.354517474 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.352883782 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.960185525 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.254892827 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.020472411 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.955733995 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.947298472 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.958331819 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.992270332 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.199400496 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.50968134 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.40643427 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.022167706 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.934513963 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.415335209 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.324281985 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.937085244 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.667245265 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.233540445 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.941575731 seconds)
    (37/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.112521261 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.069149016 seconds)
    (39/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.355706527 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.920961527 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.024734724 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.190193044 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.05242346 seconds)
    (44/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.23053211 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.984182726 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.029992416 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.115500145 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.001972033 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.033910438 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.029568698 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.747043793 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.944211012 seconds)
    (53/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.649646612 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.109099088 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.949760952 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.179645236 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.022658331 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063948531 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.090091326 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.318152374 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.940114009 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.184082168 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.293913805 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.849975908 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.067672763 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.920294816 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.65653269 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.956610029 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.938394746 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.665840419 seconds)
    (71/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.032446248 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.916364714 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.699772024 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.00407869 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.944893995 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 5.800342356 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.002309243 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.937686373 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.944589656 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.289328614 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.677671236 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.127932045 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.919391769 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.070752512 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 7.301210164 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.790337085 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.942821212 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.167875007 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.078316151 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.554960191 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.942450095 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.324096815 seconds)
    (93/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.035959354 seconds)
    (94/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.965693846 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.840722194 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.281159868 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.620381124 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.038448702 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.954892862 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.266871045 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.454975571 seconds)
    (102/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.046651361 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.953963456 seconds)
    (104/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.959264349 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.015711787 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.277293922 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.268486614 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.942937444 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.146674507 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.218553211 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.036452369 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.267657815 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.243016523 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.280129434 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.014208436 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.941076523 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.24337089 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.949768264 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.919624144 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.360291625 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.075325301 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.123571161 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.943906111 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.028666351 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.236363842 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.035734073 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.941105202 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.004968022 seconds)
    (129/309) benchmarking ("sort", BigInt, false)...
    done (took 6.940631393 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.925345598 seconds)
    (131/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.221009317 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.650094917 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.947877385 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.267990741 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.958865553 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004548837 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.191296651 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.163690387 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.294433509 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.289494766 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.088867038 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.968589833 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.011485501 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.160767567 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.189466967 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.920701162 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.689579855 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.016124072 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.330689979 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.328109748 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.0331042 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.013200399 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.038806314 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.018929803 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.964053972 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.223565726 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.035567088 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.948968036 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.260710961 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.966524099 seconds)
    (161/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.460421831 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.253168931 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.946703282 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.319148211 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.79806708 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.290228574 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.18193689 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.95009876 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.347242348 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.968072119 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.271109111 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.961786552 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.350570712 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.435816819 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.140077402 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.846138094 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.968641546 seconds)
    (178/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.053537991 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.118913983 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.229347355 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.046392541 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.948525881 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.993683818 seconds)
    (184/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.020109358 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.22415198 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.174814603 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.913611331 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.057073712 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.96341408 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.964228712 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.386871645 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.967583515 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.161956014 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.979038887 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.944266338 seconds)
    (196/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.18010835 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.045089877 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.94883935 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.637013219 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.373102841 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.120308982 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.997751157 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.957606193 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.903370262 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.889202376 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.872743898 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.057126871 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.88640496 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.518092085 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.644150594 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.877687152 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.127189801 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.884920974 seconds)
    (214/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.345891058 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.92118212 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.024190506 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.213698076 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.579322856 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.165484391 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.012875257 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.928054412 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.180647898 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.081091198 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.637611474 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.963103916 seconds)
    (226/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.92553784 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.596755341 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.373591249 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.984742782 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.952788475 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.447624542 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.973026387 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415682037 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.084633711 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.037494187 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.59368787 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.819987514 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.262043915 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.95450815 seconds)
    (240/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.065782436 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.764024726 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.019922279 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.978137017 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.045476109 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.929410154 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.041382814 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.068521801 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.14798298 seconds)
    (249/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107322464 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.935921217 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.038972669 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.234343875 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.929314034 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.650960083 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.935937281 seconds)
    (256/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.143944805 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.220329501 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190367379 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.443044137 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243722571 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.113195391 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.062093042 seconds)
    (263/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.045790141 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.144086423 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.970804777 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.259259949 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.529634174 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.713538908 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.080708428 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.077020334 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.935267325 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.397455256 seconds)
    (273/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.952988743 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.952984146 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.327264521 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.931467256 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.315901131 seconds)
    (278/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.049573959 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.193763764 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.95716434 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.664961787 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.442200208 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.900488203 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.954403331 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.967576587 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.962242991 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.06230652 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.052485335 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.026357333 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.930847875 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.18056823 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.511098558 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.934761552 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.758293707 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.039110898 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.036927426 seconds)
    (297/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.268021223 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.04644043 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.954023986 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.079111146 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9783832 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.190434809 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.129898436 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.068669468 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.075706073 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.954474821 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.965474996 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.048149459 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.284827724 seconds)
  done (took 1030.382335233 seconds)
done (took 1032.51533459 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.978802057 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.970584618 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.95480788 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.976258028 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.066702562 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.983876065 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.964637519 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.95764514 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.00184577 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.004770704 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.95509594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.982420445 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.957920882 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.956637497 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.956040919 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.971061411 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.273359406 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.988852132 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.97257877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.964840681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.972547823 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.955136183 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.006740096 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.983681231 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.959178659 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.957476511 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.958722342 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.976170183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.068169682 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.960052885 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.958879325 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.968102651 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.275935733 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.986146481 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.951580306 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.976365719 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.968352569 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.964687214 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.959407045 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.988164284 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.367844304 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.997616909 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.959131238 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.957047079 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.957601173 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.960714814 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.95869362 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.96495966 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.969881904 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.971335941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.362725469 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.013940438 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.961667962 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.957960761 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.968397125 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.956870031 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.960994163 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975218867 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.977568114 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.974100914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.267101711 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.994081019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.959975963 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.975550137 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.96436576 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.398930739 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.993841012 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.962781888 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.367537996 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.004120276 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.402899373 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.009424174 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.960999182 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.973017066 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.990940078 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.274831449 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.986930851 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.95815469 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.966349012 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.9576 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.968984912 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.97297513 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.965080599 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.960434858 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.973649813 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.987546291 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.969596994 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.960330237 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.966957702 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.979556782 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.967909265 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.971023027 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.963732505 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.95427379 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.967908705 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.962327737 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.962663039 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.963226079 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.964710909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.970484886 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.368349167 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.019045024 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.956358663 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.95615133 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.959499483 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.974085998 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.368802205 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.002341916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.981635906 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.007220622 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.961664551 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270264769 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.996427845 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.977026971 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.971000099 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.964412398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.956691776 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.268291763 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.40337423 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.018712317 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.963472452 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.960500576 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.976209355 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.963093253 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.957770728 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278332148 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.99460385 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975335461 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.082868029 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.972023598 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.994840476 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.965349213 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.964760787 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.991066655 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978352248 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.993258955 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.96647954 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976996765 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.979090143 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958228316 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.973479922 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.972900476 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.964371201 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.967231346 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.956771599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.991375891 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.975516735 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.974696484 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.983874422 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.083632822 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.961292385 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.270949712 seconds)
done (took 307.76544973 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.041275561 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.963205924 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.069582837 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.961231138 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051499503 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.054345767 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.959336016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.958890233 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.96005243 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.338819094 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.960923044 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.959214649 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.959233235 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.959470588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.050049058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.961371709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.959128922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.30414733 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.963015051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.039502043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.961971944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.959959362 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.962454646 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.341893243 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.970221052 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.964799238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.040764317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.96151042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.307313691 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.972163738 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.965636912 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.305985816 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.060103244 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.980198578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.973806447 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.968694902 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.052674102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.967739561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.050790048 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.05311323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.068568275 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.004950813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.969318579 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.962512518 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.973207236 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.96522015 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.961262863 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.99139397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.965558538 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.964032714 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.304475002 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.975012067 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.962204777 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.961174333 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.961809756 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.994813376 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.962696002 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.965428819 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.060166484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.965781032 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.03213918 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.345372998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.341320169 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.964184165 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.964990552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.962540935 seconds)
  done (took 190.729040623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.036275399 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.043266589 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.038561265 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.974284409 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.019374473 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.037626941 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.975556333 seconds)
  done (took 16.008787305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.977643963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964830895 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.029190044 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.030054707 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.965810108 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.139730059 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966594518 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.982994248 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.963529715 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.026221043 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.966210772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.965568605 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.971569246 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.971490716 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.031718666 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.983222805 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.092324716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.972152475 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966583366 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.123302635 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.962771022 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.972990109 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.026426439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.982837629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.96716831 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.97894729 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.601794072 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966661715 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964781316 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.966991402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.965394361 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.016837194 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967343964 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.972144218 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.96724369 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.107533357 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.967223082 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964497132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.966070541 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.974234393 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.966781651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.9700214 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.966057712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.96362048 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.965842498 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.996830163 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.966838305 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.966831325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.967566661 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.96751659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.022471876 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.969425213 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.963885657 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.964469437 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.029171851 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.973645042 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.972128125 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.964408276 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.967973403 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.966757285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.125616161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.036580605 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.967587035 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.032272167 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967680124 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96812838 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.970684735 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.968061748 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.070703271 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.967916532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.030755513 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.967136075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.132391774 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.998081258 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969442479 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.976638806 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.980611514 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968736417 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.974423114 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.981804655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.965453364 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975368774 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.980512341 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.9657586 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.966593274 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.105350476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.081721385 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.966252492 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.986720486 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.982353334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.966658011 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.027285057 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.968626475 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.965890766 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.041273504 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.092551546 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.030452145 seconds)
  done (took 215.857545906 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.980246151 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.984613436 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976903188 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.99178876 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.975642479 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.975469421 seconds)
  done (took 13.772746286 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.976832937 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.970215518 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.970032476 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.969631931 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.971692112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.971193563 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.970208865 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97684242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.974051524 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.97249816 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.96988733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.968868259 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.968841722 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.96758131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.972395392 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.968076882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.969036096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.964798668 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.96836903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970611249 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.124229097 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.967751323 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.968362804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.975697401 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.975891448 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.968453256 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.983108756 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.968368311 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.969191417 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.988373997 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.971496236 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.970018529 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.976778424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.980966331 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.975437075 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.977302875 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.973137679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971133896 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.967097137 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.971726674 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.970918726 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969363368 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.969075668 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.970874081 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.979738954 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.979914815 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.974944156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.983015426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.969613773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.971131483 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.971583098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.96964717 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.970484466 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.970716632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.979333873 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.981748301 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.975149751 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.971009507 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.969775464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.978201069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.971035668 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.970675448 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.978177379 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.976194298 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.977645533 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.972579442 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.977928362 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.973580704 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970172125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.969591144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.971817838 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.967049301 seconds)
  done (took 145.081849425 seconds)
done (took 583.349615975 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.149002464 seconds)
  done (took 9.038618021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.068642146 seconds)
  done (took 8.997899282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.446600789 seconds)
  done (took 10.3406387 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.986663839 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.991811901 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.976809672 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.975924775 seconds)
  done (took 29.84219679 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.047965175 seconds)
  done (took 8.935809767 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.986514497 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.961515063 seconds)
  done (took 15.865399117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.051760077 seconds)
  done (took 8.940779736 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.111653347 seconds)
  done (took 9.0261122 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.976459975 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.990184478 seconds)
  done (took 15.867467261 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.946950976 seconds)
  done (took 8.834842297 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.549747111 seconds)
  done (took 11.534128983 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.979948944 seconds)
  done (took 8.97214414 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.001213702 seconds)
  done (took 8.890334851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.025635011 seconds)
  done (took 8.914361367 seconds)
done (took 165.891314771 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.970168113 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.968344652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.967672282 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.96679797 seconds)
  done (took 29.76041461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.002087617 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.001695581 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.00392547 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.014609969 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.005226275 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.002223201 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.993756849 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.995316252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.014515694 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.006436388 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.00365421 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.004894132 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.002967837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.996201996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.005652325 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.005433867 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.015068979 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.004727189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.996605729 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.006132166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.970712766 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.013523997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.007507056 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.970749743 seconds)
  done (took 49.932911952 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.176768369 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.047550279 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.129963246 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.029485885 seconds)
  done (took 10.272662908 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.022026699 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.024053781 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.036056279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.074985619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.108603199 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.033256929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.997790321 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.992732731 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.978670424 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.023835824 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.099749274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.018346314 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.11018785 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.970718553 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.161326013 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.971631276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.971001986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.023875033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.074489585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.094880983 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.97170886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.022784288 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.027205833 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.02153214 seconds)
  done (took 50.722437402 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.970089851 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.978026285 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.976963863 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.971765453 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.970030574 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.970629736 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.976888385 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.973218678 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.99212299 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.972012276 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.970501985 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.970853349 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.971251699 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.970636408 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.970546321 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.983422437 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.984348557 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.972250322 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.974429465 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.977380501 seconds)
  done (took 41.388133205 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.971376029 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.826513281 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.323783079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.227339333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.971143488 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.972387147 seconds)
  done (took 32.18442807 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.992543351 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.984152949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.977668644 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.035862996 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.116621202 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.9867276 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.978943987 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.990658577 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02631297 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.040872429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.001018655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.010016837 seconds)
  done (took 26.033838204 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.974505043 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.984311111 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.97580711 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.000402334 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.991016471 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.987425145 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.985800038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.972988805 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.993665058 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.99794136 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.986768976 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.992429539 seconds)
  done (took 45.739598292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059259587 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.858663094 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.033952954 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694690337 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.508674193 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181333718 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.498246398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316924413 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.976915089 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243927221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000856394 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219087693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225950455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969284034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.040497503 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.419083198 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275057967 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199480037 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996681928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.650387704 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096932948 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496454246 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.762988161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103818674 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185032954 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.103552205 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.232729194 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93014388 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109178192 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010361422 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98280663 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972918257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246541219 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357672553 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085721582 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98209748 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638495882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.692790742 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.965627646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.776734503 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853132397 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.108788505 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980055795 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97225748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.906501845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370606411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418607487 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.981377065 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.675161303 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972717127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985021599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065809775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.97717641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.78896884 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932157805 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254797153 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.969951806 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984390805 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542824489 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.069767524 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489447424 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.012675211 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.072440318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670512743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449114181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.123720988 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.977245006 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977036662 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907757249 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739690447 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102601942 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119817524 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.994189632 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.625204097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292542345 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.076814231 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061734001 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264347756 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.725028595 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.013279443 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203483379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932564744 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909863953 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.833958826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.909051737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245581523 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010202541 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.605054398 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016979488 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315385537 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988815799 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997085178 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983234374 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199513109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.858223738 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975283211 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.7766074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265283447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996712535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316339358 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911721237 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.978149897 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231472491 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.188041162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.100842375 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.526258494 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143135313 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977071323 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.063390871 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.786585411 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09002354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.258643354 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036294049 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.065371987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110842397 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.934646601 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288675371 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002714731 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.147866206 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.046670494 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246727282 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.293296688 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.228073249 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059234592 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979760723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.977608537 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.7425342 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.608249052 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.201463786 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.979488761 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356610827 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091288286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.978970919 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913321956 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.637187339 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056387676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.099932112 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203951997 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.819375822 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3558641 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914141241 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.123708279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.090182019 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.201316592 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.638499221 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.065267968 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238585256 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353655569 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.186541307 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092933831 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997695857 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071319172 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00060617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.29423478 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33700192 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.982675683 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.982415947 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705906562 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059045846 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981137545 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.984864516 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788008321 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26715392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006124931 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.987625235 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.869780167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.993282927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046809866 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985985866 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990668029 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.481766623 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.738311328 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.992001634 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.672566715 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21950926 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989668181 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.679487105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178083953 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.064426104 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265972628 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040573458 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.914302325 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.683382888 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.683345625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980099435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915661913 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.980588791 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989036386 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991112203 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.183140158 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272230652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026293714 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.688708435 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.102981836 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991121676 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.985555715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982317459 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.472653916 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.091698392 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.537916939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093854009 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119161 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.993819372 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.915456063 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.984249772 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986961507 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.98178371 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940861161 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034541937 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.677734015 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441060949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243762133 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.641851414 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000823428 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.705300257 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.118045255 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.011812948 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.828518088 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953845391 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.074856437 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043822978 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.994286635 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.680184616 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759081597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.554344863 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304790057 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.295111154 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431733458 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.359161764 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.30655013 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323456174 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220210152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.512011887 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044499626 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331293369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932501405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074335599 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.646262498 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.346422276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997873983 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211992336 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37986298 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.869134736 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153521863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194797381 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017516033 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783310578 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012033221 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.185630796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140906653 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.778925064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219677945 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326652243 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803061307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.096470992 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.989067464 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683201272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066211689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.697185437 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345210975 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396009307 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15054475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490558352 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.996518789 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430281106 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342586422 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.19242354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.178387326 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92334564 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996214898 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996793689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.985691877 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.96397902 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.925570673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.270534186 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996485535 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221402653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.136728798 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354056182 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.893231492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.990723571 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985444319 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289645887 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.658080376 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226932394 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.313958004 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.562140186 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995773418 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.921207624 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920215188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.689596254 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.987290476 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961982774 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212798085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.099296461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946431394 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365406955 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298516598 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.241970351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.000562776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266790237 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263589096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.76001635 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017557067 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.086901574 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.80376641 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.699195152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209519234 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224014585 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827712892 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219289328 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.057258822 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.950452655 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.993456493 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20420071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.209533299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056194225 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245552491 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.711365289 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.002727543 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370276623 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04623754 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.059435404 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209839355 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.086689542 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004921174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067439127 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998954022 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.999303392 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000010128 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040053322 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070574508 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.131536196 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.00312442 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081534426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089121788 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.582255151 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.999805644 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27416338 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37388223 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3230609 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051966931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.989510588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994333029 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923972371 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13225092 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.435941765 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264210226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.122069759 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.136085262 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013850484 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.810221587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274391579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299829845 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264100311 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.885118714 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990836911 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.077543805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.214339185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00149591 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.202723178 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220031061 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311882369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45997186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.132024984 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431413016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267047054 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36888803 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990325222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581924375 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.002536149 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.746148064 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.028432258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060024211 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289780915 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002104205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373026348 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014751564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.186898394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.507409713 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701356435 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360880966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985024484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053644844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27725299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394886818 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30490239 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059688614 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002836639 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.712187624 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131051357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.965009087 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.263964734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.992410426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203425104 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.704202294 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001296136 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284715824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304879131 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.989606863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.986063618 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055729509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.003298661 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216737375 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260671223 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243722475 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003879775 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.99452779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.80947888 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28149184 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051380136 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928166137 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.997083704 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091622268 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240502706 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014077874 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.511117618 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.695885 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292965153 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.911745434 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01657005 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390449224 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441213699 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332334802 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.525976352 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228956659 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.551854483 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848901556 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.366865947 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.999353328 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42918591 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.369429717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.998176089 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.486890424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104962626 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.270554122 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31545801 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.009966972 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821900296 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.045328568 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219061147 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601548468 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939512032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002578507 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.056151689 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.996559818 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124940595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006732498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.997271831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872981121 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.83088592 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489554689 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.00054314 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.986806852 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.823163499 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.587410275 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105938693 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151701253 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004561358 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.704763624 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.290108246 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251532337 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.509408185 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.063896172 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.999786683 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.997105433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924215264 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193848131 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.200206062 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302097671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.343347724 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.103829925 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00025284 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.212449978 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209061751 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.027451808 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158626339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372853771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106241338 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.918033207 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.711199554 seconds)
  done (took 1742.900751434 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021669527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.027593651 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.013048335 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.004397486 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.030999728 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02068225 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.074865558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.098675002 seconds)
  done (took 58.214306215 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.00384846 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.224953432 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.013751913 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.005776504 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.035715862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.006431909 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.211010857 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.017257411 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.029087412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.016554811 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.005251351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.013859083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.368954286 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.030657323 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.005576834 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.016782976 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.028830707 seconds)
  done (took 76.966004846 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.006069288 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.170657657 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.017870098 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.027953037 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.874341664 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.005729547 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.020082207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.012630382 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.00467323 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160403619 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.323934983 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.037752931 seconds)
  done (took 91.587744321 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.003687253 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.993664517 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.994305608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.994400544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.994499854 seconds)
  done (took 11.89817103 seconds)
done (took 2269.501125031 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.224514315 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201741047 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.219802488 seconds)
  done (took 6.328014065 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.136152929 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.182846708 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.304230856 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.324085623 seconds)
  done (took 10.857373335 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.273386693 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.370109102 seconds)
  done (took 6.547805788 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300938211 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.991037044 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.395159681 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.975229391 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.97725053 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.976749272 seconds)
  done (took 22.83908018 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.979988725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.98224764 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.981430478 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.983603055 seconds)
  done (took 9.829266803 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.960181383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.7327355 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.956410849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.968139902 seconds)
  done (took 21.518556803 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.723034371 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.376659813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.716522465 seconds)
  done (took 9.713989194 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.563906373 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.934810316 seconds)
  done (took 9.394073188 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.242185806 seconds)
  done (took 4.171395981 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.037310674 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.278515255 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.534299756 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.548811777 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.639376835 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.885789134 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.310313593 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.244409093 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.462002485 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.472418486 seconds)
  done (took 26.343069384 seconds)
done (took 143.362584598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.426301733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.02687312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.207074873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.360656025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.232722127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.204116641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.223923118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.347911701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.879585359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.875376279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.357372213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.226461238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.165868863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.01146869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.170560297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.007528081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.219567585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.427962757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.075254832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.273916055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.225521938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.998891105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.191844165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.013789062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.219774165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.178305121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.542824901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.006122961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.219338949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.582906412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.157442602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.446532492 seconds)
  done (took 172.435016432 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.99211221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.008172682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.012727826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.989215781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.377378013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.016088083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.987844598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.986531183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.178642684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.15470155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.016188128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.37803639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.014529433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983229048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.017553566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.983269725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.308094027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.013720137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.016704489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.018916644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.020238302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.187198802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.005592703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.232327912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.256458863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.005526982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97799647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.007890777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.010705382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.012000716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.011312262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.97516042 seconds)
  done (took 212.086607668 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.973699475 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.975337845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.981791677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.972871625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.989809274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.991495697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.969421645 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.969376381 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.483433779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.491714715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994715598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.982844125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986518595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.96778287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.988713241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.968099428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.990335403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.992585547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.994284401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.991981115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.993090836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.665699312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.523895131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.798952396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.994130984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.99628359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971357736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9990271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.003418455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.996917078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.000505289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.970428867 seconds)
  done (took 224.5061507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.154679943 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.969960537 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.971025763 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.879707284 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.969876917 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.969193225 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.982541308 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.151541719 seconds)
  done (took 19.971771903 seconds)
done (took 630.936301494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.532157112 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.30256928 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.155802254 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.993147535 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230655905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036175505 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.987392236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.062544944 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.730582115 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.061825089 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.693580722 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.017039153 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.779324412 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.016313219 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.110413165 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.04732615 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.538696785 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.627113814 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.167474296 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.066299606 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.162678394 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.997203093 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.068987483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.757226145 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.795753395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016170405 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.165327454 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.534985655 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.996321011 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.144594124 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.739924563 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.389112612 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.004393432 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.987291119 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.039206509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.016755671 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.335568982 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.999799101 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.115680379 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.752363555 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.041171772 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.595570155 seconds)
  done (took 107.700990998 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.951536562 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.950142241 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.949298936 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.950308766 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.950674772 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.9497941 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.949072633 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949270462 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.949894167 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.950144228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.949106234 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.950594462 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.950434546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.951854237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.949452385 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.95022637 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.951511925 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.952619527 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.950547386 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.950894401 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.951453788 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.949831563 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.963635361 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.950612271 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.950789907 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.950991497 seconds)
  done (took 52.618475069 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.964594898 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.123941244 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.213334532 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993273399 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.971493537 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.974176286 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.990996989 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.970593776 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.973230087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.973730245 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.068431514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.970527885 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990043881 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.210241112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.988308585 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.965226747 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.963608994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.970096576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.128898763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986872364 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.990427976 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968786556 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.989472821 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.984576043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.971618132 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970535107 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.973676081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.445700145 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.980102424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.065781255 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.047860487 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.995579466 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.387627726 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219105158 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031378936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.975714673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.964588109 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.066422485 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.980362815 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.971258021 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.9889594 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.975170967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.20722424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.475658616 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.98719216 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.965412677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.455184385 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07728656 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.015384104 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981365766 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211769044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.990851483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.967650727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.972043581 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.009132372 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976785753 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.972407279 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.324695093 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.985034792 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991199863 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97194469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.974077058 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135386224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982099459 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.124082625 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.984333803 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980002984 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.973073718 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.210884795 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.991371501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.473932359 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991438335 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.969206449 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.071687358 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.133612239 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.48623224 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.989243157 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140467273 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.405927063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.99878203 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.980732317 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.433981461 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.00251826 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.981960721 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.969263976 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.970425695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.967642233 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.013640193 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.989721192 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409221988 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.485818248 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.342757724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.002155387 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.990102792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.975053542 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.321837033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97903549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.970137017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.206478276 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.491960301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.989755206 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.981710196 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.466486388 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.996312436 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.997276206 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.986578449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.219628261 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.996040397 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.016289744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.971585097 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.984878106 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.980111521 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.997175597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.986289962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971243848 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.460273541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.092341563 seconds)
  done (took 244.357142976 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.973819096 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.975848785 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.972860618 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.984182958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.971943509 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.978101308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.972713662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.972532634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.978419426 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.972397547 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.972681115 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.974872411 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.973907458 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.042688784 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.034772669 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.030466503 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.633328416 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.025311222 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.024974489 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.026861959 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.769621113 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.029908449 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.024638243 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.028402043 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.032549044 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.024054687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.02573202 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.163186541 seconds)
  done (took 171.485577922 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.024841272 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148763895 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.044704586 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.058788616 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.033634716 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.021264634 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.055740537 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.048729474 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.035601619 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.022308942 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.022086516 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.093631102 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.036026413 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.125715028 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.061501766 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.055200905 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.134594008 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.031644573 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.022912171 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.023468579 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.060683298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.019632862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.09315865 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.160746572 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.045639349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149957388 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.031545835 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.025644673 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.031325445 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.150189948 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.041488301 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.086985027 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.060703849 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.048764249 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15426018 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.149258919 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.128727228 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.054131945 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.037756507 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.023531055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.023248327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.012777573 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.149274675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.048055762 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.033245224 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.134355675 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.046984226 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.027554587 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.035910125 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.02432089 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.04578975 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.051357807 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.101826895 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.166899042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.062419024 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.051300961 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.057977337 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.307776585 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.035374597 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.132037733 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.018986272 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.14428923 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.04813156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.013546465 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.025885674 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.031576808 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.055131972 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.057224084 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.136903202 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.039156726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.131456844 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.060981514 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.032071824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.025528185 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.02778164 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.150836861 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.152943944 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.060854169 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.070795027 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.064602919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.022216979 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.033009439 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.014930078 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.052016028 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.030608546 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.144556093 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.153215311 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.034042481 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.029085057 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.0295457 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.029185726 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.060303229 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160771898 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.073292397 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.122924007 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.103107571 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.112475393 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.045642183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.041714557 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.03279421 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.099568979 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.045411497 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.039433734 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.357472016 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.105029083 seconds)
  done (took 219.471603927 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.478743667 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.077881068 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.092511688 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.357088567 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.461130508 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.931204315 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.084827614 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.078698029 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.109115529 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.263107387 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.152482381 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.097526465 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.072118863 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.05856706 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.076538426 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.106192251 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.086283184 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.406864275 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.222944774 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.200248431 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.067294929 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.350059106 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.409262748 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473899067 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.120662001 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.414332704 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.763429993 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219038548 seconds)
  done (took 66.185365351 seconds)
done (took 863.708185968 seconds)
SAVING RESULT...
DONE!
