cset: moving following pidspec: 28344
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.956590607 seconds)
loading group "string"... done (took 0.499287144 seconds)
loading group "linalg"... done (took 7.992816184 seconds)
loading group "parallel"... done (took 0.174930964 seconds)
loading group "find"... done (took 3.980162325 seconds)
loading group "tuple"... done (took 1.905323609 seconds)
loading group "dates"... done (took 1.303076431 seconds)
loading group "micro"... done (took 0.177499234 seconds)
loading group "io"... done (took 0.514690815 seconds)
loading group "scalar"... done (took 46.09631155 seconds)
loading group "sparse"... done (took 12.875343082 seconds)
loading group "broadcast"... done (took 1.225944471 seconds)
loading group "union"... done (took 8.463366174 seconds)
loading group "simd"... done (took 2.829329956 seconds)
loading group "random"... done (took 10.801766127 seconds)
loading group "problem"... done (took 2.264551288 seconds)
loading group "array"... done (took 22.663204978 seconds)
loading group "misc"... done (took 1.097582936 seconds)
loading group "sort"... done (took 3.523865949 seconds)
loading group "collection"... done (took 18.304556213 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6797483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148430288 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200831328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.207466048 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270516616 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166090769 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156374236 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171935665 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.591814318 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210128813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140875501 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434987487 seconds)
done (took 6.049495432 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.302899942 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062023849 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169011537 seconds)
  done (took 0.855107849 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093079332 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162088812 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10878184 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09892568 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09634521 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109189119 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095480953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108576648 seconds)
  done (took 1.396608747 seconds)
done (took 3.264887004 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492989063 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.932776617 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.547584935 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17732206 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309559661 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308388145 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268763233 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.223116542 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092151755 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.143758179 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174767865 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.45887637 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.397307056 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.014483256 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069821766 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.112535085 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.137728937 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.852436302 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08331733 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111530532 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535095259 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210812691 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116050923 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10701552 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192454549 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133826396 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140340602 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103885221 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.723604929 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133822954 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214817674 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085871371 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139861305 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16602724 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222363396 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11195426 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.741177501 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202311695 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099990873 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102763448 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.742590668 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124354617 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208494688 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110610047 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069533044 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168904464 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113983271 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080899392 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095652318 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103500191 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168529158 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.499858412 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105475189 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193167521 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095459273 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.746169335 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098586093 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.282505087 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127834227 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097866721 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09062744 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091838038 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17222546 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.101860827 seconds)
  done (took 20.737064853 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.174342728 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.191080321 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080576792 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162440821 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.128024833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09866335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091750261 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081004846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131666271 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185417824 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144486556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.194611353 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078604579 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09258294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170742254 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.238880602 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127951834 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10687506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091987459 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111879586 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129775292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115216346 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098830171 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097271309 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174009202 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205045042 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110651654 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124432281 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091830783 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102440444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145420838 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151852565 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093139387 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09136847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193855262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108437264 seconds)
  done (took 5.357398442 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.229922067 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105353327 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250618115 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198103701 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153517697 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184511752 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174915147 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301636252 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.307750959 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163613807 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128857455 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097906961 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081688686 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082498918 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096468705 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.838032526 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157607714 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166908801 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166997486 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119260945 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102588431 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.726392888 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10455073 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088798147 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110835261 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065844922 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225564765 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10024429 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.498203516 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084976099 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117850821 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116908962 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208717002 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19441404 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124737313 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140432227 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098443597 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10524493 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.202102124 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121387243 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08817922 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079547178 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.098231928 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120610675 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131040658 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109961084 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110857653 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136759793 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090351084 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114297023 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.099783126 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197426897 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146207732 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104436206 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272450857 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12905939 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102669372 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111361706 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.808749971 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138734491 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085504822 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095592107 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09843428 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080410682 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.82407963 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110769041 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.352756836 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087869501 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.164214016 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09945553 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121049708 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086310046 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103680328 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089074861 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112731258 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104672224 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082751498 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089512325 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097849802 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.092305388 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127203418 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087655731 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086890312 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098680716 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150012063 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099983935 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.126260825 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111959083 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.109133386 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089802522 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128713001 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085054152 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092803586 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189659495 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100153975 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131570627 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115065234 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130673102 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106129385 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.263957339 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086088521 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128224127 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10147601 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128514939 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10181999 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083544933 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104375448 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082198487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083698589 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162646025 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092705357 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086620221 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.110476178 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098852032 seconds)
  done (took 28.354719759 seconds)
done (took 55.066249931 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.409278156 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082675086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082676517 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101636323 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083851492 seconds)
  done (took 1.451138133 seconds)
done (took 2.11745949 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.299788295 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19948723 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090828695 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190342692 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090302113 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197890719 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183406472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103552652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207270735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088209823 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19333229 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088048425 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108482311 seconds)
  done (took 2.733575576 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107277401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109859848 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105217258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121590105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088556891 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104813408 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120692094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11106349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104492947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11405576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088703759 seconds)
  done (took 1.844126392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10345498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107492234 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095275113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120248514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089105993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102381843 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118222258 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110618357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102468506 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114515742 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090164836 seconds)
  done (took 1.825791086 seconds)
done (took 7.069914659 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.222152908 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.968174033 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165088162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.24492537 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.340457672 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295035835 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61578832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.206996325 seconds)
  done (took 15.861257903 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.193067972 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111070571 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096008413 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09715128 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116227057 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099498751 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096509857 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110872425 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094206588 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097593912 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092586942 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109708711 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098318612 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10061451 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108843422 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094074558 seconds)
  done (took 2.451106922 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135735874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11466725 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115690196 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.103173415 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097592937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117258077 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104402322 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117993064 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096624065 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097690179 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121138979 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101642925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100578202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.114626238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100457552 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12044121 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116244286 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10090377 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119244668 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117644364 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102474449 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099532481 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116704168 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101739207 seconds)
  done (took 3.392720027 seconds)
done (took 22.378346887 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148044774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104116136 seconds)
  done (took 0.930011631 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166288968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18329739 seconds)
  done (took 1.032115596 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1146483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093668657 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139695983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10766566 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0942261 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108260155 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118760575 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109860162 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094412745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094373053 seconds)
  done (took 1.764596586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09689187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098404261 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124737162 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170011783 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118940211 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096979644 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098321094 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114403797 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099857423 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093547268 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115045367 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111973218 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097981246 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128224814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09883412 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114870521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102683155 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097845286 seconds)
  done (took 2.668644412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093817076 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095034529 seconds)
  done (took 0.878326272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096937819 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093971369 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096439827 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112126089 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09368499 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092521766 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108296323 seconds)
  done (took 1.384016147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527507702 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236563986 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37536318 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072453885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122554096 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.321019194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106578353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074134162 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092393017 seconds)
  done (took 2.653850758 seconds)
done (took 11.99653615 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093500281 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.44094423 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.630711945 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131597097 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093635873 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148252059 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336013558 seconds)
done (took 2.567688018 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35300893 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168467708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084529109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097726951 seconds)
  done (took 1.392769038 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085250373 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101450483 seconds)
  done (took 0.884381115 seconds)
done (took 2.975801052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092701597 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111412507 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10973429 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091760776 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.091699727 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092544496 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109409486 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091251802 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090769261 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.109583255 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091913226 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091949473 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091387687 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10765759 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091661976 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090798538 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108985366 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092723248 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092060768 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091407722 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107380886 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091457056 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090696745 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.110291992 seconds)
  done (took 3.073254417 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11515865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093029895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111499426 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097368836 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096346703 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113926524 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096943346 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094324533 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114302069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09465989 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.218194751 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112941674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094319009 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096451951 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111197234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098189678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09575292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111205654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094598068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095526938 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114914793 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094984049 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09669837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096575436 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113439026 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097018209 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095089629 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109936979 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096684219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096494577 seconds)
  done (took 3.865138745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100108483 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0904366 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092883236 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117493006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090106206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.092469291 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106309231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093470629 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094719181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09152637 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111278491 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091834831 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092630512 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111777102 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095890899 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096360891 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12205682 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093033456 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093757259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093834611 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11419575 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094227433 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093140798 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109610891 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092692729 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089924869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.111482187 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092845047 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094243328 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091655628 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112339707 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097520515 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094169656 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12038199 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095282419 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092642367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114802935 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090029972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093642871 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089309267 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106803001 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094451805 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092253292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116534936 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093187794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093595537 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092703597 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112888223 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095493937 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096198619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106706809 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092718562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094678778 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110406253 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096308103 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089811323 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093099069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107338603 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09334472 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092319493 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106412162 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09085851 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09795401 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.111229555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109118742 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100234945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.110709314 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095578068 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093615529 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098567491 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.113844591 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10484649 seconds)
  done (took 7.863809261 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118291278 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100706543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110804235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094783962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094098413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092804988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115448232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094654411 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094643018 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117322775 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094027294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093940166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111229616 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094417854 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093155379 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110894183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099724286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09518929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.111024723 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094809417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094025866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115207754 seconds)
  done (took 2.949194833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242431729 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100136329 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143025662 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123824323 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112063225 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124663074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098175384 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099602346 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113636353 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103282444 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101957992 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116119436 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113339859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120963126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103536411 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104510709 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114600855 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1051493 seconds)
  done (took 2.84781422 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107590702 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09514217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155652829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095830156 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095622516 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113680107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101046023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114423331 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114736674 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096110148 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101043047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11452919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097606344 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099158055 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113826831 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099249214 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09967616 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115700038 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106338615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103660913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12074835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10447288 seconds)
  done (took 3.077737719 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108716534 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095686274 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130917608 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099352051 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096353911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11312069 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101309392 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095297473 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.12024991 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097522762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096762736 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095286601 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128724324 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096792661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100281671 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115242775 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097355824 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095797793 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113288542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094281589 seconds)
  done (took 2.805377929 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195219556 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12927805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113372206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118689031 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129876309 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113018501 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135828398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112051024 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111384958 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141004182 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113286581 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11219567 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140592452 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120453232 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132121242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126342835 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141652693 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126080908 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116606979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13199931 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12319478 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110812158 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136239162 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112519251 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128811608 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111920291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111141887 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134015044 seconds)
  done (took 4.244646074 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094970632 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093894068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093499206 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112383485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094280407 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093112655 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093714421 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111222298 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093549463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09365427 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111482979 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094080354 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094391787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110688239 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094301548 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093863904 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094589753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111575534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094233467 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093257098 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.11087804 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094335467 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093778008 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093705379 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110760969 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094210025 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093536856 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111127753 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09513255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093467995 seconds)
  done (took 3.672527266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106461556 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104350624 seconds)
  done (took 0.929863332 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102165082 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109693087 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093990497 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111300952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100702745 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094279468 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120949956 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101127403 seconds)
  done (took 1.553074245 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168240109 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.190187305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099939692 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125642124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171541624 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180855905 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134706894 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118475683 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094194285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087413079 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181118237 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086496812 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112496102 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093103747 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094055529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121031096 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09584311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103265867 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120722024 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097746945 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099507464 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116976631 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098009335 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105742671 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108228974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096500345 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098079676 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124745859 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093172969 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097235964 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112720654 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096507899 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098290146 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117635086 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096646457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.19000914 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102204764 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091416064 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115060041 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101131593 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127621529 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115317592 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098794561 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09508238 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119414291 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101239057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099792634 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112809823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089807274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090835628 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113280995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091121566 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095097011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115301113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096656337 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102157667 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114801674 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091531223 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092500925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108220702 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094440653 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091754498 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114367578 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099225227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097126207 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112806392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095298829 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096119108 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097311728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114240572 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095097571 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110307276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113957172 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099949517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10105745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113963572 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093080865 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101013385 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1120429 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095943721 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099571317 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142880921 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097858205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090629924 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108893911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102753315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096388734 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116116373 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088402505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105274751 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115431631 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097188915 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088874913 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111028665 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091386407 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099902559 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107450802 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096257567 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09453032 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099849229 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118422463 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095049727 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09757027 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118100648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10158081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094131174 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.176441532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092341092 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111092569 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098797519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100444564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108710392 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095483786 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09438352 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110564996 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091962975 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101364912 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113001744 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097300823 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099651663 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1156915 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098976629 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097901015 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094386552 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109298635 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100144035 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104648765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116494528 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097646995 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095958099 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114958459 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095647059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099003589 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110185779 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102095 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092999321 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113486818 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097291848 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100812867 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113489833 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092485672 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095056895 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11498045 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.096535987 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098510126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114434535 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092057123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088493458 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114114635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092329485 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098270134 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103636846 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110082238 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098787043 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092237301 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122679153 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093606121 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101529198 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116567453 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101882202 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102611942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108112351 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094086657 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098687808 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115527839 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093568507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097380016 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114046071 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103602413 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089478863 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100741578 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106467563 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093167363 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100801508 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.117476401 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099413301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091191969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153656007 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108209884 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100954712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115116196 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095923925 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10003819 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114946867 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100432459 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102066118 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119853151 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094608404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094363341 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121546483 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09414209 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098416056 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113206841 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098050484 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088359055 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097613211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10852681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100385212 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098118406 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120688277 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102975003 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098157226 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114296069 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105439793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092649978 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120071823 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.088642424 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101376412 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.125018946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103241173 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1028098 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115541305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093754885 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097940192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126123471 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09963869 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096489472 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099059335 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108713057 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089582652 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101960482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118207058 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093444107 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097006621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117080489 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099693208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094244434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.108496132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100824974 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101530925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111639012 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097390313 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093502189 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112165989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10373822 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090026963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.112107414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098938268 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101142889 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.115589789 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096822896 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099431803 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102516473 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.119772136 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098479893 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094655985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124619896 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095095151 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096901781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.113904805 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098648641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089377247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.127214136 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098575466 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093339234 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092573257 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121042708 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103052174 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101890811 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115127142 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101651326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101320189 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.121386747 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094420392 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102370429 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.11198758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090480341 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092630281 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.11091802 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098253713 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092694185 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120907734 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095564731 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095343044 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121329541 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099886337 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094422034 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121414835 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106918208 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090743179 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108415999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09502809 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096181288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.114394866 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094983769 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09849429 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118135908 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101458826 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11013358 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111774764 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097562473 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1022008 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093939079 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.123580186 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104990078 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103590221 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112055386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101469444 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09376853 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11920174 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090382344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096647496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11438486 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096578649 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093826415 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.115492656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094049832 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089352319 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112929329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104183171 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095388393 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121504846 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097237653 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094417609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112822012 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093810026 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102189131 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095466142 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.123299067 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097414388 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091648822 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.111427298 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10171873 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097202173 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.125170068 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093196015 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099669525 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122262403 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101425582 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096769637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10554043 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124010685 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103633231 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12201219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091725855 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094589153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100438533 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.116830297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099615266 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099725967 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.109530063 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099680153 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102407851 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117750008 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095955848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091085447 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.116770038 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103892693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101474553 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100724149 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118600707 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098346205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092232744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120483092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10260094 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097273438 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123447765 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098024193 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101715 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112645403 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102723382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098910611 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.110759477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090804466 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094813107 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.122586188 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09186904 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101705709 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102469974 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113589355 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09607786 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102336927 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.112691781 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100093712 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102161711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.116925209 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107111118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099176995 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115756063 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102088699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101943027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111053018 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096116924 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096381026 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124633826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096057649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103107769 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116394422 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103696902 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100570944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101758226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122645673 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103255707 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090974089 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123576012 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099780848 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099199804 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112579585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09572237 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092213047 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114983955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104333387 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095154856 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124582201 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103225492 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096399971 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116091953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104167984 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096917289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105008136 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112732461 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099201403 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091869827 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118901912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09600351 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103948788 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.114079812 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091232707 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102696811 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121582424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102316708 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101244382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123026289 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09137649 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091398325 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120145386 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095341872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107214641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119005376 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09624252 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097105051 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100708634 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.118963794 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104966773 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09194999 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113205726 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097559761 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099301726 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116153118 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092398669 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10335116 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116487493 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099550208 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097610369 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112350368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096057234 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105170352 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114796338 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094574532 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096086765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125040664 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.098390383 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094972491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092394566 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124245926 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100276233 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123411531 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094465878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097695448 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096723756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.120098156 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104610285 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095940547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117459104 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096402956 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102491348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123173225 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091741624 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09519104 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12836575 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103217171 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.100530823 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.1220919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096648758 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1043214 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124309937 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101630319 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091642397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111001059 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096919532 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091834361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101522941 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123531639 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096883608 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095923428 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122936503 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102193516 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101169308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119438037 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092345832 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105347824 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113539941 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101138512 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092211404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110811934 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101974684 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104202192 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09745397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117602698 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098957405 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101340704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112247349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095638605 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10105331 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122895901 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103480961 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097522792 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115266069 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101881874 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108836124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118522896 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09714987 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105459061 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.126478829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098869365 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098384274 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121218095 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105229713 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102050768 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10411545 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115899165 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09692328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104363329 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124580747 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109171894 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097018716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.112316253 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101944356 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096224822 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112933982 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10284111 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106161047 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.125913802 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098820611 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095831945 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126985058 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103174123 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098285074 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115274924 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096803515 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102786376 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115544275 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102861493 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.095384194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.125647266 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106042709 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104424907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108281521 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112400144 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104268629 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119825637 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108906807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099411184 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09304679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112893666 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103259705 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106416854 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.125783194 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102149194 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101524185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.12197757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099686062 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098530404 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094502881 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.126990265 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104115565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10047378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120112893 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097124037 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100008005 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120759298 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103607667 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105870826 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117969035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108130029 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105488296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117505048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096153662 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099790043 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.121591583 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099887257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103265743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095573895 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.113456153 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105054686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105206725 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117901165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106994573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10513057 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116805835 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101195773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106710399 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123343629 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101057786 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101034075 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121403813 seconds)
  done (took 63.573216035 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150128627 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107378765 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121560826 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101448893 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117965288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122912181 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10249029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101966227 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122939332 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110833346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100891407 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12106439 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115849721 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140030766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119350511 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112057035 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119917281 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102634468 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102394015 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121400336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11621545 seconds)
  done (took 3.20182663 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119688634 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114527224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13231411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114857389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10710539 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132251128 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112968734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133326539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115122632 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108329219 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135027989 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111328562 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127046243 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109516405 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109896276 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129615153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11376731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108213944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132303605 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11176144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129858127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113048073 seconds)
  done (took 3.396913338 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130651876 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103387356 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099668484 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121100337 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105844839 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100697942 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123489004 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100860133 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110214733 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115650501 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094113093 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09945988 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099357425 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120777948 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095399846 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101724608 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129375718 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10514728 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105578581 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120486855 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093496347 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100941104 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101889587 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11114194 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106856684 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106627395 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121464515 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105197999 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092193837 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123764084 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10145631 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095141913 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092704624 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112276752 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091968516 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104380964 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124084369 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101365331 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101578947 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092084827 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122409059 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105231636 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092616585 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120852376 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10113137 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096734393 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124409129 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102116663 seconds)
  done (took 5.906609641 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131303215 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154257178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105397877 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125408989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135856909 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111823365 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103837373 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127057531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103043014 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125728251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116695302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116287491 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127695526 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107918543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106948928 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126796957 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107626135 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105110386 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129455134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105301329 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129312304 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107468756 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115234595 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135484837 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10761308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105273035 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125388661 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109005803 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113224098 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130886137 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108753519 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129691187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11745354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108064326 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125786751 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106217836 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116710662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.12621403 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107594532 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103878793 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12660813 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110139353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10707767 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136383169 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108003654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107221257 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126229307 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10427018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132804355 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106956685 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111761913 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136792866 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10873017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107301378 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12879419 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.370726663 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105962055 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124485901 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.108094109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113013532 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124979877 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108620719 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134981512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106046476 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112377429 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13541482 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10767586 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108046365 seconds)
  done (took 9.135626476 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135437878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108783915 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137272334 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116969798 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108582531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129511188 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108493819 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128551189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10887384 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113545823 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129584115 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.248343525 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107965581 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115205017 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13010034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110123256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109327228 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1300208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109524554 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108444281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129892935 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117124742 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108824769 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137895391 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120494014 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126141002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108917732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109005448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137809289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10985961 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140751838 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109352608 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108496402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137838623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12007233 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108207675 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123568987 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108974666 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10801266 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132123589 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106089099 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135946204 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109181338 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106787038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129414643 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109650735 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117396906 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14075849 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114183424 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134529853 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110649194 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117168767 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128658293 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109813381 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115544503 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144036141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11751759 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136457511 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109814017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136577874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118320425 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123633028 seconds)
  done (took 8.360179889 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103612804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102062044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101247734 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121727184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102495092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101341115 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121152546 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101740895 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101770412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.102083567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122634887 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101715688 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101204259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120814307 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101654471 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101260544 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102330999 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121559742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10186298 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102203824 seconds)
  done (took 2.92883001 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111399622 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118990234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124550755 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111893585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104368827 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131002797 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10430052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104406589 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103799256 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125739319 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11271712 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131796273 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104195972 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110489537 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133856385 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110193887 seconds)
  done (took 2.637060056 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123133511 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119360936 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209461959 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105860085 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126453682 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111272515 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104757949 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12843134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10269112 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109877291 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128463656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106610987 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105794723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126252434 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105008542 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107465351 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10349227 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127867549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105156168 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21465325 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108107024 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105282289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126451606 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107384535 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105002226 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130977966 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11016033 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10427714 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127918674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10534517 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106535008 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132498255 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10346223 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108673597 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126201008 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105211967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1042941 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125333505 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107929354 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105414287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.12719485 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105667929 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104607088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127082709 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103354394 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105282229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10278906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130152595 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105734594 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106237191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126865258 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10950145 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10846865 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132448843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111580989 seconds)
  done (took 7.231740831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115813513 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10521939 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136517134 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102740363 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105067023 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106188882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126956314 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10729225 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105711513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125421311 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105860168 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107352333 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126337787 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106747057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106342556 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125198962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102928946 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106532204 seconds)
  done (took 2.824234848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109954793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10346571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109518507 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125902417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104127474 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104062548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124972178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104022392 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10328718 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124476432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105471797 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104377921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103083233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125359737 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104867828 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104818297 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126063698 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104082091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10432628 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124506071 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105268634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103972833 seconds)
  done (took 3.231713072 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115753537 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213759029 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111541233 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221964161 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101130976 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124528923 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111517803 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101956796 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140904676 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100630039 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10040884 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122159966 seconds)
  done (took 2.368232498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131523418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142766894 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126224333 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105541913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114839696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131019727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110571731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110211842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138889801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120468154 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130562213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118009808 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118238351 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139691589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113093404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136119808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110418042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109100843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12536606 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125259924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110297811 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137649419 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109256559 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130468335 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109415379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117619504 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138923369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120470277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129753572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118244365 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114518271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130486608 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117415059 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143102524 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106760965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116834167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131732878 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125909458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114146932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138095246 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105927641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135902739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118939556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115230214 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139526371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109644819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135167017 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110568278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109568578 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151453773 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114502017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138235731 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114802605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117547858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138399965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129674898 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140824003 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118490783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135069606 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120400638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118678176 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134560541 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118094885 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14387449 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114837276 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116998144 seconds)
  done (took 8.970203458 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14245234 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105729603 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131135352 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120957169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138512017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110868964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110017493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131868299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11011147 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107739821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174609315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109846028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138997555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119222405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110845265 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131605816 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110289438 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118696583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12810118 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130777112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13132211 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119216044 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118377623 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139873084 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121737589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135979112 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110553568 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110963666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132318027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110773914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135263102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11181095 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119023697 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127687133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118652203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110876337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130955231 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115475009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110775446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136625557 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118290099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14589704 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11028054 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110902332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142749039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109936393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131028126 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108683691 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110633849 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127498658 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121498899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12037362 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144846962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120037561 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132799169 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111263378 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110669358 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131057754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111505825 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115644179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139299893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110462456 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15097829 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111309235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111274184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139145494 seconds)
  done (took 8.940863646 seconds)
done (took 170.288180653 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175470724 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212703983 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196342284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.186945384 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096223761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.167307678 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.130517579 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197151354 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096058862 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095749845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096788568 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121695462 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.204977338 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096265664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119071248 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098827913 seconds)
  done (took 3.0985364 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198469673 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.345768544 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11251407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122652616 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103353506 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101770416 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122712707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103645134 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102172315 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129882809 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102118412 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097214936 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129503632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0983899 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101719619 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121476368 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109135203 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101329243 seconds)
  done (took 3.122298699 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121488705 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15277885 seconds)
  done (took 1.094686648 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13232774 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217739117 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29626013 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171796328 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122837784 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142448238 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15306154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136025797 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192413321 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134880865 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114573332 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09873811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148339042 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107197916 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13937518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099651137 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129581998 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138037988 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115248567 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103204747 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14740343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105789424 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107626484 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137422798 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182394147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137356886 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105569893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125078872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.104721093 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115082007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130805684 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11817588 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115072294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180108848 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.126940271 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156710549 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130957426 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102184322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115293122 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123053645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106735458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105622323 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136455884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099830763 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106083396 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129663154 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10593289 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125940255 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110843156 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109389516 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131747775 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110032257 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175533964 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109521753 seconds)
  done (took 7.947070635 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.886500992 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149577611 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101168226 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.027635918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144725831 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114334517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850175604 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147910722 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256580646 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.897893874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117366046 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1314555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240363821 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260505585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.300992388 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362200382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.739133965 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11410402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133150728 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163472191 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107243342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14055493 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117319313 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52499736 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102023178 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101004917 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12899882 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109646077 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178977443 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10253155 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127727522 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175113309 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294029391 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211125062 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123480995 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101775999 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101283427 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186513116 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277911346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219873509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196344676 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098886798 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102004609 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12825825 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117432794 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099279355 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178203003 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193500921 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189314788 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107013446 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110490351 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131219184 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10548718 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180384339 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099421669 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362051086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384933846 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101574191 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107303716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13471448 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272396215 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103155168 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237088689 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147168386 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219187506 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10134821 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841491398 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187462126 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101308011 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126599644 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108141592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107781576 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126423117 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167911077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.497911147 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108951446 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106605769 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124013395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235394386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102124248 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101160241 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183087288 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10288656 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130650427 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110735705 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129590556 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16890001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272390578 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10945194 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130150638 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106206644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134771045 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103702751 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235058033 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231186692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176210406 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212550982 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12941599 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159330934 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185192409 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128105469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1677048 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128932566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113979519 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107173231 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248005595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137375001 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104052602 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129271968 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108178828 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159176018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106422725 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108735485 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187881451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.56375687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189341987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0998483 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107867413 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13028787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160063525 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131498482 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266838076 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109370374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188158326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10681266 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120236453 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10955214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181812789 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109521075 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130461276 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10691199 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112692362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.281798547 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223723414 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132186946 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256677341 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178312786 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107793515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192410477 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130468135 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16851716 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135561562 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106162723 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103852077 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.855059148 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114689078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108474354 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129021761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187274541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122603515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104983905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102818439 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100197321 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81672508 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128141304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100026643 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105116375 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12943115 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107728585 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111096726 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129946274 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178913677 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247734889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110731686 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128902595 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102247773 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18017061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104775871 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103094421 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123481723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103508986 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109556217 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127947696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10588706 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190121608 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156185694 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.2523033 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656527696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104475023 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103100027 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241402969 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125566586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33022843 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108635119 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23660262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185829467 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099919909 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384953125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165982005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208343951 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106565163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192473447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100870691 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129730154 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160142437 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124781325 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109747592 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179823692 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111933403 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130779636 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.292975829 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104160816 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253505011 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100719998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191784545 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104892151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130282004 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333886614 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103181831 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135254507 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159810377 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129762056 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104403858 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.624898696 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103472451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13211447 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109431113 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233779827 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187776277 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1096748 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131960694 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113415572 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180150831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212625216 seconds)
  done (took 47.907878256 seconds)
done (took 63.982676848 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256560987 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168649149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.37238749 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154628417 seconds)
  done (took 1.865062598 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269596453 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169603101 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253280858 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100592596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259131133 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09926021 seconds)
  done (took 1.999400101 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180891573 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169450744 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150011427 seconds)
  done (took 1.348511396 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207312291 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204324359 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348283698 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260380772 seconds)
  done (took 1.952640374 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.277846875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118329795 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12822521 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23428578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.250411805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206686212 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126532532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176552066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132016465 seconds)
  done (took 2.535073513 seconds)
done (took 10.547357743 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.407729496 seconds)
    (2/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.188850296 seconds)
    (3/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.325533175 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.216677586 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.140134715 seconds)
    (6/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.201882326 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.393377767 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.136776454 seconds)
    (9/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130641349 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.310137975 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.197596818 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.226827088 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.260804867 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.30751537 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.239294945 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.323659912 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.263590188 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.260283751 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128177961 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213812189 seconds)
    (21/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.26911471 seconds)
    (22/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.239739138 seconds)
    (23/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.130553103 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081154368 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14426547 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.223461487 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.360302949 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.26846452 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173383276 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130604338 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.212029906 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176032217 seconds)
    (33/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113395563 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157161336 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.201467171 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136700377 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09847183 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11224027 seconds)
    (39/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147180572 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.13612469 seconds)
    (41/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.20942373 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202285901 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194792875 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.143109409 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133334726 seconds)
    (46/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.13877948 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.159014873 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121252483 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142707531 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081057263 seconds)
    (51/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137456918 seconds)
    (52/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109363858 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.10173113 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.144916447 seconds)
    (55/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082203715 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085643955 seconds)
    (57/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.137634814 seconds)
    (58/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.106450341 seconds)
    (59/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114987616 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154156166 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13065882 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111108963 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078539896 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112199659 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125482948 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.135370504 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153832604 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.102745404 seconds)
    (69/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.151002991 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081289053 seconds)
    (71/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.174157034 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134916912 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.131757155 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111010702 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.108708864 seconds)
    (76/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086163039 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115984576 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.131699687 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154931258 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111991955 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12018286 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.134134034 seconds)
    (83/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080403226 seconds)
    (84/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07872832 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125849526 seconds)
    (86/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.155122383 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082033578 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105390275 seconds)
    (89/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200407168 seconds)
    (90/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081742586 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199649256 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.109274681 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11548239 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.285926467 seconds)
    (95/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085258922 seconds)
    (96/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130148356 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113280625 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132023731 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125679727 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215856136 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180326639 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124099886 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129865229 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192470424 seconds)
    (105/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.111714799 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106816015 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.103425944 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13608003 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.138920299 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078242095 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136512478 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173922047 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102599084 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093109767 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.152902527 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144025421 seconds)
    (117/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.138054163 seconds)
    (118/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.142697786 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106092757 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103388477 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104312313 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104674672 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105074392 seconds)
    (124/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080177294 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087440898 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136458103 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082250499 seconds)
    (128/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114331764 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128136798 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106193792 seconds)
    (131/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114658609 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216433427 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112221924 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109985848 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086087475 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147096599 seconds)
    (137/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080193095 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086309518 seconds)
    (139/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079281294 seconds)
    (140/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.109654724 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12820856 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126634287 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126198602 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087409269 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086260879 seconds)
    (146/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106206518 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.105825538 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080797799 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08707829 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112549851 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087270302 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.110705795 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104723664 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083222622 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086883747 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.110110411 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095626068 seconds)
    (158/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086419626 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105763664 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127692016 seconds)
    (161/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081103804 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079608533 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08726925 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080094424 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.136183993 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106275277 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127314621 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.104755501 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080153712 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106736182 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103645409 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109168383 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082907558 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087304502 seconds)
    (175/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.141045031 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07923547 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.110865126 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107589789 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080692912 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130367658 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087287363 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12581821 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105790531 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130080088 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084924899 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083184033 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085551724 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.108920395 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108374017 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082385022 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081327884 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08287551 seconds)
  done (took 27.32610661 seconds)
done (took 28.179982878 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225258245 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13084521 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114023752 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113382412 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232714892 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121068311 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155509186 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114477458 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122924011 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137662062 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104584496 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124771685 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138061763 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.208232244 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141915538 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105525331 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104911955 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148589871 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12967929 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130383168 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234187208 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106232327 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148616898 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104973341 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234818091 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106114567 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111977845 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.13895908 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12821793 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114005942 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138610156 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104885527 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12926153 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153258075 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104586266 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113615983 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127339308 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087019897 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113663897 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.138897196 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12885505 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114989437 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137802081 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106373243 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114885382 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.136048574 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106241352 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117372839 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103805915 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137211316 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10690192 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128655732 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134959048 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10302396 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102451695 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129444372 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125199577 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105014584 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150266929 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104870024 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105417899 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127321971 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116326849 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104198119 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13615387 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.106373956 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113846494 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136931613 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114781467 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106996182 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104214858 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13686405 seconds)
done (took 10.138091286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110302023 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149823261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.232719594 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236048096 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133054328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14711839 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118098277 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128202138 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142050767 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124087199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14194675 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160698208 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.239396614 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12096586 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120671191 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142132865 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116595252 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11325646 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.235489999 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.154087262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130847387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121408284 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156362622 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124094635 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108080595 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16559416 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11322652 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.139380087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110187066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117978756 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153477334 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11084634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112463743 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149700681 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125643079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11898126 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144133618 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116712476 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109307008 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132685395 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118295553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124227811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132862759 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.122384254 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116783738 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148604068 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115239307 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121234096 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134065746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116590316 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109618019 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157950653 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121569068 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124527524 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144957947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120966535 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.144501019 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1220077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111786638 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144021846 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110176139 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108861751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109745864 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153825875 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112718595 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1442841 seconds)
  done (took 9.804255529 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12775219 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138907485 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143433376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120664921 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114702285 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126518679 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102792349 seconds)
  done (took 1.770167182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105070955 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243433133 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.2164626 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242741222 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240621358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255358633 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128397309 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.128582921 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141630578 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115067197 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.243390283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271917198 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11564461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146542606 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.222907085 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130385351 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.247812563 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.106174843 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119280222 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.245508908 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121727161 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161606757 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118934348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104526305 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.238211566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.132210254 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267429607 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151860849 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114840865 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118320072 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145410338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184833556 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240054896 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145497656 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113739539 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.244123364 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.214689624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145732017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.25872836 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11068536 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.24299342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118913564 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120157607 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146486914 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119475396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.232264903 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123705831 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144785578 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119909711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.250467806 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116450564 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.243189777 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117025599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119726664 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.142162387 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12046681 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127070483 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147790463 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249945415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123040717 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245597354 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.244789422 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.217618234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245974326 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128918209 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243912864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.230945748 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118001654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138887518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122151707 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247272905 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11928907 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116903034 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.235609852 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14832764 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.222527901 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247694418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117637691 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.144672409 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10991556 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118090923 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132145372 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.21094688 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145423685 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118870195 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123386252 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144487939 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121540098 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136562232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130175435 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120344621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141619431 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125131637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119254606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146988501 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251292454 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117554907 seconds)
  done (took 17.081326071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108836262 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106596626 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111324968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131724104 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108005699 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107153937 seconds)
  done (took 1.60050997 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145773997 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120918622 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153835863 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122488243 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191927364 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.226419686 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258193365 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113982842 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.16526917 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133008236 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252808029 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255158406 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253321027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124959193 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257212198 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123225421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261157785 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118299934 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153153317 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118745255 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1199742 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150213238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118461653 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246989462 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120971435 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148155747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114458171 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128970374 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154498625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114678206 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124097986 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.148436774 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113437328 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138717396 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232393583 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139625558 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116516153 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122507302 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148231752 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120880444 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258767936 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117586091 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152648698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123640511 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115785284 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138995751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124796891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113264802 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.257813054 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147705777 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124499113 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120402914 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146757334 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124371563 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11255951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14199209 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123162266 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26063356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123841355 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111371558 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.170635553 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122792714 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140976259 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126918912 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120658527 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14665771 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114018724 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122110233 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14270635 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122848988 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123889521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146393977 seconds)
  done (took 11.841980371 seconds)
done (took 42.988879949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.506421355 seconds)
  done (took 2.432822494 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.11354844 seconds)
  done (took 2.04238301 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.329398951 seconds)
  done (took 19.287186708 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.435389615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474143826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.163057958 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149642019 seconds)
  done (took 3.151731834 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.850230081 seconds)
  done (took 1.797899028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.344361141 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257671021 seconds)
  done (took 1.535552074 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.699449813 seconds)
  done (took 1.644023994 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.557135376 seconds)
  done (took 2.491789814 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295404839 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248974805 seconds)
  done (took 1.488946804 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.644653472 seconds)
  done (took 1.587619237 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.838198948 seconds)
  done (took 20.785756941 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264285574 seconds)
  done (took 1.212865897 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295181663 seconds)
  done (took 1.247412076 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.606594366 seconds)
  done (took 4.558676478 seconds)
done (took 66.198919823 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12179965 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12575779 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.148206143 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123186799 seconds)
  done (took 1.460953128 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125736112 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121537224 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149947936 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120366126 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127778852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.145624358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121656278 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123950657 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119788274 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146282466 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121312646 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119933246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147943567 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.1214913 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117832694 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147563955 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124720203 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121096022 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145759392 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122359111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121441002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148059462 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12393911 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122555336 seconds)
  done (took 4.062323559 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116952178 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111730237 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113672743 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13513614 seconds)
  done (took 1.43178446 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129837317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133638659 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154431359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12927675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133965523 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157088216 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119853674 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118036967 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145061614 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129911291 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136775902 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159835874 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134563981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146963868 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132486071 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116630697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122096766 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15914181 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128172876 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154377484 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123315162 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1277975 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150414022 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.132000688 seconds)
  done (took 4.225877591 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197543938 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132597879 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177185087 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166699542 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179390614 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.120828498 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149392762 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151579547 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12936295 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.14751951 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123102069 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16719805 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151956624 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122558083 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12143157 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151208583 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133630771 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151876583 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169753352 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12587163 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152785392 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133504439 seconds)
  done (took 4.216400993 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125021702 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111742914 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133891022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110204064 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125222275 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137916589 seconds)
  done (took 1.704278183 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111182522 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.105710633 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106686648 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129958563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109381736 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106148508 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128972002 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10664571 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106321166 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105849687 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131754706 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105499284 seconds)
  done (took 2.308365996 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210271406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147585943 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283438074 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372357289 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191732822 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191048522 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286329258 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193864631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208036264 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140664115 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215569212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16466797 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183705034 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19023064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168159477 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160488913 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195040535 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210314108 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17114204 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244720992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16032906 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204301484 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191490729 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178286118 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142383309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191824831 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121653708 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15788956 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174718765 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194191781 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204511662 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153256601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143382934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221482927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263135112 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209147576 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271965555 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135777451 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198688597 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193162294 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260931276 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168117641 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219473254 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15424854 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130453793 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212949574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182097499 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186495422 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161198144 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146232502 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213969599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182743964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199357513 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137474909 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328596622 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165166005 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145211684 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205634357 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189318155 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229769067 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207366727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12447264 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203505688 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218187683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216625015 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170232462 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166478757 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153944286 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167264188 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233003628 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210541934 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161387326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240676975 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15893466 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173160653 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19865249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156873715 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236515706 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200538888 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122441506 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180334915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136604274 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129561144 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216370403 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124072408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245031449 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133416276 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340758987 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208600319 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157423147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190394227 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16223537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192569029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148406656 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129539117 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14481984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190592043 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161485766 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156361671 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158662578 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166605532 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128559599 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154970512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.151705894 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171768855 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160493976 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166211143 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20198105 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132841976 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205862452 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151377767 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190035321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170716974 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221060636 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132164138 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160131315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250293493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172478487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164717699 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175421566 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224106024 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15026194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165644977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166787055 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222532582 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170396478 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201093074 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166681242 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136300641 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168273629 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174757087 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189930984 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161999678 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155541052 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166375239 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221059006 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128192405 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16919632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184089786 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163085445 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126487146 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138239183 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164642381 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143266169 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177492472 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140198331 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183241389 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168810092 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19357149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159547655 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163051675 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175552212 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160604181 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170500042 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177541392 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120647145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205382137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19793902 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157454847 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181705216 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190825302 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209826489 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17511085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15666067 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184178582 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157456118 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122356636 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190554354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171305857 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192812115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188578618 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207975567 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194259241 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192127679 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152323849 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200635157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185897794 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185236626 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144763125 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203272272 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17224318 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150127657 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123980925 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128144635 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165690802 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132189114 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165499974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184283872 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194709557 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204561117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168914185 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167109966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193895504 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153243627 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16301903 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204631768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139409385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219875946 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217257864 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18078589 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16924642 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165708206 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148407151 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128581575 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134149349 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190702813 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138247177 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164928345 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14372231 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219235568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175489978 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180216018 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217498821 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16697081 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228576646 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121935651 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190385997 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170900847 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19712278 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187864808 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158647789 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.16402211 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22146731 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143619712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221638846 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197126853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179990109 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22667943 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165695968 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160558197 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149659185 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189226766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139278895 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190615126 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148158112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160544108 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1544234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13906984 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169556308 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221057442 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146167263 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209136023 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158242666 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204078613 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126514281 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171447497 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175944161 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174243153 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105497422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19977201 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195897357 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179474321 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157539045 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202649321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130202956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34509003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218230181 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17962106 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166460887 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140618887 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2009033 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162113836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191716578 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184924804 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170674986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237233721 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173481801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171305239 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133309297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148545492 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180431592 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14106926 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181494564 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162539023 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172048493 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218736096 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138251341 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197953708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179314325 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173892946 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151888111 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139904121 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255071748 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199317521 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176055729 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193450284 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193439899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186015471 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124634617 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156052215 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135360825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215402241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132377684 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209150649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.168062787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211722407 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202623807 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16409733 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170852112 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12867802 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196904547 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152014828 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213009358 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137136702 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165778674 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219496103 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130367418 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131979538 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190848839 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314422825 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149764126 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201979436 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107522081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30813482 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132398478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134057477 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191483354 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172763111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162978536 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185154548 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202419426 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144690279 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190033178 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136380788 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206301279 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185653941 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195707917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205949381 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147497675 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192487879 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164028707 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204344582 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146377181 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178091503 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160824724 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225966746 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204831792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133613555 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169265672 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199173995 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199974242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17957952 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167801028 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184777936 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155196154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168077496 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166398625 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126149059 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16201449 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195326179 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159691291 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179237055 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200634823 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133245469 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128251171 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176148023 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167936099 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171693757 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132607267 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216869658 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12984218 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212453537 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240826229 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134336516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19546485 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149421419 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130622732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168349379 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146365725 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161285563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174568768 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209422007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133570595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206361182 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167383293 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195078836 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15977042 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171715897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266062889 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159538875 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193515298 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181253164 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198979737 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180329629 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178040746 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19966511 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152157621 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195039067 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149900338 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250689338 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195158015 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169455243 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133549042 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172468494 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139166731 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164101397 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15443676 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198105247 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145243649 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.16522497 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170593223 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174621396 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14991459 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143719219 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230232859 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181720731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191018714 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216971092 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139679331 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205134284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206870484 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13060434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195139794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175326273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173342724 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153997345 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135372929 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.168231987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244650887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12875345 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162229523 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204636359 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170186392 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201836886 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135558589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209044553 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142713794 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207300352 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128879876 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182540338 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170985794 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163046584 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129586694 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200601138 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163944373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193110816 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143182065 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179667138 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221625901 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124750861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163373899 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312136729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165664925 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224990746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136710496 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166687125 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149373778 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160529643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197141755 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201539142 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132692516 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130594259 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174914485 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15863151 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170438508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173483591 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211983916 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163700388 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214625779 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135587122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285177961 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14523277 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201943018 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117527886 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130753036 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170298889 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137037321 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172567231 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209188068 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219352768 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194972777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150189949 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164516038 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128634442 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132816661 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193740485 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155015429 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197965148 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150042177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131421927 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143175895 seconds)
  done (took 86.310705483 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172642265 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17139985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187433039 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.237975854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214556553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306980451 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.248018731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260435754 seconds)
  done (took 2.844004158 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121462601 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161690269 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144714409 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145378917 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112084766 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488032697 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16225155 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122927615 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.1636504 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15363267 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138043195 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575341743 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118231537 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147149177 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123504297 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137156117 seconds)
  done (took 4.054417138 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.827798271 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546203565 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.13103843 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28782599 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.269788589 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214550113 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.780866773 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212467038 seconds)
  done (took 12.312799161 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176843041 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172106829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458765069 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.847676942 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187005948 seconds)
  done (took 2.894048189 seconds)
done (took 128.76620733 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126706817 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126889637 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125760318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157228668 seconds)
  done (took 1.575443924 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.193238905 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092939389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094415459 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120366693 seconds)
  done (took 1.551341673 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460168385 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092139572 seconds)
  done (took 1.632667585 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150922964 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144906741 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167731765 seconds)
  done (took 1.526243002 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140471776 seconds)
  done (took 1.191834334 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120309841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128242406 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280610308 seconds)
  done (took 1.585353897 seconds)
done (took 10.121485526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123171915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.936145718 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435875522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137384496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715966312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428775712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429928214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179061688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17720356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140664363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134388631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694513888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441294177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883033491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397473831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911812062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701569087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115343007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147196867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114838179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408161227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140080727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114831719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114937924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.727337778 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424170491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112520038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.922848707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113329524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116608804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430461793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113563467 seconds)
  done (took 21.028155348 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114555736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17299684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149178588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114883185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117069131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142471569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125852177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125826711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207263839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113471365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164136534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113686542 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119232896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142519702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138728741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11438863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145029533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116530939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122246181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143168284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134973159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112653464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143893059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11628304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113538568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16355724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113885367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127181271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141199083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118019235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118798776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142664428 seconds)
  done (took 5.311733435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162971358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182924714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14987374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153019181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192535021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115391733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231642322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153019459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210052045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115158132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135584662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140695288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155276869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114062972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168593326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11495732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116473885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143869206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121881143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115004247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163441872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113954562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115363429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14503557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114396453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164891646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114542732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126563066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141254231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118426408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119255432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142797971 seconds)
  done (took 5.633782626 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128776341 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129509271 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136948561 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165263469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124953437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127276471 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156638896 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123950016 seconds)
  done (took 2.154388645 seconds)
done (took 35.187312707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139007927 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132301744 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134265801 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156065399 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.25641995 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120614856 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131617968 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119946309 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15866078 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138106744 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113127949 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151743093 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133964859 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124585278 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256942756 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129739119 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.261565292 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259045513 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12228697 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129344369 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152755835 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232273394 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157857747 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122553529 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.255142961 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117213441 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252227653 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125528064 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124661587 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144494966 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229001262 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.15792528 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123382046 seconds)
  done (took 6.419075988 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241525309 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155842629 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122994946 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.1227142 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124508163 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151676778 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248699192 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.122650625 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122751093 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122111866 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152877923 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228003439 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159437357 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119236315 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125060584 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111918484 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278756977 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.15530075 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.11459191 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094891716 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118127871 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.151599366 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259416341 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148812324 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122796427 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122028947 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154060176 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128366385 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.125193355 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123596458 seconds)
  done (took 5.636463001 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129984842 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137851149 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.169482433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192088365 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152154567 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165302226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142694705 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13801725 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173755266 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117246192 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132605676 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183492943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133027814 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127436769 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145745864 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136670374 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139223508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145909164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125303524 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133713669 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166498306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133992566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138746616 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154122991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11531576 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123016967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156587409 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128074071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12417448 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160703344 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118378402 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119551531 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148021761 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15126123 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117065432 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159009511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143080045 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12891096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159561383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150475841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119538972 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148175874 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143238384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.201779437 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117739178 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129893115 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127474234 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161584856 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114566592 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134247466 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188789078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116480414 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.166882265 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116453336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115652358 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124801181 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146501271 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119806047 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130474367 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147415404 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141874649 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12301889 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156904193 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118226573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126687987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144059441 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115306422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121138643 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171330334 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124023101 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153909911 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144065377 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12805028 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129199842 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156383123 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129043102 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115965074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127059627 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156954475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122764488 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128642471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148669314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119751929 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131898528 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16496004 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130828331 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127530859 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158181933 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119618644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119421922 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164038347 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117399372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12139828 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158957399 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116599736 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120794095 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.157902366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128978988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114764557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.170828578 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119512403 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116463912 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141650891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149719353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122170064 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125225049 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18717966 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116880979 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126685135 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159994348 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117017138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124370564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148455976 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11599241 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13465628 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162015605 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125081096 seconds)
  done (took 17.293892241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.356633786 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342609531 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190554496 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.43152912 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130223546 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.27373346 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.340459833 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345712524 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116424996 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181763068 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177541781 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.311478452 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148528332 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145114095 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.345487294 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.403635636 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178641466 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152326982 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182636895 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131167112 seconds)
  done (took 5.98028049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136408844 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152323182 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168783485 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144023031 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126463521 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162391914 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117600527 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139192567 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155941697 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126793992 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119746016 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161838123 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129817299 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134353704 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160125448 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148937979 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123860233 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151127482 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140757778 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121058052 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131848513 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143206384 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125933345 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167560654 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136907212 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127173942 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144443805 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123008288 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12279716 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.155415104 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122782893 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13524216 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152935335 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106504372 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127987524 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.161151551 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.123174867 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119867499 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120868979 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150376179 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132153987 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130256482 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154071377 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101119781 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136467626 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111115145 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160176835 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129916456 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107292566 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166466877 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130226235 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.132243719 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153769071 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139382183 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124225197 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163093749 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129837731 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131225505 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151395592 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116312567 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11527089 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147799136 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125456114 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130944134 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128022892 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164700755 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133829834 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145164017 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121770752 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120691074 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11969506 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.160545695 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137734994 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.154309611 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.125625072 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129239228 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124621258 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125373073 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125502633 seconds)
  done (took 11.864920505 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141645893 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128549169 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.163035534 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.152711786 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131712942 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151106559 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126625076 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13783916 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133971609 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164634757 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132347729 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130499694 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168561519 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128793915 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126233104 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16248319 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131020721 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185474417 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134667526 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145347243 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161434929 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122093997 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130412954 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157541346 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146065759 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12931034 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173997539 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130816589 seconds)
  done (took 5.138638544 seconds)
done (took 53.401907678 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.238088317 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.431164811 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202264465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202422558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.236584398 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226013847 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20796434 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.202742568 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.752714121 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.176113944 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204411047 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.201230568 seconds)
done (took 28.385812521 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.318931448 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340260032 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483083277 seconds)
  done (took 3.92780687 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.193786745 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.192637506 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.439880925 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.192555176 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.192460713 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195843158 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.202421235 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.209987745 seconds)
  done (took 15.722321642 seconds)
done (took 25.257796011 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.18678351 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.449582073 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.431113135 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.174952282 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.193738718 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.217534538 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.199261098 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.237319083 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.206549563 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.177364272 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.607597013 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.466797114 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.196216486 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.591569819 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.174424103 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201563169 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.214932086 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.500841078 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.193688924 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.23095542 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.173615017 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192555922 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.206070307 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.208663846 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.202473347 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.203631838 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.243038114 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.204246832 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.448095021 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.235886488 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.175745367 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.214994672 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.243356179 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19723202 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.202381624 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.210406814 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.474023805 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.203383683 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.17779909 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215081075 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.474461833 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.197453382 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.196250916 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19646896 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.180737495 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.184333222 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.192183517 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.312214861 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.218922609 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.210525363 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.242799635 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.6060145 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.207717585 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.205220574 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.202496462 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.510154126 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.218365237 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.279656647 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.257184544 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.206889841 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.197528443 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.202228959 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.211326238 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.201155026 seconds)
  done (took 143.69787075 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.197047228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20139266 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.200309676 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.210538036 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198308025 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.202151188 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.196455615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.1963746 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.201918343 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.228153988 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.197040994 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.197554261 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.20170132 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145214406 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.208538891 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.213329138 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.203196261 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.215578328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208311569 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.197882738 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.214829693 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.199242642 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.22019232 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198032433 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.199448056 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.28345123 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.231312743 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.218452556 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.207669694 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198658717 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.20090611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.204300417 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841189018 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071365635 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.212506807 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.226200088 seconds)
  done (took 80.048788485 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199150825 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197464203 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200229972 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232858909 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199221943 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804893996 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80638702 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.258649925 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.76023607 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.580053672 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.432667687 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199345975 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293045602 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213980866 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200815327 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.295313679 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225251207 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204260347 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198208689 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804573782 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214984342 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.778237051 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.383335515 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21742708 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234767596 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593227398 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201436193 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233122204 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.539368069 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250054984 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200949634 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.527416793 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.615085067 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203207043 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315071191 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202389412 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234949818 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201253967 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487305928 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203263209 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201122079 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201134467 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206055058 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829724539 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201273909 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808805161 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205225606 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171083232 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201595141 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201169962 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.24403029 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.831416315 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.201971315 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203636178 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205731013 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203127199 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203297504 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236579461 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.259540616 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.065129799 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201810267 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205360547 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237597609 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202721419 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.74982193 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204210997 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.525573995 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262109844 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42677406 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809914564 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20896119 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203813125 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297796917 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329657575 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205678386 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205339149 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204451004 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203366448 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316354103 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203765236 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.916795301 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.203033456 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382508037 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221173133 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.662085623 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30532879 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205984945 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582075839 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209466938 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205069717 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922392187 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299465324 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204851029 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205157441 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204234573 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.920350897 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812614479 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.483247843 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210894733 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.023450408 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208609623 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.096862331 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780553134 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886080877 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208931179 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3178702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.38510718 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.223478344 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206812039 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.673168904 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21140916 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266247242 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206818935 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607382346 seconds)
  done (took 378.797419816 seconds)
done (took 603.642639787 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.055086275 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.999267436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.159552113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.006598514 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.989840517 seconds)
  done (took 11.319695493 seconds)
done (took 12.428419381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408575618 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406045112 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273798386 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417361794 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244171588 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428645721 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402005842 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22870589 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320724576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293846042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322452631 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261070826 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242936881 seconds)
  done (took 18.357694511 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496585839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218751073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27458374 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472585523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252316223 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503439466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538027728 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.217101693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377474143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230340453 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228609677 seconds)
  done (took 17.921306918 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50007777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.219957881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294751019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506315132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255055651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500139025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54614443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.221911328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373684001 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257468367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230266136 seconds)
  done (took 18.015546791 seconds)
done (took 55.402336819 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247505705 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.31059453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.246293251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227491749 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227558468 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226965056 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231981501 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.227006667 seconds)
  done (took 11.056472201 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229640634 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226825766 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225875582 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227032082 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228390861 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225965409 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226727718 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.226445226 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227127953 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.227314279 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227831523 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228295761 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227205122 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227499699 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228526649 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228075737 seconds)
  done (took 20.752658267 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229708199 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227359422 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227334805 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.228141897 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228679564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228356485 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227386513 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.228941679 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.229127903 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229975313 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.228988807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227136215 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227920054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226547261 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227657874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230425248 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230808518 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.229508256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.232775657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226741449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227875766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227269813 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230095082 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.228076927 seconds)
  done (took 30.599739091 seconds)
done (took 63.519245043 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.228261248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.219102988 seconds)
  done (took 5.560972809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.291538678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.28712075 seconds)
  done (took 3.698900512 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228295914 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.230350803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231792912 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230086129 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.226623255 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22889328 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229293752 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.228808696 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22965746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.228871427 seconds)
  done (took 13.406945152 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231424645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228575239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.23204002 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227517361 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.230869555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227959983 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233441541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23276159 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230961335 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229834515 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229573269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228884167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.23212934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.231692083 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230595846 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230457191 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23020465 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229231497 seconds)
  done (took 23.261053955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244726522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246327518 seconds)
  done (took 3.607156947 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.359186583 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272964416 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336507796 seconds)
    (4/7) benchmarking "year"...
    done (took 1.327701913 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272534133 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.251111109 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.274067711 seconds)
  done (took 10.213266763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224440304 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.504856505 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.695489931 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.38587529 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214081777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241962735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.196609899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.24660673 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239753283 seconds)
  done (took 14.067509899 seconds)
done (took 74.925508643 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.2181435 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.293647986 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.239448986 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235007259 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575168328 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.253738097 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.221374812 seconds)
done (took 16.156540295 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.213531185 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.211232329 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.205904633 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.227984098 seconds)
  done (took 9.977072776 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226178131 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542736893 seconds)
  done (took 4.890856325 seconds)
done (took 15.987200407 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232531025 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.229662921 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229956553 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232745791 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.232495587 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231107446 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.229490286 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228343179 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234236268 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229651338 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.232302917 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.232733166 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232932807 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228386569 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230676496 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230928921 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229842151 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23075643 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232860733 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229277883 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230306717 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232929557 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232387414 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231031847 seconds)
  done (took 30.66578688 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234736236 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.230720803 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230160428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230688901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22901301 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230593444 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229890468 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23181242 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.23010465 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231688219 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231990039 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230686904 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23245842 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231647557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231845846 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.231637297 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231972003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229575054 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23031219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230786151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231770267 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232381257 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.232311273 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230951704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23091057 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230336504 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233001057 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.232240821 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231921654 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231245406 seconds)
  done (took 38.05430586 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23601912 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236545137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234027635 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231784758 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232472957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232307691 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23310248 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234455231 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23161598 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233636402 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233353896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232333178 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231810772 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232471388 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233748258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233085341 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.233533309 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233177161 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23315145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233357583 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232197956 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233527259 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233078815 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232764392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233667361 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23337187 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23292576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.235175798 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233080918 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234219474 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232801434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234701179 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231463076 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234266515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234230905 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233825267 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238239863 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241129923 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23431802 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234628182 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234588092 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.23413292 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234804869 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233843329 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235047878 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234429459 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.235575013 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234607642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235064526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234465403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234384835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235178316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23553875 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235279344 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234463228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235231378 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235267906 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236044476 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236008763 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235691232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235318544 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236487615 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236897586 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235095179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.235484226 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236162461 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235640018 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234725498 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.236002885 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237437542 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234822913 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235569998 seconds)
  done (took 89.996715288 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236152061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23752347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.235237897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238168324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236165667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234952036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235931609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236316412 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236389543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238320145 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235417208 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237371864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23681892 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236317382 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237778529 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236911663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237604955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239111444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237582621 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237510748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238494997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239626506 seconds)
  done (took 28.337006272 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239874312 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239785944 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239126178 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239898915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241095145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239016681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240200579 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23866691 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23900572 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237072717 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238647024 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240498191 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241849065 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23936749 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237522418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243588911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23900569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241417703 seconds)
  done (took 23.440592421 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240214008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238365857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239149546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240351486 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240152527 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239568572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239234476 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240382992 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.242232856 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240894586 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.240907887 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240733667 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238283871 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240536566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241316439 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240858267 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239574837 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240909625 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240442493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240257237 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240098925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241229888 seconds)
  done (took 28.410889721 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239931457 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241558442 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24112107 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.238544296 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240130115 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239871713 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.240640546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240887689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.24210366 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240878504 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242168842 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240925171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243082953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24100332 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240883529 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241033936 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241739769 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240471294 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240499962 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240755279 seconds)
  done (took 25.941669168 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243059412 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243800628 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241957242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242070537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242767117 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24220909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244779402 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243328433 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243837466 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244593626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244388684 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242344587 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244400764 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243181282 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245115376 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244189921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243751484 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246207351 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243436031 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244655539 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246877597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244058063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245605879 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244660737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245662461 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245300342 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244253189 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245004576 seconds)
  done (took 35.961250743 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245222035 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246072541 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.244098967 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245172605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246354017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245003151 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244673347 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246085282 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245481097 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245056914 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244738515 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244660831 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244773273 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245310582 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245049824 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246691038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244770178 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245009386 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24576658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245692778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24661385 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245125045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246524851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2467019 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24595048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246490013 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24582429 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246358676 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247255163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246910874 seconds)
  done (took 38.498176326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.265551594 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26540804 seconds)
  done (took 3.659423671 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245626305 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248018994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.247693418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246601422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247705951 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248088454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246889121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248665794 seconds)
  done (took 11.108199902 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.240327891 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248548888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.247504192 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.247662756 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249548757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23992468 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249253133 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252142443 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240858441 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240983406 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247400763 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247285258 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243715518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242792429 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242427528 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244706671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252354785 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.250773349 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.249909085 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251340551 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250158259 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243774369 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247462804 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253220461 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.244135642 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254138398 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248777121 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253615614 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243896124 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248474714 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246185896 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251875049 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.251508844 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.251867646 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.251407952 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.251714515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252603374 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249438105 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25651999 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256960247 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251508005 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252074167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245930347 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.249413027 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248141585 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254823926 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253080499 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.251089331 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244350692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248740029 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260663295 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243961306 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253917012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249751546 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250562506 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256074863 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261893659 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248145493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251350395 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257889401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263971788 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26190639 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251783821 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25980134 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255642951 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270255201 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258136738 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261476896 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252748225 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255979897 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254211473 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266431938 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266481952 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259214654 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253768387 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256249664 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249716749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257671303 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256796958 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258079924 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.261728659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2556932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259871947 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270127146 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248824084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258861726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2559637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25512803 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24664226 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260965244 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264417756 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25635417 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247877319 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250364205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253101847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258344724 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246483776 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250783282 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260793285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256482202 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255962829 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251153378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260406015 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261815151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256246779 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256665181 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261979611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249701997 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260997696 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262472112 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255810945 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249071124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256711082 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260202515 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252097707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258269281 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261369421 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253518068 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263737264 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.258270736 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258034007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276365302 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262363314 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255320541 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254477457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270316239 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257298793 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256128733 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263820928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258498041 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258582906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254247054 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264996424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250266933 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262454051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249549504 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260927651 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259112834 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260627592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255158652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257815894 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255870021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257509389 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261325075 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.266151541 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255475636 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265413492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259882287 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258345751 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261525779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262983375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258491117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253043237 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.263546663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25015687 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261949246 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252118649 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263907653 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260740613 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.259325109 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258132659 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252468204 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256633203 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264423333 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259984312 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259555968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262426173 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259293416 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.260766769 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252392133 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262439503 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252690017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257165255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.267633021 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260721089 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.261746456 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257932501 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267101611 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260525246 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261640572 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256043077 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262067468 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265634149 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263699129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.270839705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262133506 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.262681475 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.256126643 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255961577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265743682 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257035928 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270467244 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269714328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274846132 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256703441 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.266510743 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254468449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266988355 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262041104 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27051134 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263320781 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261521525 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256469169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265234296 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25723456 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266501279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254619242 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264583591 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263279504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263298993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263139882 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257891405 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260822097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266426263 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262734126 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263302937 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255120654 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266280067 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254411969 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258735331 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266962001 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.264134206 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263566921 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.270814994 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26218305 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268161581 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.263789507 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258186565 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.265894604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262194246 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.263821388 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268878648 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.265613375 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260328629 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271136259 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266117246 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257488163 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265432877 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.275200295 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264869564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25848503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.271247599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267015613 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264166872 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264441833 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258837427 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26783053 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268729433 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274925485 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257826351 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268809419 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259619601 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269489324 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.261655248 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26778879 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.26540315 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268936387 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273858288 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.265815101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26097466 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270498592 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.266969109 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.26751977 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259928505 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272538408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266872076 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267818687 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264117936 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263413557 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.269744291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260807295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269784873 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260689573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278432871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289851154 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269989001 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274669466 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271836995 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270123359 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270790982 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262570686 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265486138 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265396807 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26299162 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262774865 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272036294 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26253762 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271812545 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267227914 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272547217 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272429919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268418533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262361821 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271885041 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26949576 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.2687525 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260432583 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270453381 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263845886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270538479 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269273133 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.265466151 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276701055 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273359867 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2667964 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.267700407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263580391 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261623316 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267184628 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275280122 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263998852 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.278310031 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264614478 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271344096 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264733419 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275976921 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281595675 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265701584 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276495841 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.271552184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261916937 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262928812 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271676813 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274987547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28346994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264097192 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275458164 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26863052 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271413542 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270963492 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27148017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271741463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271357227 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276364193 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277737337 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267878711 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275041441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281290362 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272290654 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270638021 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263561847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274213815 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.283938418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268067902 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269568338 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267567878 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273649457 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.271544141 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.272681862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.273498406 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.272773703 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275855503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278895161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276501518 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273568421 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.277485156 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285847328 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278144374 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286138727 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26853259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279865823 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274489514 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266743724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269998046 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268457477 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277315664 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265537833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279790804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.273935631 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270183854 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27561669 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.281251766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266193526 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277083642 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295600259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26595323 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277243519 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273515961 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265789765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278096941 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275271244 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264621511 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269785749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274112201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281850418 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267656005 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278295947 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268886414 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278957173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274461732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.275231289 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.275103034 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274951174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267875099 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.276763003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274998296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285607234 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270728486 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27551871 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270863924 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282341001 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288220467 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270472267 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280124504 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.276520363 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269851786 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.273490469 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282251079 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268786397 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278772752 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270117492 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27434598 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275315739 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279206573 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280862402 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281516728 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268553622 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271309741 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277817508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276493466 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277200264 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273888437 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283698365 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269408088 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270203866 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279321171 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273301398 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282484908 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270294608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27831504 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275703656 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280644491 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277458966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277398146 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268548957 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271961329 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285005038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287666429 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282124746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.277876111 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282902135 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273030874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278509005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28015802 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273560773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274745687 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283708814 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27476745 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276996409 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273627546 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281765512 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.283931113 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284526443 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273930973 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286551704 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.29005939 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288005752 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273989802 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27696527 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276314775 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281541422 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.281223809 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273464251 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289117648 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287517769 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286279046 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281125472 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283153755 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272388515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284632744 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280749321 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277951619 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289329606 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277631987 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289070965 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280985786 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.278608009 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273046378 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274594954 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275928609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279293222 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282598102 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280260038 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28539615 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279977416 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28833204 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281435334 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282231358 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282284233 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274298788 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284893917 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274169371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.283330037 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284040246 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275217625 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285253958 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282888584 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275832483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282995551 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290731918 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282424183 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276088024 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282876344 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.288023808 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295892387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283714603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274963558 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282536841 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287354399 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283021403 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284300657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27749801 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297300721 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299020824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277956443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.282208564 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288802235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296980603 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284759387 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284193145 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282361219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286359459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292754012 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.284554138 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288172902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291990627 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280805006 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.288528612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279317418 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284912796 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286317852 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297136837 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285059923 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282643011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297427484 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298207897 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286799006 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311497556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293361845 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.286096094 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292758084 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27736709 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287525513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281746152 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291625152 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286139644 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28539195 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287645758 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279389944 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288589765 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.294142685 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.296649856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286955489 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278033219 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281030326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28812468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286611724 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.288778647 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.285985902 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288515382 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287284659 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280150456 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298821212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.307980928 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292330789 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.287562575 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286254338 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287904343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.291383019 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287639261 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294550853 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2879223 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289983438 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28614021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.296624391 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289699833 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283177919 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280883631 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282133251 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.292438368 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297987413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312756747 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292262495 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293742254 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29072311 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.29042978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283688697 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293228397 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290573784 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284400511 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285855815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293535339 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292448922 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290059922 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284131364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297214377 seconds)
  done (took 757.878942507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291440743 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290614077 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29104289 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289881026 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29196065 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291906096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29146599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290509427 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288760562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290523642 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289743187 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289886884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29958144 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290674685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290909982 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291192949 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29225311 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290519692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289079933 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29163853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291864228 seconds)
  done (took 28.28267328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293815699 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292527493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293582492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292274885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29339005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292064344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291442454 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291120514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293173249 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29141563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291806175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291298431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291742429 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291531173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293197234 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293717272 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.293689215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292275873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.292134086 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293275634 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291293561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29439181 seconds)
  done (took 29.602316263 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.295126655 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293250365 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287067963 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.297169352 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292466396 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.293999572 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.295212848 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.292170431 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293684966 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.285899888 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.28692679 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.287556435 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289690752 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.301546117 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.289935139 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.300865127 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.294839718 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.294261082 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29393811 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.29620967 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299566442 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.307408434 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.293818708 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.289616819 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295335134 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.293725449 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.295586378 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296340076 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.287802072 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299814311 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.294826731 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288574318 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297795001 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.297325219 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289518429 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301730838 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295282056 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.294584908 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.294049386 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.295814147 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.315615179 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297774238 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.300269958 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.310035288 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.296922368 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289778746 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.303871482 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.2957642 seconds)
  done (took 63.350926542 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296233451 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297681108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298448599 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295293506 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297544334 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29634493 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.298778512 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299704335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300379698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29820245 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296988262 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297752708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296202426 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.297761807 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296872826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295115455 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296384869 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29789701 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300439397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297281993 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297093209 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297399589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298554306 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297622074 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298409161 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297494809 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298331367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.296714685 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298838458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297514058 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.298017422 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29766809 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297624414 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298388909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297320063 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.297775325 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.29975034 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297290615 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301488151 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300012053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.297713359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300384823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298557704 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.298457588 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29841703 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2977204 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298519838 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297366904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298427729 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297771635 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.299475625 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297983173 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299256278 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299576349 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299475544 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.299895701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299409906 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.29861414 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300236586 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299199718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30102184 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302331718 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300162213 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.3014027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.299707283 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.30213006 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300296453 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300036438 seconds)
  done (took 89.471417243 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300158238 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302794394 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301798743 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299822753 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301530223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301158113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30056095 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300859928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302051943 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300816177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301761862 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299319597 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300516691 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303145898 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303903278 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301891015 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302611871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303136937 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301311293 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302611251 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301878811 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301804407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303150776 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30405574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303584896 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305337268 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304010086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302770224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303347443 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303264333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305868486 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302781343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302959072 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302134561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301026063 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303057731 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303536221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302576425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303348507 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304277936 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303349932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303590518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306482771 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303226411 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304853206 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302224141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304208725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304364142 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302968496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304112831 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304062208 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304206145 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303616424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305534524 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304417687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303461403 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304150483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30455616 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304084014 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304884481 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304748795 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303949939 seconds)
  done (took 81.965696523 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303411421 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30534552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304815721 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304830999 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306073493 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30318435 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304252887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304581864 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305713973 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304988436 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30646951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304740006 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306074354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306647884 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305054001 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307828395 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306961818 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303359654 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305315675 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306474034 seconds)
  done (took 27.283366163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305282095 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305849783 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30473525 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306208833 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30609365 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305849525 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305697048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306241567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306503343 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306544503 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306802958 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306203042 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306651253 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305017259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30688253 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306353321 seconds)
  done (took 22.075909459 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.306163411 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307426202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307442005 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307994832 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306932042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307552869 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.306670133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.3058706 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307398912 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.306428305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307156595 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307827158 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307192312 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309686819 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307005619 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306921524 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306724223 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307442407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309804842 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308271039 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308751282 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307163117 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309421769 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307782918 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308652796 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309060117 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.308033179 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307661344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308434284 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307867012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310027597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309252799 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309255886 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.309870262 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308622671 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30991714 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310646015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309031404 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310442187 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.31177308 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.311322138 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310523461 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311505492 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310118647 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309434434 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310116256 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.31027489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31023892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.312127078 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.310500347 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310625278 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311796005 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311927798 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310999068 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310224994 seconds)
  done (took 73.172689186 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312260664 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310700022 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310481664 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311207162 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311488235 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311007112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31128791 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31212173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311102269 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310222982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310982055 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312761216 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310885322 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311516748 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311915881 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311582527 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311854563 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311714022 seconds)
  done (took 24.78884753 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313218532 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312215228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312443784 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312844848 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.312465234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312726791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311793532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311912809 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312231983 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31099249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312094245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.312231331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312463487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312660758 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314299874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314187538 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312067348 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313402906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313223583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312273799 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313458597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31249466 seconds)
  done (took 30.062577065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.303149914 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.304351921 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.302953167 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.320180434 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.323151439 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306027212 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.303824814 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.30375556 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325635589 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.347088333 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.341440823 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.323139819 seconds)
  done (took 16.990871072 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315454831 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316093375 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314548348 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315974923 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314338689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314473825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31488065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314034267 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315836521 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317398655 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316085357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315392541 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316443206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316385712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316231346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31456482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315416416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314667141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314136824 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314438077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315584596 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316661776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315744514 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315723822 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314643052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316259895 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317318043 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315470868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316275569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316563844 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315820251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314850375 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316010771 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316746177 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317219255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317266352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316923841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317539654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317021117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317710148 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316925576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318702981 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317032975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317763585 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316883543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316588235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316949422 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317184454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318544543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319364293 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317194168 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316349622 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317197722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317290373 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317218088 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319936685 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318667781 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317830771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318348116 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317298907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31997479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318264926 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320199669 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318917878 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317906701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317860876 seconds)
  done (took 88.089199316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318419769 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319075726 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320190846 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319961417 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318508991 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319438973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318815387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319823178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319917763 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320331954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318335813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319832612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319565203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319424517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320741151 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318694708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319320682 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319111389 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319110551 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321358377 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322074851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321219123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320769906 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321092217 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31891905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321548205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320040771 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320970446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320610535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320873046 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32146714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321117531 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321684883 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321008663 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321411311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321023947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320191312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321966666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321016829 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32180301 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32027333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320333342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321475802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321171494 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320424877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323036671 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322123149 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322379785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322677899 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320755338 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32403839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322893757 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323647707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32057734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321914648 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322363926 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321990208 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322116531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322576569 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323607118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3216488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323671638 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322581512 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323340607 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322334283 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321321853 seconds)
  done (took 88.378911667 seconds)
done (took 1776.584087968 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.481266936 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.43366514 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312874948 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370714354 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313614757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.339549188 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.335621037 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312149337 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313902427 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314383467 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313197986 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511677208 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.369172071 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314072351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312179225 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.413447283 seconds)
  done (took 26.953865269 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343362489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323221407 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447840394 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323867732 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342881822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527132229 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382950647 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318572239 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.515521178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343161443 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.316216922 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340808339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319880632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311206229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339080484 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528605524 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.621052518 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.323384313 seconds)
  done (took 29.164315421 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.83807617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.337452145 seconds)
  done (took 5.370785212 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340849011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319612774 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322106165 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318248452 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.311755938 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311483042 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31848378 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.317673399 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.322131904 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465762237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326933365 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333847482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.319054659 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319850318 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.328322654 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366785143 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.490200289 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.329024688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.327741194 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325406614 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318670134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416013639 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373966326 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332750419 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463768643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32820108 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326383782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.32703936 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.435931087 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330537525 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33195921 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.321132952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.32251848 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.32701577 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.885300969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.315662273 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349216761 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330165169 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.329880495 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459297875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323022783 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328335572 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.326943607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.877641704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43425874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452693104 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.31527706 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326928871 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323043502 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391568166 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323080479 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323890057 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.383160617 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166016435 seconds)
  done (took 84.941820657 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.335645929 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.316334353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505081055 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.342079697 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.32245975 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319064153 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.3339122 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.641179569 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.33627631 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317241427 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.661419241 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982488419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327962071 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.393667466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.369144886 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.385545136 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319032682 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336240118 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339187332 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.321820137 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925981892 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33567147 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317936055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.39885593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359481254 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.910288453 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318801441 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322390745 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.337222581 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.317524421 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950012769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318384356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.381742921 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321280102 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.626477975 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.757830555 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719257349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320207349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353757912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319965348 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.344251166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909310388 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.737476819 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320667794 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31975092 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.910830402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317848673 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.328284157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.325056576 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593327026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318501965 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.320218968 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.33329259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.320388555 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.319815293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386325326 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.376656504 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913309542 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320522023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321190403 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323605312 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.32115814 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32818615 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322254877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.31988322 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742401509 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.572677112 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322948534 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741325602 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941063708 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319215339 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02561339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320656896 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.349484992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.353783244 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328390083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.321035169 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905325784 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.357031259 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321643842 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.720411858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.323939918 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.646669429 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.340676251 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322180585 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.950598141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.332310259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.37579579 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322437321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32358527 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321703256 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325754753 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.634911705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.370849178 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.32336579 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.323931244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331509314 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324402006 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324287571 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.328716125 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015685835 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.329612913 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322625488 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.34536832 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321452362 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.32451333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.323675486 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.325965073 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.612438225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.325624894 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.33125955 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325528971 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.323993164 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.33574071 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429449113 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.332844671 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.67603194 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323718912 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340296838 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.32802646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325341587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366050266 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324253496 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.350880034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.326941919 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.645660282 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343175289 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.324650996 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325827228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32854198 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324854633 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323629171 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.39029782 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324956924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.18181299 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36679658 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.372051428 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.324418723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338218582 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32563577 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333247941 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326573427 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64281912 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.637014418 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625394304 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327998655 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326257133 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.183816927 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.372062754 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513052896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344849194 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326541341 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.629014941 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.554727107 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328427316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.331484264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.330407035 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610527544 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.327860765 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659589669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.986064876 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327167632 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333442613 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.171444617 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170296291 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.332333192 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.327930512 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.648525345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.346590753 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.327050751 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.326647976 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.328327475 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.327982832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329614461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.336610561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.327927025 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.328316295 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.670494962 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527970551 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347568902 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336018975 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915930298 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361963586 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329337801 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.341689862 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.335492234 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327653593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387225961 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.333258923 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.367043904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.329419835 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32706378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949203893 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.330563045 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.334047386 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525688709 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128228262 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.333270365 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.329203285 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328761541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.39990559 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94668588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.371346878 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.685301046 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.333393227 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373258178 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330575177 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374833688 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950123461 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350804737 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330687066 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.129724429 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.333387944 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.76321246 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.330923822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.331537884 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061818506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.335081142 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.334217299 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33154122 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329614693 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642952785 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.333211202 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.365829892 seconds)
  done (took 499.376716022 seconds)
done (took 647.001187922 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.330871119 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336172928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.334479508 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335854081 seconds)
  done (took 10.550925097 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351224287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.337902503 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346715998 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336312189 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.347644667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.337189991 seconds)
  done (took 9.272196662 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.331434192 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336842656 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.335747788 seconds)
  done (took 8.218222347 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.569678817 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.356821296 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.736252314 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343544938 seconds)
  done (took 9.223518067 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.347748861 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.350182539 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349730885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351369721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352820611 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353248458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351218231 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352141447 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.3516106 seconds)
  done (took 13.370015494 seconds)
done (took 51.847428141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.727027045 seconds)
    (2/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.646135128 seconds)
    (3/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.734461056 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.407767291 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.371978088 seconds)
    (6/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.401602466 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.485981374 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.370839147 seconds)
    (9/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.425360721 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.314186338 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457473646 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.45030996 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.808992379 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.364473504 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.451732142 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.452008898 seconds)
    (17/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.316888937 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.511161311 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.461843922 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.734248583 seconds)
    (21/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.361588767 seconds)
    (22/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.524165713 seconds)
    (23/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.454292114 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.599182557 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.598859147 seconds)
    (26/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.424181631 seconds)
    (27/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.334175579 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.670656772 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418335675 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.423624809 seconds)
    (31/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.427436438 seconds)
    (32/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.323487671 seconds)
    (33/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.410960354 seconds)
    (34/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.436401731 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317284185 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.398963305 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318176724 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.431160513 seconds)
    (39/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.451644936 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.367893507 seconds)
    (41/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.41421971 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.325563084 seconds)
    (43/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.527885473 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.341259635 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.442438223 seconds)
    (46/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.40495731 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.492805565 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.465137866 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.359325307 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.445401793 seconds)
    (51/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.413715879 seconds)
    (52/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.552656141 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.577925194 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.509245632 seconds)
    (55/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.650307295 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.731176505 seconds)
    (57/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.428876527 seconds)
    (58/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.45808728 seconds)
    (59/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.3768541 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.560488169 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.402592523 seconds)
    (62/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.380457787 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.328261533 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379822546 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.463191214 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.499719327 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.606092608 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.345559997 seconds)
    (69/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.577397506 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.537124105 seconds)
    (71/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320121761 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392642099 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421394988 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37806271 seconds)
    (75/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.330487408 seconds)
    (76/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.531063825 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.450845549 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.459447697 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.645929526 seconds)
    (80/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380892752 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.446536805 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383603736 seconds)
    (83/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.425066141 seconds)
    (84/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.321698126 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.45665696 seconds)
    (86/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408612025 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.653914621 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.474823452 seconds)
    (89/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32364005 seconds)
    (90/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.504070807 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.326787335 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.567659893 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.518260122 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338083765 seconds)
    (95/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.528755326 seconds)
    (96/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.439683274 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.510468174 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.467199003 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.428355782 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.612309907 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.683226138 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.342027327 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.347527283 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.549653577 seconds)
    (105/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.664492872 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.461493259 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.480917928 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380453635 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.359339169 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.32227149 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.349077825 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.516448218 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.4134934 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.702334112 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.427229833 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.321823443 seconds)
    (117/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.380769503 seconds)
    (118/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.409035037 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.478538675 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439306496 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.451805457 seconds)
    (122/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.324253212 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.505216487 seconds)
    (124/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.372635046 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.509025152 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.384304899 seconds)
    (127/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.508666234 seconds)
    (128/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.426463792 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.639143516 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.510989755 seconds)
    (131/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.411078886 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.693148847 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.388215414 seconds)
    (134/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.456929977 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.61317077 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.381669417 seconds)
    (137/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.449212205 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.338991885 seconds)
    (139/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.326948979 seconds)
    (140/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.462976364 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.482756389 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.434905715 seconds)
    (143/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.555905479 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.351266131 seconds)
    (145/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.671927246 seconds)
    (146/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.392547254 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.585593111 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.329126771 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.351514335 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.414831857 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.921049293 seconds)
    (152/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.925043855 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.452143236 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.541637842 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.618805169 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.578910335 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.327246458 seconds)
    (158/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.749672302 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.453074715 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410058852 seconds)
    (161/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.571671684 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.328698941 seconds)
    (163/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.374632124 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.328825111 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389860299 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.627268442 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.46399126 seconds)
    (168/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325370102 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.343498772 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.520536652 seconds)
    (171/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.470728177 seconds)
    (172/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.624587616 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.447297351 seconds)
    (174/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.327087557 seconds)
    (175/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.454063042 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.329670458 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.513294116 seconds)
    (178/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.352591478 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.341021723 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.53319816 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.51128993 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.548098975 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34963969 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.359168766 seconds)
    (185/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.599195835 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.377229107 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.596154483 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.583789756 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.369584369 seconds)
    (190/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.333071198 seconds)
    (191/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.331999008 seconds)
    (192/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.449942425 seconds)
  done (took 330.072615355 seconds)
done (took 331.287107429 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379269446 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.448919821 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359518342 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359700044 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363154446 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.363338497 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.379042654 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359460316 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374871472 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.373146351 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362999885 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368060874 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373493287 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371639153 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391140295 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359873657 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359095889 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36957831 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372906468 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.377762802 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360222104 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359326266 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.388646932 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358926482 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369101886 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368174606 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363813133 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366235593 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.366523391 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375220697 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351894099 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366236423 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376702207 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371521459 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362538217 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.370457736 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361371605 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.449145907 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381657888 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37404814 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368427576 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376602023 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363657604 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365666008 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372915326 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387307944 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368319432 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.377193121 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352129974 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.354170478 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38363697 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373286178 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.370290744 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.353190276 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357497472 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395670431 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372811139 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380891449 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.36740294 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363156803 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394686452 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381466787 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375160035 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371892963 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369639613 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376216555 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372344803 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376996915 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370487953 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36258437 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363350128 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.371224931 seconds)
done (took 108.032120939 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.483584481 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356295023 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.524050849 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.370457116 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.528137581 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482920037 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.369056948 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371881546 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36942843 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.159050781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371264574 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371335889 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.358240328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.370614644 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.481605571 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368779788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.369445435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.089182556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372147648 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496558628 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.359239449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369460068 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.371949838 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.171857698 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.360421959 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.35566677 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.497483099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.370658536 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.075869499 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.35490523 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357060131 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.068340624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.499896823 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390162618 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380660103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.379854602 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.53016406 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375682599 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.487012156 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.486736656 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.522328777 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.410288944 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35545205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.360372544 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372296796 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37267044 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372088235 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.400675315 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360269688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.372195332 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.066367571 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.382185302 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382513788 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.373246798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373298377 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392744548 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374097444 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.374074287 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.501310829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.37621317 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.487990476 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.174916672 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.188986473 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.375466271 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.360659561 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374756701 seconds)
  done (took 110.59988454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434523843 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443726583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.485341473 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365731177 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416235583 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487064695 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366820935 seconds)
  done (took 11.235928757 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371901865 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376303862 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416559233 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41566844 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375616049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.537235039 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375255671 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376875996 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376798673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41686057 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373665713 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376214623 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.383292607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.365162815 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412983559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377517912 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48349402 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36785951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375501413 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521037831 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376547476 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383387957 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419306475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379282124 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.37584693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376395447 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.150184047 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376257708 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375726057 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.376888216 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376010039 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43479292 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378132766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.367408631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377148119 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481532236 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377292195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378015358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376066695 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.370289689 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376642692 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.378808746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379111564 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.376460984 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377679659 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393344591 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.378469894 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377780455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378131179 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378683113 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417707681 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37882627 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378954696 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378926879 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422630409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388126465 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.380837606 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.376621906 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380811637 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377189742 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526133848 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415393141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378210835 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416343371 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379043732 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.380606659 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.378583381 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.379288597 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459110237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379138692 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417059535 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.378775559 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.552520846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393466173 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381112644 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373470279 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373808719 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380419486 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368158038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380675054 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379177656 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372640377 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375635764 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378363352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378503727 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529839568 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478178341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380517066 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385607725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378860039 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381964588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422688482 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380776332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382014626 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420912018 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49047548 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.423058058 seconds)
  done (took 141.529813748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384562854 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384184359 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374583362 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397948947 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371991907 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37176055 seconds)
  done (took 9.526186661 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374585814 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383779304 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.38414443 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.38259574 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.381190261 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382980947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38178616 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374737771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.386587848 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380980251 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383049219 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384488577 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381917098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383323998 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.381100658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383298821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.382178192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383291857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.384267603 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384379893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.369010568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.384227628 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38433153 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377350723 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388572707 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383009694 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398316295 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.383840789 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381890392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379664157 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385179624 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385938331 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375419306 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379991077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3885025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376266856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3879396 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386350493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382304383 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.385173115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38611365 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386515015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.384793535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386434509 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378697963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379938435 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389515878 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.398316929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384062339 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386354052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385962773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.385616478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.384923436 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386703805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377335092 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382032554 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.389126747 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.386086002 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386693768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376841459 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389161351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386158419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378414954 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390214503 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38630495 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386207978 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377479041 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390022239 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387318563 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390190129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.387267207 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385869183 seconds)
  done (took 101.890600961 seconds)
done (took 376.013416794 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.698332284 seconds)
  done (took 3.943110787 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.557846562 seconds)
  done (took 3.807352378 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.884244498 seconds)
  done (took 27.140666541 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.382032379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.400448981 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.409907342 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.37370587 seconds)
  done (took 10.814220245 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.741658973 seconds)
  done (took 3.991415837 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.394716981 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.388449117 seconds)
  done (took 6.03386394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.63929721 seconds)
  done (took 3.88688704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.879533671 seconds)
  done (took 4.137386566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.382033246 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383934617 seconds)
  done (took 6.026080429 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.363366675 seconds)
  done (took 3.615483757 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.182529224 seconds)
  done (took 23.434411633 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.403960458 seconds)
  done (took 3.658901842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.42375091 seconds)
  done (took 3.675966447 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.448557909 seconds)
  done (took 6.698793887 seconds)
done (took 112.11349808 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.374324452 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.372759197 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.376537868 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.372006606 seconds)
  done (took 10.74331218 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.45456669 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.452116715 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.45962124 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.444795603 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.447206783 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4531018 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.414991948 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.414570204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.446772816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.441564209 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.45770091 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448164187 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.456051721 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41572937 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445005939 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.456941235 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445355672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.463681748 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431438289 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444739583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.391804625 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44910132 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.440354513 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39214292 seconds)
  done (took 35.818371736 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880704049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454638345 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537429308 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433925952 seconds)
  done (took 7.560255311 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.496621633 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.497657523 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.515378079 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.550546885 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.580672484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.514244195 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415458616 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415239639 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400333158 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.496667272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576055107 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.494572305 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.71217793 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395660142 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.711153364 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.392965402 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393293603 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.496776773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.543790979 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.579817671 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.392752333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.545593011 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.504566137 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.500047687 seconds)
  done (took 37.37703682 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401223725 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.409147702 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.394961749 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.409077306 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.395094733 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.396021939 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.395970455 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40127645 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.393775755 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.393206254 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.394059843 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408558438 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394422197 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395379494 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401688823 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.399093241 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.398531723 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403173082 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.404756803 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.395339826 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393086035 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.40342375 seconds)
  done (took 32.03457682 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.383948514 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.380968931 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72997555 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632479012 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.380704874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.377237474 seconds)
  done (took 14.140333617 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467088674 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.637469997 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.39072014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.819758324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.917380306 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393119846 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389898353 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.685372144 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.027656705 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037178125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.454835043 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470981324 seconds)
  done (took 20.94475022 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474818123 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391003248 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392315999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472918669 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398203217 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391529567 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456184789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199427034 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402287687 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670461682 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390570495 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478588788 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63850012 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412637052 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395183726 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381278875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623835707 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980643645 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399726535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402624433 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429069928 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396357981 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401252519 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636403545 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393321961 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393588657 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656748068 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394754619 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727631363 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702575895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703233699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40169385 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673253957 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115054502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505510515 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628554807 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397589437 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396343322 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.378363059 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.40833082 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397910977 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400687866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700515506 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400436404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396823314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410628269 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209229915 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403936667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.394488319 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394355201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703886896 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483588869 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403350297 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396948508 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405729945 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399034504 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.402752714 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534479153 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042073128 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397451193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414260349 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.400939818 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404523578 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394919063 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131555534 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.408173843 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404118721 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405082134 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399233433 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409718112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423724848 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396938126 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416263744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3984931 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362064716 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403807666 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402461211 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048560718 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417638082 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.404068376 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625930025 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401970351 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400248813 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.40009455 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400054023 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278957525 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412379219 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.368639822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444942194 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207311673 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642996405 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41944769 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428900693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62537566 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.368266853 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400405785 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.40141143 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400703127 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416834893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210611128 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403724541 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.402144178 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649325902 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.61584208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417431785 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380271957 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956234573 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414273458 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.428678666 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401756119 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640658648 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.106834545 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718993374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407450341 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43525893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404527501 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359151 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407029047 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40975968 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422278557 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71006873 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.36865325 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408073437 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476183408 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402661689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406630764 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420100243 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408153994 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40435482 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.619631456 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418378155 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707560559 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.409605916 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406073348 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.415961405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403073162 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.406317824 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623761306 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405499432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679281573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403435255 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402980011 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402496583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621464861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.405462055 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.411592826 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747863551 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406192842 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425198952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710398769 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436942165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515637606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436694248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.406610929 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654399897 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411762776 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.411006259 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422289268 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409312631 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409347922 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.413713613 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399806008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108749012 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392811354 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410225305 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407364858 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.419331337 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481529247 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414703682 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643367906 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418550095 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393679615 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.434295544 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.42066943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628074866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713771947 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.413596881 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580927594 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.955504508 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104654456 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422929697 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.406487883 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.408313624 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.406745059 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410867091 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406839337 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408744399 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642693115 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718784956 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405768623 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10936818 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409570439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416647909 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419148662 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715929357 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.42142432 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409610855 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.407315996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408743736 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423368426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.718187254 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634941503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425232098 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41144263 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.96906655 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414848048 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410379381 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409784537 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434520952 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420574526 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414053342 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752268278 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423879872 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719254162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422307184 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428505122 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.409778087 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415309082 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421036155 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.422500693 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420453591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.647392972 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424927025 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415360947 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050189854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340971451 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046819849 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434001184 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.413215501 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412531512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224178676 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413618658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413580483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683081876 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231260851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413724056 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961574755 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422231316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283994184 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720226369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641321142 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430864632 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.427187521 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724536957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626284654 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440448217 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418681265 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413859627 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.377860411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064491816 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422249406 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594712076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224871628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41918163 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41831094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.470876603 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434745104 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881501942 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415518588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41880581 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422678988 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420989419 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417188353 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422730721 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415330311 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194209129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428662121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.971221917 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417508862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654596765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723741377 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.701084892 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.417308778 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410829097 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655810473 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725457735 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417619556 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423565292 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074899772 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.275773486 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.422870316 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417367317 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366741899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41879742 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755082586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.425056215 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417300047 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412451806 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418224891 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416297963 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.415841586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425240814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401937944 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001125812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.435467778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405492292 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42831603 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416316861 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665479971 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433813378 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118744728 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645091296 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415611842 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450797338 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.421928513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426897341 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.389261231 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417693429 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41580446 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408925465 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640648114 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418143554 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.388994912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475559496 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6324613 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415715745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422339491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666701402 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418611028 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.434417576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352649774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446030457 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428182288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418941436 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414976747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45611188 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493230399 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656322171 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.72710259 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.734938978 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888706017 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428220335 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42178359 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.433883831 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500268902 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421731287 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.424390632 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.415617729 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120939957 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404430309 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133613793 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733769922 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422734644 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421980788 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417883204 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65865031 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417240725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695645546 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419367569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.404882464 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462565991 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430845032 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424923123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634620932 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693175655 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419119827 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430599387 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425427405 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.421790488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738951076 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.637250122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011801876 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078287538 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425704996 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428370393 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239740799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69869806 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421224598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422439994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422695521 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.421469958 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.439115469 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427904984 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422543387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646887117 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734320051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163753174 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.734209735 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.448273347 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.343151165 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419112488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671592136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258838114 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.662405717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130035593 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250269951 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675382512 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499911425 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661431823 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.419273311 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661734381 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.427732283 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421249155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423194311 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423133651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.421779141 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735252667 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136773493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68155991 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.431245812 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.431967919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45271549 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.673635025 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649232658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.328951242 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645602748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743092524 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438785032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42736851 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141884199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743539895 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429773433 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.427386652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682705996 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425842626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463733685 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.299391079 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.426335053 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10059929 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.641545109 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448693684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439270297 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279374171 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140917911 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.440269138 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024396754 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433165258 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44110081 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704480034 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.433850625 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441726667 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709569731 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432694138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439716573 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676835912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131688804 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30969649 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.432952495 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434506351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.431866127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425873328 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506672455 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432270589 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434380217 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.903656045 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434831146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431664409 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438730907 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.436737945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444563252 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.432442001 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430961397 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432230637 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.403669602 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.417401133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447585847 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56716128 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089496582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436481826 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.047315923 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770310163 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67826771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441876535 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.400829147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.433741543 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429987063 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429215603 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426345158 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422668133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113346785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.447428853 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.743963719 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437517939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642576248 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644322726 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444405753 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679354778 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44458192 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454073931 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398754638 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434182238 seconds)
  done (took 1008.540687401 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.455917907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.474348518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.479248187 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.462520842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.474104924 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.566354434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.486691859 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.545391517 seconds)
  done (took 21.231922836 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.434867995 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.431420538 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.430208048 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.430408536 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.436383994 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.976462848 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.437590858 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.431374306 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.44293663 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.434220787 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.434502657 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.13972519 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.431721546 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.434123783 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417519225 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428503896 seconds)
  done (took 33.473089546 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.591314586 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.635152998 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.972982303 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.493187507 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.466293969 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.460141025 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.853247517 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.436316584 seconds)
  done (took 28.200332463 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.437180206 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439460669 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435436271 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.43758811 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439080095 seconds)
  done (took 8.478948547 seconds)
done (took 1259.793033062 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.439843639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.440119529 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.437755847 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.438168089 seconds)
  done (took 7.045602616 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.403062299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.404861027 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.401293904 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418624056 seconds)
  done (took 9.919460647 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.279259717 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052723344 seconds)
  done (took 5.623410171 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.998531054 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.993112365 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.998079145 seconds)
  done (took 7.282981046 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.754839659 seconds)
  done (took 3.047967885 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.425240261 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.44247225 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.430920076 seconds)
  done (took 8.593145469 seconds)
done (took 42.803775305 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429359585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.192027127 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.606330401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427206324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.637503756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.595571911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.672118103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.4264074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.44645623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424064189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421894815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.630283272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.658961036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.194910722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.660090907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.195895362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.647495753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424781001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.457720531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423414829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.66863121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425646787 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.446527448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43664683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.607541142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.611505159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42676234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.192352359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434777017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.436612332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.62027656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.443645622 seconds)
  done (took 84.61456805 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427562723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.432330948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.423720897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.443745348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.458495233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425164953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.446668179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426561583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.440702164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431052383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425366169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.449034822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.444187564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422911333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.449171245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424188783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.446939301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.426028016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438330106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424415684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.428421108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42707173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.438007122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43421117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428110566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44732438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445841615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426425364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.426784627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.441696469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429927623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432757921 seconds)
  done (took 79.20965042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432696769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425708099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424950205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.452814729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427200898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431173037 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.449779627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427571672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.426646816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.44773692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433844941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425957341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429292704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428713229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43021052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424932159 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428051117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.445618874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426951868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426021308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429772557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426994713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424573796 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.435818593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430113541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.426626921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433258891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.440389091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.44057533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.43136426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42822061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.43144588 seconds)
  done (took 79.120498335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.694759464 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.446487295 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.449247154 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.441910089 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.450694264 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.445513085 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.439487074 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.681943377 seconds)
  done (took 15.345620449 seconds)
done (took 259.585618328 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.452904371 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047097183 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.472269151 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.439824595 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456993348 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.46870375 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.686596352 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.470978413 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671243917 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.445890795 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456881623 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.442406546 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.442338564 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.597031043 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.34615797 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.443006145 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.429097152 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.434107386 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.12144898 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.703602117 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.472862683 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.432757421 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.363845809 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.447626714 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.42939075 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.514444744 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519081874 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.611481153 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573770133 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.512630157 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.020210922 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.44648415 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.468200401 seconds)
  done (took 67.140265253 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.441587021 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.450289356 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.449264613 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.450729179 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.448970031 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.450385273 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.438756128 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.449667137 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.450715008 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.452213489 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.449980749 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.451686829 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.45351166 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.453322781 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.450715514 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.427611768 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.441484745 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.45025409 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.441713565 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.424979556 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.446941416 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.450386296 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.454640972 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.452919165 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.450794251 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.454108756 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.456395596 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.451095509 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.449810685 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.452820537 seconds)
  done (took 44.748640552 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451219614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.126400285 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.298514156 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450753353 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440743133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44645026 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.785826574 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.456776453 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.446442639 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444540383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.006924163 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.461297382 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482883131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.31297108 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.451527798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.454400137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.454355966 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.447404624 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135684176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.458593667 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.78532516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.456860662 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.787603009 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.456931969 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446232751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442811979 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452620619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.357205865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.472481676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.007249277 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.364879963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.779162497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.270266268 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.368540457 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.380679642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.458652707 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.458478968 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011238272 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.450912237 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.448219158 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.787556792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.451021885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.312572874 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.189208807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470982188 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.454663461 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41218738 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.017424628 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732931172 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452596522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.366653404 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.455227958 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457225682 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451611018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.73467052 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452278143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449181417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.440569987 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456046735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.791310732 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.460171635 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449155796 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128967537 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452636396 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.132033991 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.455574208 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459280421 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.451402841 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.318740442 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455817785 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.19393667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.472204187 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459623564 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017377412 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.139538275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.442822831 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.473679779 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151826103 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.301854251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.813696125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.455799682 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350670556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.820006718 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.456973426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.465011481 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461647663 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.46122656 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.570688023 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.789023776 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.116199219 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.194109788 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.446018993 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.802434966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459255628 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.451452059 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.430225313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.461411956 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.460913932 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.309623614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.21143289 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.476051481 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46106134 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.188509248 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.476399605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.799510675 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.45841091 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.360520755 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.453906085 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.523043508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.460841694 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4617532 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453533627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.799690251 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456743507 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.461503781 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.178691575 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.057137088 seconds)
  done (took 206.244411049 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.44717309 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.441743298 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.45094858 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.442730815 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.445505861 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456888635 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.446362678 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.45003209 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452450327 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.448164471 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.449025104 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456994764 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.458298716 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.448119885 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.466342769 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.445038143 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.448707564 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.467139302 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.445901703 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.447471193 seconds)
  done (took 46.325620473 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.462846959 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12902884 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.08263031 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.466267427 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461904391 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453195695 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522261616 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462487049 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.463485363 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.817633597 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.660312657 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.464516969 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.460317462 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.46212036 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.082635455 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.435488518 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.818498974 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.135061515 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463583023 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.117289314 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4311538 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460436668 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.45199927 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.123461524 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.818540546 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.792190525 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518390434 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.118874311 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460084807 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.460529471 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131667764 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.465816492 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.453791823 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.102851582 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45982293 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.474909144 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.463337543 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.525546037 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.524809602 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.814350473 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.121097581 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.806031635 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.473278637 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.627399179 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.464379119 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.434678693 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.129679956 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461715022 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.433352524 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.465751069 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467740963 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.098042116 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457678619 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.093623058 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.465413056 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460588294 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.120152241 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.097498511 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.092711134 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661281551 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.457318628 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.803655468 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.465865362 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133525362 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.462581507 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.467225592 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.463548723 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.665884303 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.167570038 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.813964782 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.839841956 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.839464237 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.470944894 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.534075205 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.46830101 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835164469 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.537441656 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870044066 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.837438907 seconds)
  done (took 134.351223163 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.792650442 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.584822075 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.928776757 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.086904029 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.018044115 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609700182 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.587775476 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.735255788 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.46669028 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.575531895 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.26724905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.56149875 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.289278956 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535372233 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.578608551 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.597929454 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.917032909 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.466749312 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171681534 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.232469612 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.468878965 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580852853 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.007154604 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.698724544 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.466872411 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.083630874 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.474257886 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.036919826 seconds)
  done (took 56.137738067 seconds)
done (took 556.245309769 seconds)
SAVING RESULT...
DONE!
