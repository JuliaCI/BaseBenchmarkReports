cset: moving following pidspec: 17593
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.156506564 seconds)
loading group "string"... done (took 0.644723188 seconds)
loading group "linalg"... done (took 9.794400043 seconds)
loading group "parallel"... done (took 0.173299762 seconds)
loading group "find"... done (took 2.459776135 seconds)
loading group "tuple"... done (took 2.376715713 seconds)
loading group "dates"... done (took 1.436368828 seconds)
loading group "micro"... done (took 0.639459529 seconds)
loading group "io"... done (took 0.680133556 seconds)
loading group "scalar"... done (took 55.531315401 seconds)
loading group "sparse"... done (took 14.258920216 seconds)
loading group "broadcast"... done (took 1.364125145 seconds)
loading group "union"... done (took 2.668910411 seconds)
loading group "simd"... done (took 3.795542645 seconds)
loading group "random"... done (took 14.40116533 seconds)
loading group "problem"... done (took 2.230001105 seconds)
loading group "array"... done (took 24.22451626 seconds)
loading group "misc"... done (took 1.549075898 seconds)
loading group "sort"... done (took 3.768636222 seconds)
loading group "collection"... done (took 20.872502014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.936961258 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.272604498 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.2431254 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.590296852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.320633581 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.209539984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.208753362 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.214647966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.679927175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.220358678 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.199990376 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413998316 seconds)
done (took 7.305342181 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.299290294 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.103224369 seconds)
    (2/2) benchmarking "String"...
    done (took 0.246743947 seconds)
  done (took 0.999987708 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097400654 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147858327 seconds)
  done (took 0.901437955 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138382961 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.207199673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.15253916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.153904976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.138344478 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.153027561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.13836131 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.153702995 seconds)
  done (took 1.754818962 seconds)
done (took 4.751157114 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.514901371 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.937493168 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.547766026 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.225476648 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.357292223 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.368926035 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319430145 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273352987 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13849324 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.1176262 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.247645318 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.501450499 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.454077645 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.995906393 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099125803 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.159317746 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.208616264 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.887034169 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.126279536 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154931644 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.551260464 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.258787658 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16386169 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.153676455 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.232778624 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.174260218 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173491615 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147847781 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.732472264 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178481355 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239351596 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126611841 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171525234 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205708212 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.286148748 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1576741 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.733555713 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242283254 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127026418 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146380905 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736009027 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164769416 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.258701543 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.151178093 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117481839 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182948334 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.143930314 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.138859488 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.140353323 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14772982 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214075617 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.562039698 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.15251758 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.248767808 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.156989447 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.775947835 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143371654 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.331792891 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.183388405 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.154802925 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124688342 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.150983236 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.213939636 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139128377 seconds)
  done (took 23.253206571 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.258766425 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.260698585 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.126043821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.209010238 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.193067219 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.127127618 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.151453128 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.124479726 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.17677213 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.230058096 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.189056513 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.264536992 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.140489095 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.137454281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.238761088 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.29942404 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.171900631 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150864436 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.15201982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.147132258 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.190197161 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.143427597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.158059485 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.158235905 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.204902942 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.266944002 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155782379 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.172228466 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.152706081 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144894054 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.191105168 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.212393559 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123853948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151266163 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.224531764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.170013729 seconds)
  done (took 7.255468101 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.286711041 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.149734404 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.317139351 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233379678 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.234349773 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.174469044 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.248606055 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.231083925 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.341521083 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365187081 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.229298502 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.176331711 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.14314872 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14270872 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.129236755 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.142917825 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.878624998 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.219260284 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208897863 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.237849659 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160851949 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.128425479 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.358030655 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.149689426 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.132155423 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.161393219 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.15388577 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.715724674 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.276941223 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.159410286 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.530764631 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131605213 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.163515765 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177167082 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.243593546 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.172314231 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.155923669 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.186182614 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141667666 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.150683198 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.259915524 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163763703 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.126284425 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.143035717 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164431245 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.180285845 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.155933795 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169459189 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181410918 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.135294999 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174617946 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.211528086 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.244257667 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.250120564 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.135823417 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326822496 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.171436744 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144508111 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.156337199 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.917398365 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168858764 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.147860981 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125623656 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159728412 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.142572878 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.877851296 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165606534 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.343352881 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.130543626 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.209062688 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156547771 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.161202692 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131027765 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145616213 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.150953344 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.147908334 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125115631 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.147656835 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126863758 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.154102487 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.148167166 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152276278 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.127146615 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214024004 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.14732034 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.171124205 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.174111457 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.138153811 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.150281401 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173365412 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130347023 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.147905191 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.254162488 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140400745 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.16400626 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15868226 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.186879282 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.137563233 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.368568657 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.141701469 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.162663701 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.172100446 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.150063077 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.178175451 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.163268038 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132754033 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152329915 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.126615542 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.164412388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196506553 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.149141871 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.129077447 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.154891833 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.14075966 seconds)
  done (took 34.258279493 seconds)
done (took 65.425882232 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.499945419 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107415824 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.130109631 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11381608 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.135582605 seconds)
  done (took 1.720007831 seconds)
done (took 2.440890005 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.239691094 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.339357609 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.258629816 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.149761433 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216570417 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213148334 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197915461 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210459375 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.220747345 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.233475221 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.127194596 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.236949057 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.226200204 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.21780563 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.130377334 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.256831752 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.211705553 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.202525614 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.246170061 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153373205 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16536209 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153744062 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170040548 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135739119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168922738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.152127306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172618739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.152071922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1620968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135766357 seconds)
  done (took 2.455258661 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.196142889 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149800264 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.164073937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.143170441 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167214071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135823068 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.148071134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16840696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172782656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149833928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161834896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136229125 seconds)
  done (took 2.430796053 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.126391142 seconds)
done (took 10.09419459 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260579505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.973113551 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.202027017 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.315890589 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.379205344 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.323246483 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.683351982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.254613733 seconds)
  done (took 16.239240968 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.243813336 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.141306167 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.15536864 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141873977 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.140347456 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.155767992 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.141109913 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153012824 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.138778472 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157460666 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.136766135 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.158569746 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.140990206 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.154241402 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14103693 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.154301814 seconds)
  done (took 3.251462075 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.189025714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.180494671 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.143400218 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.163394032 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.140416319 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.163390331 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.14975822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.162462279 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140254358 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.158201054 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.148320258 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.160866616 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.160095778 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.140315329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.163168654 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.163950877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.156310938 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.145031083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.178131102 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.144897197 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.161584095 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.143298041 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.159197549 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.144044295 seconds)
  done (took 4.565413312 seconds)
done (took 24.790037757 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.204125469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153923135 seconds)
  done (took 1.100960604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.218234247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.230726407 seconds)
  done (took 1.200309062 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.16454788 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.158680863 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.172938961 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.17221792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.142217666 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159671562 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.185051046 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.144342518 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.15858092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.143488707 seconds)
  done (took 2.353341092 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145541134 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.161640108 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157051884 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.230748966 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.169517646 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.145237743 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.163937607 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.141237653 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158747072 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.138998472 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.157006279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.154868716 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.160884216 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.16134873 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161735511 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.143281489 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.164689099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.157258266 seconds)
  done (took 3.629805787 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.143684612 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.14279693 seconds)
  done (took 1.03850329 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145179704 seconds)
    (2/7) benchmarking "second"...
    done (took 0.158230666 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144387425 seconds)
    (4/7) benchmarking "year"...
    done (took 0.160195371 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.142900155 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.157257219 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.141679539 seconds)
  done (took 1.807033912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.60588396 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.282951414 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.410827242 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107295558 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161197314 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.389036693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.160776591 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110159749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.1087954 seconds)
  done (took 3.124985866 seconds)
done (took 15.005766306 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.143094943 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.343692169 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.669873103 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.180540556 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.14160439 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.220753421 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.404229825 seconds)
done (took 2.86794927 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.364577087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.218888101 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.125180304 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.145455229 seconds)
  done (took 1.613035568 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.134702394 seconds)
    (2/2) benchmarking "read"...
    done (took 0.167363601 seconds)
  done (took 1.07048948 seconds)
done (took 3.447091771 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.16485602 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.159957492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145743603 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.163053346 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.146337184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.159799302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.145157356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.161225111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.146284524 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.159961612 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14599154 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.163904921 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.142932282 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.162953543 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142524898 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.163647766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.145075082 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.161959493 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143304257 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.165345537 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.145013553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160960482 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.144307247 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16361508 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.146062569 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164980477 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.142546688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.161883714 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.14548079 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.165447505 seconds)
  done (took 5.394018123 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.269839901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.136564852 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.160408177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.148164721 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.157511371 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.142231914 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.157354088 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.142543406 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.161893981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.14220719 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.162873784 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.142567641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.160285396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.145400054 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.161335112 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.145238581 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.168467792 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.143657235 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.159059542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.144053444 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.163644274 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.140572694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.157679549 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.139340974 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.155199833 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.1350743 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.154151446 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.138407684 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.13636371 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.154566792 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138642002 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.15847958 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138873874 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.168269792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.144784753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.160755079 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.147259019 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.157022622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.144969832 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.15383304 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.13469583 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.155702062 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.138615602 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165146629 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.14432827 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.159934025 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.143696835 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.162561384 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.144808289 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.162963949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.139692136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.157668653 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.141015069 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.15611678 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.142584263 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.15411897 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.143868644 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.140747438 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.163712299 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.142301057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.160621962 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.140646796 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.164846381 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.142694962 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.177187825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142520009 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.155884418 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.139188998 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.158020933 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.144010492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.161318349 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.14893095 seconds)
  done (took 11.745814325 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.145753521 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.142653616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.162476736 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143392257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.163692604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145729915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.163419944 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143148441 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.161953555 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14285839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.164480972 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.144357743 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16233426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.145604898 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16416075 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.145067609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.16249315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142241901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.157409333 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.141038187 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140914497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.160822476 seconds)
  done (took 4.129586241 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.290349353 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.145784181 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.208887876 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.173391323 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.158103555 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.17310239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.147877673 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.172315767 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147347299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.174697774 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149922487 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1681783 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.182138106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153930888 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.172825888 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.156024101 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.170174294 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.155137605 seconds)
  done (took 3.886672251 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.144400695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.144613851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.165026642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142731349 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.166330789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.146855686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.16397553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.141282701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.164460299 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143027965 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160857746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138905373 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.15829939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.139419964 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157623885 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140385519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.156978622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140978542 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138424167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159376482 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138925627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.162141778 seconds)
  done (took 4.107320561 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159380952 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.160744463 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15980859 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.164168991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143150746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.161111619 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146252467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.161557277 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147458975 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.16040301 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.142123659 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15966814 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.156061117 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162720902 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.150272532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163576387 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.144462434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.159948832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142608847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159273675 seconds)
  done (took 3.895771592 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.261445537 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.157976513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177277851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165404483 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177466562 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156804647 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185582748 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156515574 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177030263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.187142374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156990424 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.176143628 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163814965 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.182485427 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158297853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18625057 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183464671 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.167395379 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.181250772 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158988653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187485783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176524333 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165799227 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.175516873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.15736226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176377526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158019047 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183214919 seconds)
  done (took 5.690514346 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.161002317 seconds)
    (2/2) benchmarking "in"...
    done (took 0.176201876 seconds)
  done (took 1.133760935 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.148194613 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148030137 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.167355849 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.144630962 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.165104375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.146078911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.168103849 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145211972 seconds)
  done (took 2.028927282 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.259229333 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.260263054 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.146359534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.176492626 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.262119855 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.238186993 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.179158118 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166493938 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.14405526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.159485993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.253717878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132513499 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.162844521 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137931436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.162465981 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167304585 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.145997127 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.169670319 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.148679311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.163081283 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148149286 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.164372369 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143708987 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.173478275 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.137870185 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.163873423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.145217209 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.176308384 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149548277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.166390503 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.143778619 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.164837441 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.146754137 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.165462033 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.14230839 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.259773676 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172770993 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138033684 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.166774909 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146532251 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.190255967 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.142316422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.166237341 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.142649495 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.167653652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.167103023 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.150522493 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.14324587 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.154552126 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.13701477 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.16428374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136682395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.164017435 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14441606 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.166024604 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173594003 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.152322582 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.164820401 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.14545062 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.15979092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.143509101 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.157826425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144663229 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164937175 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14400672 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.162584991 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142630498 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.162267143 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.144147241 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.164079315 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.142696917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.181883324 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.149915084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.167710782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.151075286 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.170423627 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147028474 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.175865241 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14473719 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.166430801 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.146472397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.183769318 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143485076 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.161262616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.138712542 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.17086216 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.143910828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.166581309 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135453678 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170681551 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144394758 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.163729619 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.135837665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.163542166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.138116726 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.167526471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134856884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166271912 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.143011831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.167547772 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147889058 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.165695512 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.149827014 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.168586941 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147554378 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.162166013 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.213363654 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140725507 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.159910837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143955038 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167953061 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.139826161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.163757487 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142831711 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159810057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.141160828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.166988554 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143779178 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.165260261 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.149241953 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164314959 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145528492 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.165553944 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.143555057 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.161193264 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148719401 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171446732 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.145738155 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.166952096 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.14566168 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.167975691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.15838774 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.16699016 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141946054 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17085804 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.141730593 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.163639384 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.146697426 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168272306 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144692003 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.159038031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142549761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.164451011 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142575183 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.169754408 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.145446708 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.163159644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.136557588 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.165087893 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.139514529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.165987378 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152127446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.160561479 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146409121 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.162847664 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153095725 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.165457353 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.151163775 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17080063 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.151818817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.176364187 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.137507639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162537638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.147749933 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.166643258 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139838593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.166674687 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.14414305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.172008047 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.137597875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.169234928 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.136641608 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.162361778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.150521027 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166480597 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.149223026 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.16149414 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177179235 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176164651 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1498465 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.169600757 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.151619001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.177666657 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.148720937 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.174478821 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15209916 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.173598612 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142045508 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.163927201 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149680487 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.164126318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.145956619 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.16489108 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164904769 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.138885539 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.145635628 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.158080018 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.148984238 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.167294109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.149048772 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.170491094 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146455216 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16312647 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176661082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.148261451 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.171276669 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.142324244 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.149274918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.175824663 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.170961614 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151675293 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.164719061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144594504 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.167044007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154936951 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.166254801 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.146704829 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.166542338 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.139452301 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.157711117 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.15266257 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.145734594 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.162179632 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.143858587 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.166034312 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168297868 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.144519705 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.157782495 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.149543388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16723649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141414631 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164375093 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142106129 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.162327346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153189871 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.1574372 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.141129818 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.165609956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.149905027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.164955403 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.145064816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.166748439 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.151462836 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.166599747 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.147425312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160899721 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153976773 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.16307353 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.144437432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159612406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.150960817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.157955282 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.147251547 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.164080293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.143455393 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15993633 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149527116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170343938 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.151378538 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16236499 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.150561954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.170283037 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.153647262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162584013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.151004887 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.161811778 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.140809177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.16193868 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.14000684 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.167523956 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142036847 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.169936414 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.143737203 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164290096 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.149609248 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167475418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143195584 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.170102637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155831269 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.159542844 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.138723856 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162748349 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14456126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.161652539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.142208656 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.16728489 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146458219 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.170786243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.148050042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.162333632 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.14562187 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.173688358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.142013241 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.171895113 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.150962284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.172422624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.142250072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.169909805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.142998073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16973583 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.139245431 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.166412013 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147005984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168929513 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.142346872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.164731423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.143027755 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.16066226 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.144357464 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.173378332 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.148423903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.172885253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.146245622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.165221918 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.143186714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.162488609 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.151957732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.165287778 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.15226636 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.167633538 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.139282587 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.16043388 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.152154265 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167733411 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.151635623 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.162258273 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.149881909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.172612593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.15185255 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.167481284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.154123928 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175211736 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.151727883 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172817996 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.139552313 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.164744693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151416532 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.167563347 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.149308792 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.175397724 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.144208142 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170148383 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.153495777 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.169965189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.144689698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.162789486 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.147682607 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.173427221 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.149938899 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170331017 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.149068886 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168607544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.142670587 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171333729 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.154894278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.167529963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153634272 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167737811 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.151085484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.165630839 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.154412723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.169056205 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141430135 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.163468344 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.145259883 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.174722358 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.14155145 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.177859768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.159774019 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.166218344 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145698416 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.171459094 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.143923679 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171145367 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153592716 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.166298243 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156913389 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.170430332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.145740809 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.173260999 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.152935719 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.163218451 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.146232772 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16813409 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155358443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.167613703 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.152909738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167952364 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152677097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.171317735 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.152304842 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.172676148 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.153041528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.162861423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.155807733 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.171704866 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.149753959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.165265919 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145210156 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.164572604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.146819997 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.175287863 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145517876 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178507127 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.152282214 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.166960407 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.146319933 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.175243513 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146123331 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175558917 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.144637946 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170857481 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.14193432 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.171428993 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.146726479 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.176890581 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.14532246 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.164160261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152097135 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.174234936 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.152567027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.171204662 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.153759566 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.162705467 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.141221241 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.172592338 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.145267355 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.178458797 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.150360531 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.168234522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146854917 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.171953989 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.149727769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176702778 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.142637761 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.167345582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.148838899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170935703 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.146717052 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.165040331 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.151833344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.168712096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150760652 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.170184351 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.143103812 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.169171373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.155143891 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.16859197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.144661413 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.167702331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155873034 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.169309519 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.166993652 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.143595914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174297583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.151395649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.175604314 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.147067236 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.168158185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.147084137 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.172979259 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.157644419 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.167510757 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150284614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.168450192 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155191522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174614593 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.143456581 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.16991225 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162807226 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.174566682 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.15069975 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.172826028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.148355318 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177175464 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.15715539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.173441469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.147925026 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.164376489 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.148403579 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.166400489 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.152200849 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174844999 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.152128912 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.169176192 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.155479199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.174681222 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.153236526 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.172197665 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.14479907 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177583407 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.149216112 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.173450269 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.14463194 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.163913092 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152728919 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175369856 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149110093 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.170305107 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.152638614 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.1715751 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.145360524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.16713089 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.153866075 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174770758 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.15596278 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168161398 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148751877 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.171997641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160422914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.170383678 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.149022722 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175765228 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.156432113 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168612294 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.150380296 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172739215 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.154773243 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.172445742 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.157069695 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.167462356 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.148737699 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.176258936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.157255472 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179209451 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147016391 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.163664318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.153892964 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.168524154 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.142878854 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.173315406 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156073478 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.176335343 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149651852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.168746389 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.156772171 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175944511 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149515521 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.168479665 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.150223293 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.176429 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.146489648 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.17480966 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.14722347 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17866434 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.155913891 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176461546 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.158419308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.164993118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.154129237 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.17271945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.156611605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.174726548 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.144558466 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.16901004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.153741967 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.178561463 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.156042538 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.174741495 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.1553025 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.176298327 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.149997845 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171245519 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.147419794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.179862048 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.156973174 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.173223913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.153276195 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.170490395 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152750081 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.172884904 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.156668317 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.17789853 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.152126538 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.182736505 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.159163396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.176601158 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.152862246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.17492364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.155706253 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.173562783 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.156582691 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.170422929 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145911641 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177908727 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.160137054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171914319 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157948438 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.180008086 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.149816538 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.174696517 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.160832533 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.175762295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.152389142 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.17414959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.15461638 seconds)
  done (took 95.919373059 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.203024071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181857972 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.153940246 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175973984 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170946739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176975299 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151614881 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176266549 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154444639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18477636 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153242392 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177327927 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16793183 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.197663194 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193020356 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163075696 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174339558 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154321091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174916447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15441384 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.190559288 seconds)
  done (took 4.52195995 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.159003739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.152814056 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.177100245 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152945566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17544759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152157617 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.176876054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152964773 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.174864555 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152922449 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.174239615 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154585789 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.174632402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.15450617 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174285012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154645433 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.173801221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154748659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152891789 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.175489006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15421577 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175793444 seconds)
  done (took 4.494293862 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.179276987 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.156874628 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.180012975 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.154609256 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.180099299 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153882627 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.180715439 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153701179 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184791376 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149546531 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.168229703 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.149072588 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.174431748 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.155596811 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.17146503 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154369281 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.185702036 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.159806984 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.181878296 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.154450786 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.167630744 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.155405097 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.177650734 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.147070798 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.18109803 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159490044 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.180215096 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.158397727 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.166458319 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.159457637 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.175336193 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.149424798 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.167916814 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.148241616 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144365006 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.180386137 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.15711111 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.177381425 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.15444939 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.170009678 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.154964049 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.181369293 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.145628784 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.18392744 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.155219389 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.171796706 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.157391942 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.177907819 seconds)
  done (took 8.83282525 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187418666 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.21494989 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.157631149 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.20960347 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.193548844 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165920191 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183190753 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183688024 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.181613039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.158485726 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.193808793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.193746914 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.161460756 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.184822875 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.15927605 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180009483 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.161678521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179882232 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163048877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179318683 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.16417835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.183384424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168574509 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.193083073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.160932895 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.181660112 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158554241 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.183935052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.189471999 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.164002768 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.187660177 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.164082528 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192725695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158982926 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.180365883 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.162411924 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.192518266 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.182334988 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.162977498 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.179056219 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.162399771 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184954456 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.161593244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.193935695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.160282882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.184013484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159620368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.178956067 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.171301392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.183635852 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.164980756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.19285574 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.184393001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.1621936 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.184223497 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.170613666 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.186031268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158606482 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.18535276 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.166894337 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.183889865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.164348343 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.193359644 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.15941252 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.190312399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193176381 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.16259847 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.183365217 seconds)
  done (took 13.01581088 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.19278087 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.188212063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172487926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.195680959 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.164950795 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185694563 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163937677 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.187998138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.184885243 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170247977 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.186359941 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.298446332 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165115271 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.19371346 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.163759512 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.18842864 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16712642 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189733275 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163429581 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18659824 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.184871903 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173045399 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.186675624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.424101905 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199982623 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159381371 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.191466387 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.163303937 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.200927157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189580881 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.17464218 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.186727307 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.16521675 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.200853335 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.20141416 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.165899658 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182965795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168293049 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.185675707 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163278306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.182856773 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171026148 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.186692456 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.161523124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187547942 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.163420851 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.197328306 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.196528343 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.173031919 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.193337365 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.164917689 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200326941 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16843357 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.19087965 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.19611621 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.17974234 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196988946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.170787361 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.190386291 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.194621397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172838739 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.205416834 seconds)
  done (took 12.537377065 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.159392685 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157309948 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.187207815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160916412 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.182492341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159488088 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.188594444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.161711346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181227585 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159730298 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181850569 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159935561 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181337865 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16262033 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.181824379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.165553524 seconds)
  done (took 3.649585747 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.178722797 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197272363 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.264940884 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.16648437 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.186574774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.17002183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.184133681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166893221 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.184958018 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.169255113 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.186058856 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165056744 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.202340046 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.163757206 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.18184582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162099733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.181468747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166773233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182840499 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.267404745 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.164212712 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.18478069 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.160942393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.189399993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.161406349 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.1872009 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.168975818 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.185531554 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.160876184 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.184233903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.161567962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.192855669 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.159147891 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.187806494 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.161484152 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.185362259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.159310343 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.183729789 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.161390635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.186136659 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.162023676 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.185696519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.160975289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.186218653 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.158413231 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.183525154 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.158400101 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.191459542 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.160505257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.185041757 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.160104019 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.189116228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.165112966 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.191602507 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.167001963 seconds)
  done (took 10.746279258 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173055805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184688989 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.17307599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182566651 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164234222 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.187353504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.16288929 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.185689396 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163370496 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.186427409 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163050274 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186379148 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165900985 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.185175154 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.166865144 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.186470151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159659129 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.185045947 seconds)
  done (took 4.095075499 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162039321 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.159143492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.185052723 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158262933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.18529123 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162858629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.184826087 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158689733 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182960626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159862508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181522246 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160233016 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.184430156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160394698 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181855458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161196825 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.181290093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162108463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158734431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.182947426 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160563225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.185276563 seconds)
  done (took 4.692524657 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.175017298 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.288148654 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.190881327 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.301518301 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.157323847 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.182573985 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189225669 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.160108419 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.194490235 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.158489778 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.17887547 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.16262494 seconds)
  done (took 3.278802703 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190725022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.21908177 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162626057 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186559338 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174720473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191599994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170341074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172750948 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201267494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190887612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179554257 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200570757 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173125577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198601862 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193316483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167263659 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18924271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163032255 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210211019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166992674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197732407 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166340497 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190172438 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166667004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198460712 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19813155 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178503845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193641035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173185431 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194544013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189166653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176408676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201795912 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163796178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19959696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166339659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208142181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194014127 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177417952 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188394278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1749374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201492802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174312041 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198887023 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18997346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174560396 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19059791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167241449 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217102189 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1719315 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200865906 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194406565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176693349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199267938 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211698568 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.182488779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200815131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171925354 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.205450218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196894661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174099234 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19922729 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17917048 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194904324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19780623 seconds)
  done (took 13.312060563 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203633996 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187586843 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16716581 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203425939 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174614733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192087835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189267504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168808269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19087106 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165477258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.23547324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166857392 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199599614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198018477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171000167 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190512425 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168313373 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200108478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165036699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214412671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16728503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199359989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201353957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176863552 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204291691 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193603111 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168611665 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190721879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168572205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190806946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176078885 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191765167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177248797 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.191423853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174628003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19316807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167954249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197846318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19182607 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175445355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200024389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182874582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19190066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167894185 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203946675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192144686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170341494 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187944361 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169249176 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188034665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.179664048 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204412446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203194205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176796295 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192823892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169341646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193047454 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168660274 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194986248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173685564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200188026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192731981 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189292786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195185016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168031214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204530059 seconds)
  done (took 13.264368326 seconds)
done (took 235.13964437 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.327587887 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.357887759 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156814145 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.855675781 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.15300158 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.870293701 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.106533799 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.263612084 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.158366507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.178790194 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.155229517 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.196973023 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.532454162 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.177140542 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.155270443 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195520744 seconds)
  done (took 32.789105585 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.36524903 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.407668601 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.198858179 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.157381116 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.186560595 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.159188539 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.182267452 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.160634812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.183250398 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.164897715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.184045541 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.155027465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1912232 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.155953281 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.185294513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158876558 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.193270108 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183268487 seconds)
  done (took 4.53985629 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.181323966 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.253860005 seconds)
  done (took 1.398393259 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.192718711 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280796951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.383523771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.23291209 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181843864 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201595119 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232943799 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.173271894 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273244593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.195977994 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.172863114 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182178124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.185958074 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.191033371 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175743368 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182657306 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187718355 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198068483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.172556231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.18712219 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.207135209 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.162054267 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.18819586 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.176426695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.266053525 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.194771556 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1637556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.18360121 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.163342699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.196597417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.169184433 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.200773437 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170878922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.2410178 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187810545 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.238969983 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163597201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184418005 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173730472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184176633 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.164790857 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.188258018 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.193328215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.160185733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.182011134 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.166123778 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.181049071 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.162186546 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.191649232 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.164734216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193364184 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166401398 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.238240771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.189776018 seconds)
  done (took 11.510178076 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00456783 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.208019958 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.185787942 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.158406457 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.211570899 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174414847 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.021061966 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.18534857 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.323440292 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.095106159 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.203840866 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.171099901 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.333594376 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.347318678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.347013681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422563093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.850816993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199749004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216199351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.2072406 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.191999206 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203991095 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.17869975 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.522067017 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160821289 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.186758036 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189451815 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.171037741 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242228569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.184166576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.167061887 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264517297 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.36061988 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.277674696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187277656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160950286 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185052513 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.257488051 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.336315463 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285981479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255872133 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183031166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160628736 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.190912406 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.181545922 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184066703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249081116 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.260602273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262746401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167380293 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194538844 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.170296376 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190114469 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.248214525 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.160271009 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.453858623 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.430533939 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.186434742 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170111436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.200853474 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.338025317 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187857268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.308318188 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.207203444 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285610272 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160920603 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.913275424 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.251343344 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162041835 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190698901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.167107144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193484591 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165024826 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.248685744 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.497582898 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16827077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192237225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.160723022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.319915263 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.163198476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.184548887 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.221604158 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187525174 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191025129 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171987024 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.191911974 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.256716164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340858499 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169094059 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.19615602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.171981507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197808185 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.163425182 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.296466261 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.32241579 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244882257 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.295016077 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16727595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.25019264 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.25215539 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191655587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.257609505 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.170855875 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.202992154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166705207 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316876469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.200694795 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191923917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191572616 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168811271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.229043931 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.170643488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.196395157 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.254995276 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.57964501 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.252859878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158373003 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.193349238 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170696357 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.263958287 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.199585366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.32942562 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193272971 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.252909256 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168188357 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.184081161 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168338236 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.254632101 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1958432 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171122668 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192329486 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173494968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.352694501 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.316958532 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.173433158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.339588924 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.236092662 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193310825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261309486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167743049 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251601339 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199912573 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165895817 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189701987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.929348907 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19987828 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.168074167 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194522781 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.272393647 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.16324073 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.192878019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168963525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187294977 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.874665905 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.165323537 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.188667149 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.171099552 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197617099 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.174630867 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.198516446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.193158432 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.228475143 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.341361496 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.196002509 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.172250536 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.187662691 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.246012639 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.165536413 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.186307351 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165005969 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.16291981 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.196535537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191967778 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167406205 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.257481276 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.245875889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298805735 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.66187495 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16381315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188713453 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.314814964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187155224 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.395925627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168197507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.341081433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.256008673 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1604424 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.455921943 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.254628399 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.247682474 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.193314946 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25891819 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.163096159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.202794224 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250855922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.164664724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198594528 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.24797937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.174588613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195923657 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.332317817 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.190145618 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315980265 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.160608692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.261040458 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.191550476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.168718591 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.432791558 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.166648566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202579881 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.248348899 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.168531627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.192915384 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.045549367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.164056197 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.2001867 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192362241 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.309420702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.250961313 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169123322 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.202517932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.199928636 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.251993567 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.298913011 seconds)
  done (took 62.903982345 seconds)
done (took 114.098654936 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330167614 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260645156 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.405476073 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236494948 seconds)
  done (took 2.299467132 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.348688196 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.207146803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304045019 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.186458487 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.312202201 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.16179285 seconds)
  done (took 2.540105484 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235351297 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230158807 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23141637 seconds)
  done (took 1.721698409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271760815 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276463998 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414784031 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329599875 seconds)
  done (took 2.377424322 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343371667 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.181166264 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.219838849 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292447874 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310908112 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272324085 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.212725305 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.214016531 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.219956044 seconds)
  done (took 3.324342991 seconds)
done (took 13.283148298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.215665483 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.219959325 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.193545631 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202978256 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.1946112 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.222581516 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191635612 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.218486303 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.213826912 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.179779775 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.212902283 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.175501857 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.306602956 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.217594081 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.176109756 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.216088652 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.175706282 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.22712567 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.192795327 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.201422262 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.193984514 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.202255818 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.173904098 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207262599 seconds)
  done (took 5.931812628 seconds)
done (took 6.950971349 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313456131 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.153194481 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171928846 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201285373 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.296218045 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179731934 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21865504 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.200700103 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.184800106 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.19772263 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.166096331 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.211714213 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.174960656 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.305478301 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.206721329 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.168774185 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190293333 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.20488192 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.215768429 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189291529 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.291148966 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192998216 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.186012691 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191964146 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.293774579 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168002858 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200621531 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.176262917 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.215080632 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.175277666 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.200856059 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.167275322 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215384722 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.189344958 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190438952 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175920835 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189993085 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134452433 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.175674225 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.202291297 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.21149533 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.175465749 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.198237779 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.167121531 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.201011525 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175884308 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188984647 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178757019 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188216462 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175799799 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191110476 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.192087136 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.198781912 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164151251 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188204869 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166848801 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210089775 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16607021 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21339683 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166645842 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.190542526 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165844693 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201184033 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165628884 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.200319887 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.166423677 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199833722 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.177517127 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.19942529 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169514503 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188440932 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175542923 seconds)
done (took 15.038130198 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173018929 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237135462 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.310010861 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.312090246 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.19243327 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.208308962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.20676065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188113097 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.204334295 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182771286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.228452444 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.19631016 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.311612392 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.208999203 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208253018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178564257 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.202481126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.173422053 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.307311635 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217512786 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.18732829 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210772543 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189751294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.21863297 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.197866782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.203738129 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.199595703 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.187094183 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.195215257 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.178101419 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217799205 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169038465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.19916129 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188713523 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213546289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181671147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209387311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.203204542 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.17198444 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.196370991 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.180075832 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.211530391 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.173193952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.210098575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.179402771 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.211037591 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177262975 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.208834238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.172058891 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.204209697 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.171757875 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.22145365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.18225055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.215616735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.180867833 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.209513933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.182929198 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.209691889 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199074198 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.184557548 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.194830432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.176704664 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.194930933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.191162158 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.200204579 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.183396157 seconds)
  done (took 14.415135682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191245549 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229009988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.181489839 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210040955 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175273825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192187638 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163336692 seconds)
  done (took 2.396208764 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.171057506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.325702521 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.31546365 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.316839802 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.33669519 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.327407138 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190755612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195054064 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203371462 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.20555924 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327510153 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.409915255 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177584803 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.209616181 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.325461289 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166798585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.320553612 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.302183609 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.211286575 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.320993473 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21030307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.201156796 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.209498289 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166363823 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.32017584 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.198194337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.371147406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.214414067 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177517267 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.209307133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182074271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273503984 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.322147111 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.210672809 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175049774 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.315523504 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.312238798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209923273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.367522854 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201852065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.31038947 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.208283889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183529274 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209789458 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182572239 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.305891762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.216523065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183268766 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210233089 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.333511196 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.204883037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.326326693 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180523445 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.208811889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178495185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211516842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190066768 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210636632 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.33194731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.184981833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.345561052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.320296037 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.316743072 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.320806997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190637511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.352928469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.304817044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.182410138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.317177555 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.214152372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.32398729 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179945299 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.209737844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.312609794 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212642544 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.325460801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.325057537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181754886 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.209990042 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.172233704 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.209645514 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.169685964 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.309874531 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211138162 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.17886681 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216653948 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211632779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182883033 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.314328379 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221482634 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182415376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210094384 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.191250647 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.211445813 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210311381 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.330190313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.179812042 seconds)
  done (took 24.898149758 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.173977781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169577081 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.204658078 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.195782579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.171116872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168542452 seconds)
  done (took 2.176124562 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206085215 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211246137 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191958489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211502245 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231319779 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.313335934 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.323074115 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207825381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.229946629 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196521638 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.316502957 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.31895718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.31641384 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217859827 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.322381568 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185898919 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.322630203 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.213041896 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191380063 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209768784 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.183043109 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.217024804 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207224745 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.307875883 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.187256774 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.213774531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.177846499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.225792609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190783688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207860162 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186979015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.212512848 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175621844 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205252218 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.324918064 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.203830319 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181267324 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.213978747 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.186926214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.211935679 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.321224717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.184742696 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.220917478 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.186977198 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.208121159 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.175449336 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.214177026 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177281134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.320044679 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.217069014 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.214575051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.186635954 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213303661 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187552901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.203683164 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.17927168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.214455903 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.325956464 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187567637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.207228028 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184216722 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214382709 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203085462 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190172158 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211624956 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187125193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.203317196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.186277948 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208853584 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.186090004 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214868106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185974278 seconds)
  done (took 16.972813373 seconds)
done (took 61.899122439 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.68500317 seconds)
  done (took 2.772405346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.262554896 seconds)
  done (took 2.362112598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.490378002 seconds)
  done (took 19.62015058 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498528269 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.418214495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.094656101 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244975076 seconds)
  done (took 3.348341713 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.169427481 seconds)
  done (took 2.288107307 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.47639857 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.349912094 seconds)
  done (took 1.932584793 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.823207895 seconds)
  done (took 1.938783416 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.97398531 seconds)
  done (took 3.079257635 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368833844 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.28492024 seconds)
  done (took 1.778367905 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.721791367 seconds)
  done (took 1.848777977 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.912787863 seconds)
  done (took 18.044376244 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.318545885 seconds)
  done (took 1.442165726 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.360143004 seconds)
  done (took 1.48915096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.745954356 seconds)
  done (took 4.873132121 seconds)
done (took 67.930100261 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186859307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214237229 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189459428 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212259814 seconds)
  done (took 1.908717093 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191796596 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210884149 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.188909358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210093686 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190273916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.211378207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184486309 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.214278785 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184012646 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211813039 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.183895383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.210146626 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.187519307 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.210803831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183449305 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.214379566 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.18887772 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.210433044 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186445357 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.212199261 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185724246 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.213663693 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.1889257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.215475027 seconds)
  done (took 5.90716103 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182076436 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174284384 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.210966004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172782307 seconds)
  done (took 1.867521282 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197080858 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225378381 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197977481 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221137409 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200070135 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226233098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183214779 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211151852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183489395 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222740964 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199950985 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228454819 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196497194 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.21886638 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.222552533 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.181573439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187841554 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.228679219 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.226384514 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.196976794 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.214680442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.193765004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.209804264 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.196707417 seconds)
  done (took 6.101294376 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.261328204 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.226719404 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209916079 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.258812731 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239256543 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183198925 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239940358 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190657276 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.217728315 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192362171 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213678639 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229103296 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220583637 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.186347231 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.214220817 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.217851237 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.194248375 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.217313389 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.225978387 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.219277745 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190969466 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225482026 seconds)
  done (took 5.911710002 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.340645762 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.176373266 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.204651583 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.173560479 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219877263 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.179387267 seconds)
  done (took 2.434844473 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17785935 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169493062 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198882623 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170784636 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203175138 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169716624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199039556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170638878 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199150674 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171204523 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.200413964 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171209272 seconds)
  done (took 3.350817027 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274178162 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220599421 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350452526 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463455583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268338663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25495365 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378403357 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2323975 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.274930283 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234813938 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279427293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228771899 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250309274 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285696736 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209804123 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.244457902 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270309863 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307165457 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211112182 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310410354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253853161 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276547108 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287468609 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215933605 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236491596 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256701917 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.190066209 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226336464 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264056414 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231346598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274566061 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248816697 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236377755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253444729 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327246921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276457782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.38966261 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204122535 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.25796374 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.295701289 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331408624 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236684776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289533816 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221241402 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225021492 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289416203 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217156875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284027529 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.229858559 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214798893 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278562029 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277100111 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267511392 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203664935 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401617273 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23682823 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238619171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24542674 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284822043 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300931494 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280282779 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.220019739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266813329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260556527 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316716043 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.23960994 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.261477943 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192286253 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261571461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307440911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282236589 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255716736 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289876946 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198750134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271383253 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262334547 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222654012 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308881178 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272281972 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.215507573 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219960304 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233137118 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194068115 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287639162 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21657356 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316612119 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200328407 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271055349 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271888415 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219222291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259816768 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257367714 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229663423 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247289617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155471796 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242415044 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256294324 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22693207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226094463 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247866925 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20766726 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222517193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218517243 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220392482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268590649 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191489225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257316172 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268893482 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200254515 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279547909 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245120137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.231701113 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267229233 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299050389 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228216242 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20224178 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320641473 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272887984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.234218331 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239332321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296606294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.237777304 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201876789 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266305093 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293790712 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240025565 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301502936 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209227026 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234375824 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192791136 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272813882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258767682 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.25759826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196998027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264904776 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286929993 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.194663441 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239074746 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281656976 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202990059 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223403199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20353496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235470936 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.238523488 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.220471751 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237072116 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250890493 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236395983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266631323 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25660372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203346459 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272866543 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232039563 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.238285399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248850989 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.216562665 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.239982263 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300767298 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228634381 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278937636 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.229161613 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278395947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274017038 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228391124 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25025403 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227897766 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217071249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230719772 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271157666 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264552497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.2894924 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272114771 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26157202 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.234336433 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247976017 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268199189 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285090723 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226331225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.238893927 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271475513 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237999818 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.220968114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190499085 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227402172 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234645481 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199877652 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235581145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278769388 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23171969 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273619432 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270855812 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238323044 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29584649 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194132229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260829188 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.274375812 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208325654 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.293722756 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292631696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27796754 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209877667 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263926229 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220865028 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19600593 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234383646 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228197454 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237498288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233965786 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209907628 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.295444693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2684759 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246940969 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28489398 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236164529 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.310125331 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.222314304 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229051264 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26715164 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270630434 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257212876 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229443283 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.260501632 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293069811 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211704225 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291948787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271253139 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281617935 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294037252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.235867564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230888229 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212517737 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258916584 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239209539 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228647232 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241736187 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231861259 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216862145 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.238236161 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237826822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286206647 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213414988 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276503737 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25332146 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266867456 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195952851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241328174 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245118042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24578342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.15979539 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266223239 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291611245 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248323897 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220017993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269540491 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229624731 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.385052108 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288051924 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271299863 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235261342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208838987 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274817978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258031835 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228609658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2821921 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241768245 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311458182 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268717202 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.209707114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230907297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216503719 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249398684 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.223951803 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.221565955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.266930173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.241787241 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288714787 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207883698 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277032436 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277900423 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.215279541 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.250083268 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20720498 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330747925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274809387 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273882035 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.270687494 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.232451836 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28283478 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2250092 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196660064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233852223 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284279097 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200335461 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282012119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26217035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27966594 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278186703 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23103329 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242234854 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.196571506 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269579114 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25024069 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281937249 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205614834 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.240146739 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288877797 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183370385 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233249214 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260125398 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391313658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224464997 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269927621 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.16220212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.38787593 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235207913 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203898484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260029156 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270987533 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.20198162 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.285733123 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275974619 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210382829 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260925778 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204654167 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275903242 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281164525 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269159716 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277734341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.245678309 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231878719 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260011626 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273560346 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215192379 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.248267185 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258830121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29741331 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.245721819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.233884211 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271612961 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240891527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274329718 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277144391 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210035717 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282686576 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230302401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235672777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242159006 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227290705 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228917588 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.265609195 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232230369 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272871362 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243343095 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233617557 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197859728 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248938361 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271202015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210969356 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.232892604 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289994908 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.230048039 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257005238 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31530944 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231925373 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238821222 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244642492 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2317727 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209563241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246308976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201958922 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279309261 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281084906 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200856826 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275589305 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269485596 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264420497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225443194 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244741737 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.367680834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.200280985 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299017494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253142526 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266400497 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251494481 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282646278 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272601285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221921028 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269463666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248925788 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.29272242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271034257 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27183799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201734522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245840061 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240209317 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.206196961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255773796 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272667356 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21407443 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.239756396 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.23961853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248262297 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.250581097 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213318328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305441984 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254334577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291204908 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288499187 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210390651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279520182 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27853577 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19852762 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268127533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276416505 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215095439 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255127206 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.23773498 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.208960162 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319267206 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.228720496 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231909169 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280742893 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27522187 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275637216 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.20806319 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282754043 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242770606 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250002951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230335017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.253716272 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242024283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237815996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.197066959 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276259991 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264439703 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.268622497 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213635407 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.279609649 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270137355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.225473086 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234777062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36156169 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271625742 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297377131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.189448882 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241689743 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247884874 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230054813 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269780675 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276943806 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.201804992 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234004548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248589992 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.219271459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.22988475 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24734982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286775993 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262254578 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28682565 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.20633846 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359372027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21140768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277846855 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.206170212 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.202422039 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242606969 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206217914 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246081503 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279038766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32302306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.266178122 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.219859174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241194289 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.199166947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235239132 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232447227 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253371466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274697222 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25205391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162490495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211159883 seconds)
  done (took 122.175146648 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250633827 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.229837537 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.244013851 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.299439685 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271558416 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.370300721 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.306357603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322872063 seconds)
  done (took 3.558422409 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.193914185 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.239722873 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.248180023 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.218541547 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.183172595 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.591746339 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.241807844 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.2255812 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233771557 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.22741195 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212197934 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.646471524 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222893708 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.219913301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.222990158 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182510919 seconds)
  done (took 5.562020771 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.433851121 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.754692409 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.388574623 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.424103442 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.380773002 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.298216484 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.960215891 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.292676115 seconds)
  done (took 14.200154853 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.243378505 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.27837255 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.527596351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.416588521 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.29149866 seconds)
  done (took 3.030132673 seconds)
done (took 177.122946644 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196873149 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.227343505 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.198486274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.229013061 seconds)
  done (took 2.107751901 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.250675243 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.14991676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.186168017 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.149658975 seconds)
  done (took 1.999953904 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47198062 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.15065184 seconds)
  done (took 1.917217615 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.221133498 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239026275 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208900168 seconds)
  done (took 1.958142302 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21235801 seconds)
  done (took 1.493078484 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.196190103 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.192376768 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.38546892 seconds)
  done (took 2.054574608 seconds)
done (took 12.803156183 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.218336424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.035006547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.654599582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205223444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.823305045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471550538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.5339202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254845396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.306518098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185069694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247291432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.765945865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.524274561 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.957160963 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.503393064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95622963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.801057663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182992753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221495415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185428329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.517898121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18187243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216998824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183512442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796386887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.489954274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215321306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.968539366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214133865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19375327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.505290442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184299623 seconds)
  done (took 23.96264539 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.190680113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.272865705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239281755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218690938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191991105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21865504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194887213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231108439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319929929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183522779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238340644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183145915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222999308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184792913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24040634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183897338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219295554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185385935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223735155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186160615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238943584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182957763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217880709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184690176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216478575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.231440045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.185749529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.229418979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.185081776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226053537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.189925898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21738323 seconds)
  done (took 8.129100914 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230240662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284685783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240689406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256198222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271487456 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.191251625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306691375 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254521752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.293067506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218432665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206059304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.218104132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.257807714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186108932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241383419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185546361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219440056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186193929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225710266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18751344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238889526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184989166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218873503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187233167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217610214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204802231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217996716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197394236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217275954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19367819 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224481898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185235916 seconds)
  done (took 8.433229952 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.203041741 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.23024562 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.209268651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239570689 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19558346 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.230554039 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.201800941 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.225617587 seconds)
  done (took 3.0348992 seconds)
done (took 44.832197099 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211415781 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233083201 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.207148478 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.231863633 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.349992202 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.192322361 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.235884116 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.19226181 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.232219125 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.208446339 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.216144735 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.194577048 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.236872929 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.197118992 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.350673015 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.233878624 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.353776273 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.351991199 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193077975 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234657005 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193597454 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.356960128 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.23465037 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193742305 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.331485869 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.223212323 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.342238772 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196772997 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.230913442 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185015916 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.3529504 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.231080433 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193333873 seconds)
  done (took 9.397512142 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.298402401 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.230665086 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193235257 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.228591987 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195319181 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227161638 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.844931258 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.200192566 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228040521 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194156045 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.226893797 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.319328526 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.200098699 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.222350761 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.196880902 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.169385157 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.340818969 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.228936026 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188142221 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.154412723 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22626299 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193270946 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.348323135 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.225052083 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193596197 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.227947912 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.195360877 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.234066986 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.196590852 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.228985334 seconds)
  done (took 8.670168532 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.203537125 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.240366321 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.21702662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.295774134 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225005987 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.240944886 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.210861241 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240372327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216106042 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.222862279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204035443 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258198336 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204933044 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233215272 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.189041498 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239117628 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204091386 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.225693715 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.198026998 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241375178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207633247 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.242634416 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.243894562 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201770002 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.220404634 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199052407 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.232034883 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.20030962 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.229459067 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.204316624 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.223104279 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.191213003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.223571098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.223062863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.223509708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.204015329 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.243144328 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.202040637 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.236359247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.222599466 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225942349 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190703092 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.249415586 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.246378747 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.225190508 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200202205 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.225303581 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.204066802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.222221764 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207508022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.266056179 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.192469796 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.250096258 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.222649682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.189356621 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231489842 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190044907 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.192954216 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.237326827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191025828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.245417242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232191956 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205419627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.192062622 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.240748771 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188123643 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.226172477 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193246012 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.254792386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23009574 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.228164699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.222920386 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.202868047 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.236790028 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202260637 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235367501 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.190428127 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233427938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201730891 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.227230222 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203567437 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.226196711 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192956521 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239198015 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.212225521 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.237986339 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202159297 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.236977621 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.191928666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.224341168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208087495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225431111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194090184 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.235945297 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191047689 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.226254749 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201525277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233304808 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188378843 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.249573357 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.195133194 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224320355 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216084462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.22633807 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193919562 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.233619373 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231573443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.224106921 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.200458592 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.23455811 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.192110393 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231712636 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192614089 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222536748 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206900402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240121736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198904413 seconds)
  done (took 26.929886825 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.456222401 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.439510499 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.2937252 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.52480738 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.204112199 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.396038421 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.445348812 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.442157344 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227008057 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.258748337 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.248105433 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.442499218 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192511422 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255142641 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.447525764 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.5270555 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220297427 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26672498 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261068534 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203878649 seconds)
  done (took 8.096160483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205856485 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.258420851 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.213996906 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243065058 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201855697 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241095184 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19211172 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245682778 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20307771 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231483836 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195353613 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231479925 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204542072 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239070834 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.20716999 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.243135667 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200477729 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229119848 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214159985 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.229063416 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.166149481 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.251058881 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.201435462 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.246055591 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209474962 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.23408724 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191219498 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.228773016 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199529074 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232446878 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.195586464 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231778776 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.199967608 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167578503 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.23739185 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206322815 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.232348961 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194281619 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231300014 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194244184 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239124053 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.204223038 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232977391 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.163010604 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.244320454 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.175299806 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.206410327 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.238719184 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169498999 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244409013 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204309221 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.238552263 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.200162046 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247171865 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.200185443 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.243014702 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.202851633 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.240670828 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.197080648 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.22446346 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190782292 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.228029905 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200715049 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240597774 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.20410731 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.234418148 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.201042675 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.225179752 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196710001 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.228404674 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195968566 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.23958298 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212684798 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.235845494 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.199675741 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236668644 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.201719786 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.158501161 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235032193 seconds)
  done (took 18.421942204 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.225576451 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235700364 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209396042 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258727454 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20525997 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231570928 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203589646 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.246281248 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20721406 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244037597 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.20712592 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.241560606 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216050938 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237823469 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202819157 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.243140835 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205197462 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266158357 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20454745 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.253997732 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207487628 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.231955894 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205425285 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238974663 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220740291 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238205082 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.253595866 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.205812625 seconds)
  done (took 7.710013124 seconds)
done (took 80.513381138 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.545679517 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.825328696 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.458327138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.467984581 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.491559716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.473600449 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.456328839 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.455090693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.092840228 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.434284974 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4626735 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.471647058 seconds)
done (took 32.036469722 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.750251062 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.285878882 seconds)
    (2/2) benchmarking "String"...
    done (took 2.298611297 seconds)
  done (took 5.941247487 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.255850552 seconds)
    (2/2) benchmarking "String"...
    done (took 2.269652237 seconds)
  done (took 5.867532666 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.454983766 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.454374959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.65037216 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.448820412 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.450501561 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.447209523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.463972689 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.451302781 seconds)
  done (took 17.710400534 seconds)
done (took 36.069021418 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.44002048 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.650818865 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.695008772 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.426384808 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.452117619 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.444932139 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.452707639 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.489281633 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.462611691 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.434398606 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.987985554 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.719151925 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.468204232 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.849962973 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.43477547 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.461449113 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.461670999 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.694225292 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.450130286 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.48779995 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.446235866 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.430902212 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.465200079 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.46332498 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.464479666 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.445324646 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.430589742 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.463779227 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.697386518 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.462056593 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.495466428 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.450794197 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.429720497 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.448478818 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.448947733 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.454846458 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.753870587 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.47088502 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.440749344 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.463935393 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.719449449 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.472416011 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.451925626 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.460603614 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.438560378 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.466737425 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.431612567 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.63838558 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.487002852 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.446347472 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.488893455 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.816930212 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.461041171 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.470026111 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.451223651 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.746947429 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.458442236 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.568606804 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.482775428 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.483754254 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.461285964 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.447163149 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.492373995 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.446866463 seconds)
  done (took 160.224557191 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.451710374 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.453776978 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.45350334 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.453399067 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.452226152 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.452339086 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.44995652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.45137765 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.450447923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.456946166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.453597347 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.448478749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.45494235 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.45744616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.458545811 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.468355857 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.455737842 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.468801724 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.455614991 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.451629917 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.458770071 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.453922109 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.449914895 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.448570101 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.465430276 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.54145845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.468780422 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.478137897 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.461096973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.455277449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.466074632 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.45743303 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.228577112 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.404524975 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.466350645 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.499743368 seconds)
  done (took 89.649298073 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.461512529 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.457892306 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.455423137 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.494767386 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.456157379 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.454344857 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.107135132 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.107168028 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.477769554 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.96016337 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.087070849 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.79221373 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.45325247 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.551951265 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.462716174 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.452446083 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557169456 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.48011699 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45076165 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.457483175 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.106868967 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.470687648 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.453029397 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.645930255 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.451315492 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.495846504 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.86225951 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.774050947 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.453559912 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.498236123 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.801026374 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.491306331 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452420451 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870696826 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.92715198 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.567988918 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.451693404 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.460893665 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.496563983 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.456997709 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.754320644 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.458084928 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.46153858 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.463229786 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.178355991 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.460920205 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.112707908 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.461145374 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.525361081 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.460512123 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.460903723 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.192342687 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.320127441 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.46146797 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.460250986 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.464202327 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.458325531 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.460986415 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.497155469 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.083313319 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.432407152 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.462073774 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.463391888 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.497575634 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.459628979 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.884871813 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.464571228 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.257349765 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.514094425 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.606088875 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.108137425 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461692789 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.558542536 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575576965 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.455090065 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.460084694 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.464804987 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.460780383 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.579054571 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.456418166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.286674933 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.64364854 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.458571931 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.109153126 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.564523184 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.455308597 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882256116 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.463711551 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.462838326 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.315778844 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.55573743 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.456708705 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.46046938 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.463226085 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.286701054 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.109962797 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.834795751 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.462654225 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.699194989 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.463387279 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.463389514 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.447058945 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.110789507 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.191194704 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.469682842 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.581072146 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.651703265 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.45899056 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.465063609 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.116490372 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.462226935 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.51683821 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.462173856 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.873011505 seconds)
  done (took 412.243896808 seconds)
done (took 663.464413404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.446406418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442268113 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.447493219 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.442034004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.445350069 seconds)
  done (took 13.575986794 seconds)
done (took 14.93278426 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.46416552 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.48671315 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.485344819 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.356935264 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.46568373 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.466489488 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.4675846 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.487424413 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461582859 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.467487591 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.322763809 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.467569304 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.468318212 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.46734707 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.302796955 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.468164841 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.443271313 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.466188752 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.490518383 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.855854366 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.467230715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.594877393 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.82221594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.532112848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844430846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.877653855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.469886708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.69121192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.540455878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.519181455 seconds)
  done (took 21.573522024 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.427491373 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.871366603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.470624303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.592268542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.842930655 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.533481667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847965233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922481972 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.469118035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.746263753 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.51874767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.513296279 seconds)
  done (took 21.686355996 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.283319128 seconds)
done (took 95.836911665 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.524726922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.602063223 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.52261143 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.504223826 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.50545876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.500952042 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.50423067 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.504230043 seconds)
  done (took 13.524610776 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.502827978 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.504074436 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.501856207 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.501250892 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.502468715 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.501888404 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.499798124 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.500428581 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.501972632 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.503310372 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.506576849 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.508492037 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.507129084 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.503669077 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.50555123 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.508570399 seconds)
  done (took 25.416554298 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.510425313 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.508619427 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.510505142 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.504063819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.501774213 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.503648823 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.502566423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.502939515 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.504719559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.502442944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.506399453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.506626366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.503140308 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.504392213 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.506867249 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.504322582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.509369033 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.505829338 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.505845122 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.504874956 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.502160156 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.504073737 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.510029453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.504300303 seconds)
  done (took 37.48779576 seconds)
done (took 77.789051878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.489253766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.470573388 seconds)
  done (took 6.318677256 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.60539975 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.62292209 seconds)
  done (took 4.59028065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.507024252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.50493942 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.506811935 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.50537488 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.505409312 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.505318589 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.50597789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.505875573 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.50660262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.507943922 seconds)
  done (took 16.420839829 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.510749935 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.504267617 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.509831522 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.506494296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.508841033 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.506027826 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.506162201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.505048792 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.509282849 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.506620709 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.506084747 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.506095573 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.509217688 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.507534303 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.507309763 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.508479884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.50746069 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.50558643 seconds)
  done (took 28.49094679 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.531229146 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.533565547 seconds)
  done (took 4.425801284 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.692229647 seconds)
    (2/7) benchmarking "second"...
    done (took 1.588492154 seconds)
    (3/7) benchmarking "month"...
    done (took 1.674516571 seconds)
    (4/7) benchmarking "year"...
    done (took 1.662331711 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.589644046 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.536452715 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.590595844 seconds)
  done (took 12.695575184 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.515819923 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860136474 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.043046187 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.742068248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.500546403 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.53245095 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.457761772 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.532242473 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.529905444 seconds)
  done (took 17.075714168 seconds)
done (took 91.379399855 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.473786926 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.478774011 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.509637434 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.488653969 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.871652813 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.480281675 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.479098773 seconds)
done (took 18.149391693 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.466077285 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.458628293 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.466833876 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.485655753 seconds)
  done (took 11.239916543 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.476983002 seconds)
    (2/2) benchmarking "read"...
    done (took 1.92985358 seconds)
  done (took 5.770144654 seconds)
done (took 18.378041231 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.510960368 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.514568368 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.515943892 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.513458869 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.510533427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.510843174 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.510966793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.511420691 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.511748736 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.512306628 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.509923364 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.51166346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.511740285 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.511776183 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.511464691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.510606761 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.509281662 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.513108755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.510529516 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.511595155 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.510812443 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.511533694 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.50940123 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.510381662 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.512428361 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.511669046 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.509223554 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.511567358 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.51213412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.511400926 seconds)
  done (took 46.709752408 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.51968983 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.516627498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.510112773 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.512343504 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.51317678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.513782164 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.514456343 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.516291771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.51220452 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.511053885 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.513714559 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.518121473 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.512825898 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.510511497 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.513156666 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.519071105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.511719821 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.514186057 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.512908799 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.522492979 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.514956127 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.513131244 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.514527721 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.512015809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.51298751 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.517949804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.516429778 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.51551353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.513057631 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.51449273 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.513817225 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.517308381 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.514125504 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.517264731 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.512106742 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.511124634 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.518090325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.519240401 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.518577048 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.516708933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.514261974 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.513843206 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.514434971 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.512677206 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.513392939 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.514812114 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.513650025 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.512946025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.516764178 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.517377175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.51897228 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.520804845 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.51806581 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.516955194 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.517866413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.517715067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.517226318 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.517296159 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.520364705 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.516202026 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.517749499 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.516565619 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.516500248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.516341219 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.520909258 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.519548471 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.51979515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.522506738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.521633163 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.51783282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.519525633 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.517335968 seconds)
  done (took 110.513351108 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.518790134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.517525378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.517971105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.517048223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.523120224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.518774001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.518345594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.520296192 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.519044007 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.521396122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52034983 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.517513994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.51682047 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.516742178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.518861442 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.517479632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.520172782 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.516852247 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.518952655 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.516812648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.518013149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.519532337 seconds)
  done (took 34.78147319 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.51917035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.520632407 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.519128934 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.519431207 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.519624108 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.520911982 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.519844597 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.521500814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.51884042 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.521679468 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518789715 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.520806662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.520806452 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519441683 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.519459004 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.520775582 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.519483239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.522387379 seconds)
  done (took 28.732438462 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.52227717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.523127696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.52020037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.522961963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.52129988 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.520374134 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.521572821 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.519580807 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.521855118 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.524866465 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.522551017 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.521910573 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.521912947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.520390896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.520959823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.520360235 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.522258103 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.522577906 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.521779201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.518274705 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.520681994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521102509 seconds)
  done (took 34.846842396 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.525060135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.521794706 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.522238338 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.524355227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.521694205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.522810618 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.522472306 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.521707195 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.519919048 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.521674579 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.520492376 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.523075036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.52388324 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.522464274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.524152757 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.523406642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.52540564 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.526481894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.524604631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.524920453 seconds)
  done (took 31.837688648 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.529922834 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.530557133 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.527438929 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.529105273 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.526969526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.52588489 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.529042624 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.526687227 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.528409164 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.528843019 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.526481964 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.524924783 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.526548104 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.527465958 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.526023456 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.527886263 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.527183659 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.528460497 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.527336053 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.525342293 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.526319583 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.528426275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.528480123 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.528551571 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.528215983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.530631583 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.528623577 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.53105133 seconds)
  done (took 44.157058311 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.551863194 seconds)
    (2/2) benchmarking "in"...
    done (took 1.552986242 seconds)
  done (took 4.480691434 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.524953278 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.528515253 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.527722904 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.532707546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.525875602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.531629267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.527333259 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.528621831 seconds)
  done (took 13.605283256 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.5226203 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.530971083 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.52816912 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.52821326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.528958466 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.521324464 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.538667801 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.532563393 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.521963442 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.520383492 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.528462034 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.527850085 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.530459285 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.526288085 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.524482618 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.533692587 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.533312162 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.532117317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.529482415 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.530552803 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.52931326 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.52474131 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.533165775 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.533694823 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.524377716 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.545887295 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.540363128 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.532473927 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.52743439 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.537311483 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.528978301 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.533225839 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.529424098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.532072829 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.530339857 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.530170352 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.544181561 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533377882 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.542021021 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.538898487 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.531246816 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.532553476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.530860733 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.537443833 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.533632384 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.538277318 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.534553312 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.532335362 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.526310014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.532626181 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.53672328 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.527049983 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.533632245 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.537168798 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.5409565 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.548669842 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.539950856 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.527145666 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.533153204 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.548914286 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.553599378 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.538557383 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.540816259 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.538323134 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.539145795 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.546293142 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.552617689 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.539867884 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.534443801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.538357078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.546684743 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.560725215 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.551363131 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.53856702 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.53349354 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.541133827 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.539996602 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.539281636 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.546331485 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.546331205 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.54508866 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.538623243 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.544323548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.541497421 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.535576417 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.541391612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.538545998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.540747395 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.531899343 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.553565017 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.54037109 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.539835548 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.531695267 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.537954722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.534475299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.539442899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.52956427 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.5341402 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.543170399 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.536804645 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.539924176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.529695152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.544807478 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.542234107 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.539555134 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.548969461 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.550083568 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.531311838 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.551154375 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.544847428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.538272779 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.536463262 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.544984317 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.544085529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.531898365 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.540993097 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.544969859 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.547567956 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.549759924 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.5390249 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.548731302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.553620611 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.547422476 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.543040355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.534405527 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.545055765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.54060436 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.547558038 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.54588052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.539752157 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.539115833 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.540648361 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.545592355 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.535670074 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.543065567 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.537457242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.544768716 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.542763574 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.54428311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.543846603 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.545705778 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.542663979 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.552022223 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.552774344 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.552376458 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.547448807 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.560805533 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.54301619 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.554107894 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.552017334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.549222286 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.54085523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.54318751 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.55112155 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.537549223 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.545513994 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.537053769 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.551232737 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.541688996 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.543918678 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.541311225 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.537234309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.545435003 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.550832966 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.549992984 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.543575897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.544965669 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.542456691 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.542929097 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.540559243 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.548557606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.534665407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.540185034 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.548961848 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.547283283 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.540615535 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.544233104 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.551388134 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.544760126 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.538947795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.537672144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.550025949 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.548920641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.555516731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.552895378 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.543545168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.543178431 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.537873846 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.539518678 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.549890598 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.540663795 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.551472083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.559705044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.555630922 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.546904952 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.550308318 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.541716583 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.551978781 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.555636998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.552692071 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.547075015 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.546296565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.54045951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.550254191 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.543919307 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.557378002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.540332399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.550013518 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.544439835 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.547584298 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.543581415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.543424412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.548979448 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.554291506 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.547359339 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.549160336 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.545428647 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.55373529 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.538761249 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.54652767 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.554162859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.547370654 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.557663233 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.549525607 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.551792096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.556043754 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.547014603 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.542460532 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.553124109 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.553129137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.545025943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.564386505 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.54927753 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.547710153 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.565037077 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.549513594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.543030367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.557138865 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.549608019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.549371956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.541231884 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.549469943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.546239435 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.548945226 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.544441371 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.539275141 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.555060738 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.558189417 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.555560383 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.544512399 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.553577449 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.546283295 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.550423486 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.554666833 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.55578597 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.554273067 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.555803011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.55418835 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.548006349 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.545324444 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.551208572 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.550544032 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.549739042 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.550778978 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.553541551 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.560704193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.550334439 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.557267862 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.546861371 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.55272308 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.54399285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.555247074 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.541862621 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.572888424 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.566369299 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559038618 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.559729767 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.554718167 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.560779482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.551302858 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.547235581 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547571308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.551171138 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.547524654 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.54741647 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.557346364 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.549110051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.55706204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.55240607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.549733943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.555848478 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.554119906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.544440253 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.55568009 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.552434496 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.552312624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.544057872 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.554490833 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.554578553 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.562750682 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.5541667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.553160357 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.56874481 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.557657786 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.558003221 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.552210655 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.551924655 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.551689569 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.557581031 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.558055602 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.549714737 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.561319843 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.548590083 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.554003829 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.552374572 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.568084042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.563199831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.551028661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.558090313 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.551352376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.548835854 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.55084861 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.554344725 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.564070264 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.561912377 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.549997035 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.558896003 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.553055036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.555443608 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.55543362 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.557060783 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.555118007 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.556367818 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.563133482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.556728757 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.556047176 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.563662181 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.558888389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.554000896 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.553632623 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.547148209 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.565081425 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.561441717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.553894807 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.555153976 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.552192845 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.557945742 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.553724883 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.553506001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.556574129 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.555136795 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.56591554 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.557850758 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.561343869 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.550856293 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.566482721 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.559644561 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.564211342 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.560438447 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.552312344 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.561703132 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.550133505 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.551334217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.55309268 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.554651049 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.558124116 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.545835333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.562348048 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.556330872 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.560759577 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.564550212 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.565797368 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.548283828 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.566368042 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.570532817 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.549248127 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.563462016 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.557379957 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.553577099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.562921514 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.558434421 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.550238965 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.556757881 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555855462 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.564472619 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.55060626 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.561890098 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.554406046 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.562675114 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.555382636 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.55751098 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.557881557 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.556964541 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.556262985 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.5626902 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.568742227 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.562098015 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.557725951 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.560246662 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.554415824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.573153961 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.562046962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.560759996 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.565301705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.557705907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.553880839 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.558415564 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.563892029 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.549731918 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.564143737 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.549609067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.557776237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.557880929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.566322505 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.559063831 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.564987629 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.553157773 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.557449869 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.560656072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.558706104 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.556708084 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.562167856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.561612688 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.554565074 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.555730585 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.558226503 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.558084028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.562129513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.55619929 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.561294981 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.557429195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.56456935 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.558303259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.555976497 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.554959748 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.554875659 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.577505422 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.568923045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.563325965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.560581692 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.563949927 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.553757918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.562664218 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.562775755 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.55589597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.559799539 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.56934782 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.554878243 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.563607495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.56120733 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.567844906 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.572876272 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.564002587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.559438599 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.57636212 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.575065726 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.566139591 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.558977786 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.561564987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.55672729 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.56604775 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.565373293 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.555678345 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.575494482 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.566449407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.56257978 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.565783819 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.563100028 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.561631266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.568073705 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.56752608 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.570258899 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.572351694 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.573745377 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.573482075 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.564744791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.564301997 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.558350821 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.559804777 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.563614339 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.56565133 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.565190727 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.571996551 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.569005808 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.565579953 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.57467203 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.560786885 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.56259354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.566711381 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.561835342 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.570043579 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.559970999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.57649433 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.56282667 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.563069299 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.571171376 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.569810169 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.564632137 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.567053115 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.570925674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.567238962 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.557775049 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.564040651 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.579290215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.575143668 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.567128194 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.560433139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.56915841 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.572515472 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.570912405 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.570137725 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.559331532 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.589005278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.573240703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.564528702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.565049229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576026113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.572088113 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.562838333 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.570071236 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.569038493 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.569717141 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.575740742 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.570105807 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.577161942 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.570009287 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.567131057 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.573824995 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.567014283 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.570366036 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.577055574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.572772348 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.571687573 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.569802208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.588303722 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.574771345 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.573970126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.594031894 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.575181453 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.579509587 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.576345288 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.559533932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.575370862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.572033776 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.575245846 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.571059979 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.569961027 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.571263147 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.559194783 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.581984204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.585146826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.579380171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.572835694 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.565979235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.566782899 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.573935834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.572845053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.572671148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.570291376 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.571306938 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.568483953 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.565619832 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.592868898 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.59050931 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.577146159 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.570827617 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.572138748 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.581496432 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.57546438 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.576556628 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.578854616 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.574464462 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.57282829 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.580456844 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.582977346 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.572812227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.570155535 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.571828024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.572025604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.578079168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.589966644 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.590275621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.583007867 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.577740996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.576694564 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.574577606 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.570314284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.57467692 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.569945731 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.571513668 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.572259224 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.579574749 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.577706984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.580196965 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.572995979 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.58193273 seconds)
  done (took 927.720120858 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.577220329 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.57531946 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.577962533 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.57568452 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570612785 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.575927917 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.578248184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.576059078 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.574600443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.577281022 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.574850824 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.576484272 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.575761554 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.576774812 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.576139675 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.572360843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.576272234 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.577173675 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.57640598 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.576732418 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.5787428 seconds)
  done (took 34.513368006 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.576429237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.576063688 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.578036006 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.577456183 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.578538584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.577978806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.574441345 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.576576532 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.5784084 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.578882064 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.576123542 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.578077492 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.578859853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.579548349 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.577394094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.578690489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.578917613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.581003003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.579431226 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.578657663 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.578071625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.579456019 seconds)
  done (took 36.13439244 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.578227021 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.576653916 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.573013999 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.580427581 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.580605396 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.578823397 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.581520667 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.579651994 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.581511728 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.573391491 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.57530612 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.576230888 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.582024432 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.584745518 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.583844007 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.586780274 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.58140452 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.581491264 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.586412071 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.577187923 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.591254726 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.587828034 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.581395302 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.573703751 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.58368449 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.578077631 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.582253232 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.581019835 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.574740754 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.586115734 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.582915677 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.578389263 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.591602396 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.585275195 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.577375796 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.585767785 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.582140369 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.582441245 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.582640153 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.588236395 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.593747641 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.580744032 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.596680556 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.591303615 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.583392134 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.580652679 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.590953571 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.590570141 seconds)
  done (took 77.38596738 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.584183296 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.58192002 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.580932603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.584616172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.583474686 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.580851308 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.58512322 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.583208381 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.582216426 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.58409362 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.584672604 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.582031417 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.581913105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.584640687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.583808738 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.58533456 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.584646972 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.585802286 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.586780135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.580678032 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.58373694 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.585029633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.587037709 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.58343781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.583727232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.582978254 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.585384357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.585716242 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.583567436 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.585286648 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.585971163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.586040306 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.585423956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.58485489 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.592376307 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.586207646 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.590796078 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.588434326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.585671335 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.586871347 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.584523772 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.583168432 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.583695035 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.586570751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.583442769 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.58477108 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.583533352 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.586619221 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.585570693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.583396115 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.584489271 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.586153029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.587957519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.584679588 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.582620736 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.583908121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.581383429 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.586060071 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.589172618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.587078427 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.586303747 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.586752897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.588938789 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.5880231 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.586921353 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.590871088 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.58639049 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.589604656 seconds)
  done (took 109.218227754 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.587778586 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.588567722 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.588954014 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.588430484 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.588467291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.588396751 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.589316421 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.588391303 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.589974116 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.588209646 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.591716028 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.588423151 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.589762078 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.586041214 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.59037305 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.583203143 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.587334186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.587729907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.587101405 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.584410071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.590211227 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.586433372 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.593638549 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.589579652 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.593348079 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.589011145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.589727367 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.593541469 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.589354205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.591911793 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.594518968 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.585921436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.589399392 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.591712326 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.587649239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.591418853 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.589630427 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.588178567 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.591800955 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.584209486 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.590481653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.592245774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.590381082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.591898733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.591497844 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.590008548 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.59329912 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.593174663 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.586709176 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.585887353 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.586784953 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.590851463 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.591626911 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.592372536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.589111995 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.590562669 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.591302916 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.590801666 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.585877087 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.594189108 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.593165723 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.587582331 seconds)
  done (took 99.983252622 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.585667842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.591589545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.592318828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.593514859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.593776975 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.593845 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.593799533 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.593547965 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.593252746 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.593432377 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.592651202 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.588041748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.592693247 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.593459266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.592960739 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.593479241 seconds)
  done (took 26.91093679 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.592062161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.593570453 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.592849412 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.58896456 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.5956446 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.593212308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.595178968 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.593763146 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.5977302 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.596399514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.590310053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.5900603 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.59558265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.593644275 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.592669501 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.591368568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.594488517 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.593352968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.58819009 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.591939101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.589138535 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.595837083 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.593491254 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.595148517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.596762339 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.599396124 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.59547719 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.595256283 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.596422702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.594782898 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.596504556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.597960537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.600008912 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.598094492 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.596217717 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.595394499 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.593948155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.5960582 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.597027177 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.598683883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.596847546 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.596634251 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.595261311 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.595212143 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.595976206 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.597283704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.595227229 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.597622016 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.595716396 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.598554188 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.589962802 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.59966208 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.598776772 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.596820936 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.598604963 seconds)
  done (took 89.167103515 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.596746486 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.598468912 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.598418416 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.597386232 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.600503109 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.599153636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.599251832 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.60021208 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.59726848 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.59960034 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.601443172 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.601122042 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.635368925 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.596381146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.598732283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.598230474 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.59931015 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.600373413 seconds)
  done (took 30.255289727 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.600920131 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.595383044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.599374194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.599348074 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.598415274 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.599759439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.598745273 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.600727369 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.599201757 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.600861185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.602203604 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.601219262 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.600264741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.594792885 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.600072049 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.600224582 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.602353344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.601042702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.601326886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.601257395 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.601534664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.602540519 seconds)
  done (took 36.63945066 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.594075056 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.592874834 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.593658802 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.615597696 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.604371268 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.593478822 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.594725559 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.595693209 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.617889678 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.623598434 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.623640269 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.604597344 seconds)
  done (took 20.691715267 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60142201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.60405803 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.598730746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595931787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.600333324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601538575 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601713179 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60203836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601879191 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601037185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601138873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602901458 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.603112798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601183921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602302569 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605044189 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603729218 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.604785916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605792398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606602208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602228817 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605247846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605927123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.609384965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.612049339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606867955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.603366252 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621958001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.632490556 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594793235 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595230441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596595279 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595936048 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596119172 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59730347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595717933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599495927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593819786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604037008 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597355851 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.596622239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599747286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599323559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599072131 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602171686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601838195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600424956 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.59900662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598674734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.60002756 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604813713 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.607960063 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600278779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603272315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600618137 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603637376 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.607527955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602231541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599338296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602276728 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599426575 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594604175 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601365718 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60254031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604201763 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.597390982 seconds)
  done (took 107.182170864 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604387122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.603141154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600624353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599014791 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59845627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601327166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597323305 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600407566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600975236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598676969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599553687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600523573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599335153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.605969376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600672264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600047884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.60058168 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60362229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60049822 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60082801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60802725 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60312537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600135115 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603438328 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603688779 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.607084951 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599691693 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59943314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608917517 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599322022 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602020201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605781853 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602567896 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.604227884 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603756036 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602642557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60289657 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6054617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608142348 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605991656 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606107592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602423814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601454905 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606560094 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607441282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.60287834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599751337 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601680284 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600934378 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604478405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.604714398 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.606069669 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603368557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599347724 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.607001421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604340538 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603201706 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603580455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599719978 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605002633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600001089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603992868 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.610454724 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.607759967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605234367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603933852 seconds)
  done (took 107.240728799 seconds)
done (took 2054.073204473 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.57730386 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.578023923 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.601135801 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 12.055668392 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.596276803 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.250414456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.253234227 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.594687495 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.602013147 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.593284244 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.597634657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.577825295 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.927391186 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.59511227 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.606986824 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.573698233 seconds)
  done (took 60.02807962 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.64029965 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.626749463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.762457223 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.606431167 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.64768376 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872967785 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.680738521 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.607139008 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.820833711 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.614087099 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.577460793 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.633285699 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.606726945 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.586545887 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.624069654 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.878021989 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.975142719 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.586698421 seconds)
  done (took 34.795447243 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.205389457 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.656673659 seconds)
  done (took 6.311698715 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.628645165 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.610767891 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.614833004 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.609410247 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.580647093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.589936821 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.604362049 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.579654647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584952947 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.762640766 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.615263436 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.627069337 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.61118254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.607149205 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.615039664 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.665049654 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.80673981 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.61450014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.603695694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.615064458 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.604417363 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864726024 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.663972632 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.612588095 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.762370131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.592645266 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.625978136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.626956962 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.831287555 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.616783392 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.60196789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.61266953 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.615524432 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.57674045 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.260424388 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.582317835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.652241461 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.627971685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.609458577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.816035894 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.611729257 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.621906249 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.578191752 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.247092525 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.80309598 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909410408 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.593041965 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.61247139 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.616956527 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.819295317 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.612646552 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.612045987 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.720178313 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.579157726 seconds)
  done (took 101.704074173 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.611152229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.576000551 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.844448096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.602171826 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582147073 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583052356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.585326318 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993486741 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.595486549 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.577232482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006934751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.375903737 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.595104517 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.629273877 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.626250447 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.644070451 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.590846504 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.586638426 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.581336006 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.580223924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.277232182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.58367555 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.58058675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.784277317 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.651237563 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.304281292 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.581660978 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.586473252 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.582160553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.576377136 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.339837559 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.585635227 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.640111218 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.578912724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986205787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.138098637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076175888 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.579575377 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.598217762 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.578917473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.579782596 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275100207 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.093523206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.576208958 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.588786116 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.270989907 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580383791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.584683918 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.584576223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945466808 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.587698337 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.583646915 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.578045225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.583516311 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.579254248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.657432346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.660258753 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.275797782 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578470489 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.584846509 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617121144 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.585009938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.589691678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.584272623 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.58355661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.09364466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.775581728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.588988796 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.097277035 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.318917789 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.579597587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.410302316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.588261608 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.605105928 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.700352398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578727225 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.581698623 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295518096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.589088598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.579180914 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.080716339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.582324051 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007081907 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.608611752 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.58028273 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.298975379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.599044613 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.652108065 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.582767404 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.581915409 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.585499106 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.59475552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.99009057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.642473599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.582733461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.584176591 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.618753474 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.58498249 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.580965428 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593769571 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.411921795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.589522593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.583089023 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.591980517 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.587357024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.587784731 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.585063785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.587421836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959490379 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.58761383 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.59219898 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.584871652 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.581307302 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.597964587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.7898466 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.59478178 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.054121128 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.588323277 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582290667 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.5901747 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583958197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.634203554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.599581762 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.596927515 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.584150889 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.03681795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.61328546 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.602658899 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.585029213 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.590681049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.5945446 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.600490188 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.629226384 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.597701146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.544620304 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.622706142 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.622068282 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.586438541 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.592816866 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.596110092 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.59452679 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.587460808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.009791818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006033518 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.891457147 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.588453392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.589737913 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.558317018 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.595331362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.853800194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.612456305 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.585756401 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004652826 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.794083172 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.591528923 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.585317449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.585547087 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965718406 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.595738187 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017980639 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.373325687 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.598662441 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.600003185 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.547897677 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.461682103 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.599905547 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.597166931 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.01048597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.616126953 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.595579787 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.594502415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.603536246 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.592956828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.598052239 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.595982841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.593828028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.590241678 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.662401064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.878240034 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.613880369 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.593180809 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300612669 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.621700846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.586893766 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.604099307 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.602201648 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593581279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.638066893 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.598280829 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.627248689 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.591149475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.593977349 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.374758061 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.593898777 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.619545824 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.876913049 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.49573825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.599376569 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.595730085 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.593645673 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.628189032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.325888648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.596934499 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.057810704 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.602505877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.66722996 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.600726601 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.629749844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.325343537 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.599284448 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.58868289 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.495027196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.601587744 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.372296714 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.589590688 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.599196798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.427560167 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.597104422 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.594529514 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.590138592 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.611809853 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987073706 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.603206595 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.617258451 seconds)
  done (took 562.853134551 seconds)
done (took 767.142948086 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594447241 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.600768785 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.600661439 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596430175 seconds)
  done (took 11.859601071 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.632454099 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.626037781 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.639747764 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.619489881 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.629875768 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.623793221 seconds)
  done (took 11.242573933 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594792606 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.59944215 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.59883069 seconds)
  done (took 9.260942052 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.926468722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.611833599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.109047387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.616412325 seconds)
  done (took 10.734874526 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.631017045 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.630379115 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.631843826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.632132201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.637222932 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.63297281 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.63603542 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.626841444 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.634079375 seconds)
  done (took 16.160279181 seconds)
done (took 60.728678557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.752573774 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.753844396 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.600210054 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.689383684 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.813038446 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.759967102 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.753357812 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.761644271 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.761518976 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.663430245 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.754929729 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.655942211 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.756889965 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.879416719 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.662590892 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.751909025 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.653146256 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.851785203 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.756782479 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.662602975 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.779887582 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.661689451 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.663061204 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.595623857 seconds)
  done (took 44.866626407 seconds)
done (took 46.338370124 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.664441756 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.787544213 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.629057927 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.632390613 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.639541942 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.602807661 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.665785013 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.626611806 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.650237855 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.648048052 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.598396765 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.646117429 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.652419627 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.639980336 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.668094106 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.628575044 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.629789864 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.64204233 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.649313296 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.649656007 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.629999806 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.641679225 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.663965927 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.623823463 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.647722032 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.646164991 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.638708107 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.607471732 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.638389211 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.651928991 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.600096423 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.646040184 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.651967893 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.639640069 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.640346863 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.636451465 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.639548576 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.786162611 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.656078821 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.639568272 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.636687877 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.652248865 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.644267612 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.645831428 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.637933497 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.659499228 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.6514239 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.653933646 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.599376918 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.619856059 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.670184665 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.649158388 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.636912557 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.598493147 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631817217 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.663120009 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.63780883 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.659601685 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.639391364 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.642988609 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.672525745 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.661195673 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.652481087 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.644764463 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.642918837 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.654147989 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.641211148 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.651344979 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.639125269 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.642019562 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640701586 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.635515941 seconds)
done (took 127.974219211 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.804915695 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.602149967 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.853662746 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.638113967 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.853365432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.812012128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.637521992 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.638066894 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.635279459 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.490455874 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.635902373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.635272125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.602738938 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.635500226 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.80860101 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.634575878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.635303134 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.390238522 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.642452228 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.822089178 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.608415428 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.641812063 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.638412887 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.504749173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.604958354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.603262049 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.822522753 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.638519395 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.40252947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.612206552 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.603713294 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.407335598 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.825972563 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.657727634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.647384629 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.647415568 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.863932488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.642929453 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.808699277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.812193785 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.852370053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.679133569 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.609561104 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.608327428 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.64598047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.641611898 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.640280304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.66807944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.606794482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.64404447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.396978974 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.652539335 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.639494659 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.640637612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.639750907 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.670464939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.639182399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.639864539 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.819399869 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.641686139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.815739278 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.505054239 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.495897348 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.643518355 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.608506501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.642683543 seconds)
  done (took 129.562324375 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.760906258 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.768567567 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.812812858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.635657719 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.729485502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.816379513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.635020277 seconds)
  done (took 13.638752805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.646249987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.640631116 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.722786676 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.726356054 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.63957344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.863044945 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643326291 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.653168116 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.642227688 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.727626886 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.642580457 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.641438343 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.648753867 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.606987174 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.726104625 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.653510757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.807259219 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.635103528 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.645190705 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.842225467 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.64250845 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.646105277 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.721563056 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.655208459 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.640701376 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.648457112 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.459384605 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.64594066 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643281104 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.637267071 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.641662952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.750866084 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.643356813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.609471149 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.646298946 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.805640717 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.644996965 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.639090767 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.637167547 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.61258174 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.646319969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.638353243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.641067554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.642342926 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.641855644 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.670720208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.640992824 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.638912882 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.642506006 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.643364705 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.725004416 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.644728565 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.64304979 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.642800526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.732707769 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.6587814 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.6439256 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.644417073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.641889028 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.643491396 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.849186409 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.727000061 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.64671981 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.729010652 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.646852159 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.645921315 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.643203231 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.644909803 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.788885723 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.6480308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.731445877 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.6545479 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.888522975 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.6737824 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.645738959 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.647370452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.647362838 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.646555822 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.609592812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.652923252 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.647844185 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.643641555 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.655145882 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.64660967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.645706063 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.857948277 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814658275 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.650364547 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.663691172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.659228313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.647797391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.735131681 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.648257226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.647318 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.73011177 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.818617298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.734094049 seconds)
  done (took 168.890043843 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.662137134 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.664644226 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.650789392 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.679277791 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.643294514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.646747816 seconds)
  done (took 11.43250486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.646288819 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.652689145 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.648912547 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.650128484 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.650632458 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.648470102 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.651036351 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.641509091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.653116433 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.650708376 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.647614547 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.6476832 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.65112442 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.646554146 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.64994515 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.647009721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.64793023 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.649619899 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.649058725 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.650196928 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.637159376 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.648311912 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.650171017 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.64380205 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.65504545 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.650197278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.674425428 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.649793734 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.647799905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.650860629 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.649613055 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.646959365 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.641726367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.64865148 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.651011836 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.639861885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.655950313 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.65126082 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.647976045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.649447531 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.652417951 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.652538986 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.649901151 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.649921963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.648857931 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.647999093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.6521631 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.67790527 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.651941913 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.651989475 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.65294595 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.657535361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.652146897 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.649923499 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.651725754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.646893854 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.654387475 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.650351905 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.652745017 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.642874139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.656788129 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.651986052 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.649696724 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.655874535 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.652609455 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.655201545 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.646894832 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.658484713 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.6539451 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.650791557 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.652444141 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.653365208 seconds)
  done (took 121.346160992 seconds)
done (took 446.343279349 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.995649517 seconds)
  done (took 4.488362451 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.856177451 seconds)
  done (took 4.347655593 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.337504931 seconds)
  done (took 26.836857747 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.707031949 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.624934637 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.629783997 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.61611955 seconds)
  done (took 12.067878813 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.260827302 seconds)
  done (took 4.748547354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.62939554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.624389805 seconds)
  done (took 6.744182553 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.056621935 seconds)
  done (took 4.54278697 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.480052037 seconds)
  done (took 4.977212186 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.63397622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.62817632 seconds)
  done (took 6.762554372 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.603708545 seconds)
  done (took 4.091562342 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.37038914 seconds)
  done (took 19.863678266 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.631328257 seconds)
  done (took 4.126223174 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.66420241 seconds)
  done (took 4.155426399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.812985367 seconds)
  done (took 7.305777851 seconds)
done (took 116.555536919 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.614405156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.620434065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.619695284 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.619019779 seconds)
  done (took 11.960296628 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.772080933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.776257931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.774029086 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.764954608 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.762306157 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.775154299 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.685818358 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.688492022 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.750836541 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.745797004 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.778462052 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.759622644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.773268374 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.689434459 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.747266046 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.778001868 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.752055411 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.777334395 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.692354035 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.764011401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.65451305 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.760203585 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.747889099 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.655709361 seconds)
  done (took 43.318450553 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.235436014 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.776679981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.862619681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.74336562 seconds)
  done (took 9.109376688 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.826417242 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.825519014 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.837745499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.876673633 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.915130758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.828051877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.686139418 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.685360688 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.669708418 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.826618246 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.89410476 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.819671133 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.045638694 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.657860752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041166687 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.653049246 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.655957088 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.8198002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.869664152 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.899018094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.654417716 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.818014009 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.830352798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.818128548 seconds)
  done (took 44.945452492 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.675190329 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.684308528 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.657028383 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.681714623 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.661872714 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.659970657 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.665331115 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.672003891 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.65835851 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.659195768 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.661824314 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.684407982 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.661652295 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.659785997 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.676546508 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.662916143 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.661478949 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.67514179 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.673223809 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.659524581 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.660312949 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.676584851 seconds)
  done (took 38.181332348 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.629250549 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.625547285 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.066982191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.969550528 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.622198814 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.633581617 seconds)
  done (took 16.041742948 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.752000586 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.95300834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.655862314 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.104795869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.22167372 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.656450866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.658154155 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.993347548 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.356547156 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.339975775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.723160048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.750218097 seconds)
  done (took 24.664302074 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793207083 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637139192 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.654941736 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70832939 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642865409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634365097 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711775848 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259133721 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.667068836 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994262608 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633003331 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800903453 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.974668637 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644194279 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64068671 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.60784657 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963308812 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345563637 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638968265 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632486087 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702014202 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646972216 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640363974 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922754563 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63548123 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636446437 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.984308689 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.631667546 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052622125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007550262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005989868 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63657718 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992208088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213090715 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819039907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913481805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631510962 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657407971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.629075806 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.644497321 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649663411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.64152725 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00252141 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632214404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.633925376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639707256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280731718 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.671135414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.6368189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.638349751 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016904593 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795694411 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.664603928 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.638315529 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651430604 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64982209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.667743293 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835438501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364389424 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652612598 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646844128 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.641499733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647688858 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65669112 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466139374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.669630894 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.664718887 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665559496 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63748323 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642135498 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698415839 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638566748 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.686573551 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634780442 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638929923 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652143335 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64822496 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392844719 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65074588 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.648594629 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94800512 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635034106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635875484 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.64086278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637092818 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635495896 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675403556 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.62030877 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714501754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252587637 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922863795 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686221411 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697797185 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945870421 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.61152574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642447689 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.641269815 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646663867 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6913794 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273854587 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645765708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.667746855 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977484148 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.94143529 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653550636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.619003506 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291232635 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653851722 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.705799879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647070971 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928189541 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.454367766 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033424432 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648659442 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732565642 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.643969321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.665011591 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655652301 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.6765324 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640201593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045279431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.618268845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649587423 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793022912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648263582 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642578361 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639571624 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649426648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641202488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.923592798 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646592978 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01912862 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.643447257 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64310699 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.653933786 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655295132 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.654400605 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955027801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653261703 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999699124 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641589199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644606972 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645986896 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.956024785 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.65813027 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.668334011 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072652954 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65782632 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662045363 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035749727 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710921759 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841026013 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709137803 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.651338833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991624075 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.675382952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.673897847 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643425885 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656112135 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65599557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.676591835 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648661747 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467063165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652781684 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656113462 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644049638 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.692830212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799478342 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677921055 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927796475 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.647841391 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647514604 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.673329409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.661169483 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956133109 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026358171 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.648533448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900651193 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.286612913 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462425076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704324411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.641550018 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.646080692 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.650815931 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649143931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646459302 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649974554 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92247848 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037177144 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646465168 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463363672 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655869996 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650253639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.683499976 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025534044 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.683772985 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650689798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.661346879 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651660382 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684028535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031269898 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955267636 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.696884429 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651961608 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.250134811 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67946287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.651581322 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645368451 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708001695 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658201996 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389778756 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08791111 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671550412 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029351219 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650638953 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.700782201 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.649664598 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649428464 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663821984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.673021339 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.67962993 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.931033898 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655728707 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655403387 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37616655 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660801768 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413047986 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669935821 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.670695904 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658589755 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297662363 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66451502 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653281469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02864666 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298621215 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659921838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293558629 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.676269936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.652289373 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030857765 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965443091 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65687124 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.671839415 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043829805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957537058 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713536407 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65588578 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662629305 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.627166206 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388621625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677217822 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918256784 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299689507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665391179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.670732012 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.746288477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671255751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213286201 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662023013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658607914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666006201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669433033 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400934504 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673366006 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657796917 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479902507 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.669699757 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.313801147 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662936117 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938507334 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027525637 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.014412726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.656125755 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.684635665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.0003344 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034417575 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661022607 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.673582304 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408653572 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.629131749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.687055735 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659429806 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.670567884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677195473 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082547299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.657693342 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.675857034 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675444552 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664664481 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660307013 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.660950181 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673307618 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660585889 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345303058 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.6578442 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65808159 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666940747 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667889262 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999276234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.709197028 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474231045 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992725262 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670152748 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732602729 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.688684644 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672914901 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.650447868 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666832633 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.661542924 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69376434 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978017805 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.658579559 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.638333757 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.733282144 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966176984 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659418422 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.668586557 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989092677 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.660146727 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.681088845 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660922244 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728918321 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670823364 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670211903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653039958 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732853947 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820152828 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946208034 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.037170649 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040053976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214084138 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676478063 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671169358 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.70972 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824163883 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662371312 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.684736027 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.664674956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476894862 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674504488 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491664269 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050691572 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671180114 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666390537 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665556912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98954043 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661872994 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027108056 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664944613 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.663701858 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723234567 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676995378 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679070223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968407295 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015882117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665603426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67958188 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671616342 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.66436542 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051248067 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.96778508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367915152 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477628684 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672926704 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.688810218 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320643289 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035500673 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669301523 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66935998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670654278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.694900797 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.675021104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.704729212 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68177322 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98479674 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037021398 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254602628 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04549566 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.694775502 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.62606013 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667689725 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008363773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.584196217 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95326361 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488141963 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.589971043 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004841258 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81956665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949294041 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.667173458 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992593821 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.672564577 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674363479 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665369947 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669255567 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.664404461 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035670388 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483828425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006214897 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.697960055 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.675231536 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738666349 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.954774067 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972991678 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662361324 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982284968 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054241255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678358052 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672499485 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477089929 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047762498 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667608989 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.695802867 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991558494 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.669079636 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.739134006 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.63006455 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.668912227 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427513373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.979056974 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72197065 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679994852 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595544238 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475816722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.688718097 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.367215551 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679784909 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682422465 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042386186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.702459579 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675173149 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048305305 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.700499694 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.676698273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964243707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.474408093 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.677204483 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.680069721 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670826507 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.681003429 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674715269 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750434046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675928552 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674888475 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.221373193 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.677515696 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674119802 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712946038 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.681696883 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684744198 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.678413226 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673172196 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.703214704 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.652111417 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.658806263 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.686312694 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87994444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421610528 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68472143 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.372792937 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.093833021 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008268579 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.679529918 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.656587894 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.708461041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672499065 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676273569 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673319771 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667800703 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433960422 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.695571972 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.051166213 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699135623 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.973306662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972830693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67606132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967442368 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.67758414 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728432994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.651866624 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678966858 seconds)
  done (took 1137.992778091 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699987617 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.705826139 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.722011787 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.736075936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699270208 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.828893395 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.730207801 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.809088712 seconds)
  done (took 23.46356726 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.681736135 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.707529987 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.67969607 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.706631479 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.679131683 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.322558196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.683725353 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.702574747 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.731337902 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.682074725 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.68501623 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.492700014 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.709744724 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.681764001 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.692119507 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.710787315 seconds)
  done (took 38.092519797 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.202202808 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.156477999 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.557601633 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.778287938 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.701400227 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.698050569 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.212316385 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.702390018 seconds)
  done (took 31.543642946 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.721474568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.722475463 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.721082269 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.726734384 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.722723051 seconds)
  done (took 10.149227356 seconds)
done (took 1430.955235057 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.709480095 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.709541416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.709108749 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.710487276 seconds)
  done (took 8.371916568 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.659184593 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.656639088 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.660547616 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.696344068 seconds)
  done (took 11.207185076 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.197928312 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.40078707 seconds)
  done (took 6.134802896 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.681879379 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.53000853 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.511866209 seconds)
  done (took 9.260552407 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.071596326 seconds)
  done (took 3.606723523 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.188611345 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.301393774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.679465105 seconds)
  done (took 8.709840127 seconds)
done (took 48.828226063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.681313944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.443279065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.839426788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.681886712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.839767403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.83784139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.959281763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.680797048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.668961954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.685628039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.672632882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.839511784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.948788739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.450810679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.954258918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.44768584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.844900947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.692668949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.685896859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.672686799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.956334741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.679355315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.682539169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.683335151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.847359779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.830595287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.676004051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.44358036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.691872759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.682908769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.830351262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679854819 seconds)
  done (took 92.750000125 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.679576502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.67302986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677516254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.672155796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671950114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.680729931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.67633021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.671418132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.672949542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.680754095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.673251676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.671672145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.672600336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.673168215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.674516431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.673112063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.678063041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.676030171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.675354037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.691660511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.670893624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.691109812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.674178958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.689154466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.690729177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.674148857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.686648281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.672361478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.672513872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.677243174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.683328097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.683406738 seconds)
  done (took 87.220868802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.693288861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671541053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67544539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675506502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.674078667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.69696782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.674627828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.67413845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.673561911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675234958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.692362416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.706782197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.675659803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.67678334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.681673626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.675645345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674251453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.69854288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.690724428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.692499305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.676736686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.690043336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.682671938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.680603728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.687450618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678818515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.690998974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.675823511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.694689109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.685996452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.687838866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.678770045 seconds)
  done (took 87.399932493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.020392328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.718465805 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.721146592 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.689868454 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.722939139 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.718102421 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.689497386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.016405858 seconds)
  done (took 17.8404112 seconds)
done (took 286.750763146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.692165044 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.689137634 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.749812249 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.690194612 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.734575186 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.754105881 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.0094871 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.750944377 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.998078457 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.700266912 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.733457166 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.69749987 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.687140453 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.91953048 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.703030811 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.689742181 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.682042248 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.682495658 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.697816182 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.054213388 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.752884777 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.692033114 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.687413393 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.713793842 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.669235522 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.793247801 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.806116336 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.944262745 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.904229791 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.797345179 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.699842697 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.702728329 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68832126 seconds)
  done (took 77.708346853 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.711438165 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.726568511 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.722073456 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.719280084 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.72095439 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.72498507 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.711597404 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.726422822 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.724793426 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.725267997 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.722069546 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.728836188 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.729185394 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.722385019 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.724261305 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.710330832 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.719390574 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.721800517 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.713904122 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.71056934 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.725820791 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.723956657 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.725148219 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.724874651 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.721972676 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.72373505 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.724043818 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.724492339 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.72061978 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.72461952 seconds)
  done (took 53.198487463 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.726103299 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.687932592 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.696907407 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.726817496 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.718189373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.7194623 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.125872781 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.725577953 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.720131869 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.723695939 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.693094213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.726297038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.787931761 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.694332359 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.718474116 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.728340385 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.722993755 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.722524073 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.692493438 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.738461644 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.140141424 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.730487515 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.125296589 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.741104438 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.722501793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.726142201 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.736642977 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.692104142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.725289298 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.695883603 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.712168077 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.118679058 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.703213865 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.688465342 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.713596191 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.734743782 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.729205089 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.693877273 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.728884379 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.725170917 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.125062202 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.728061648 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.704453827 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.695791344 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.725044784 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.729231699 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.689405406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.696359153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.039787043 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.739281092 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.691457413 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.72685968 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.735014278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.719945602 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.039003843 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.730353559 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.72167606 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.690125539 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.737645688 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.125025187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.733272716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.72407399 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.692304657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.717965881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.691393089 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.719138307 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.74718489 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.723179393 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.69300321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.723830313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.695769204 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.727713559 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.732213223 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.693847381 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.716156433 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.693427425 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.726761064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.701425929 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.690452326 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.121145573 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.736870729 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.695914683 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.150056372 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.738110342 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.73261963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.731227832 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.727420924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.8507306 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.115137406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.696691039 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.691002186 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.691346364 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.132244121 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.740399669 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.731714557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.695530696 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.737960812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.727647419 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.70760339 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.700041884 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.72514354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.749352903 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.696438703 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.731693814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.130202451 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.738379999 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.696018537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.726388181 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.908228274 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.731465153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.747442186 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.72860194 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.154210252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.737675789 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.733795059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.692367934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.703120418 seconds)
  done (took 246.448007676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.696825274 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.696154588 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.698346347 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.694348982 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.699978468 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.725514677 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.699808614 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.700406316 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.730037807 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.70184749 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.700960437 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.735758018 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.730842728 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.704342361 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.711124089 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.696206201 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.698545744 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.712162909 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.697418016 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.704204703 seconds)
  done (took 51.69144163 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.733031135 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.502605184 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.449016526 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.73522932 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.732039947 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.726756315 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.807753975 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.777331741 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.732559497 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.155941548 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.966078438 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.737786069 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.733420989 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.732979522 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.446728387 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.716713976 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.157588546 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.506301744 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.741720857 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.524364097 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.708689981 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.733250367 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.72524907 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.472987941 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.151394182 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.122518444 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.808837422 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.506130144 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.735109541 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.734075961 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.464125989 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.734196716 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.72682434 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.455361258 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.730588157 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.752009875 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.732188081 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.804716438 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.813237982 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.144340143 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.489165068 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.117832513 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.745336541 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.962997389 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.739772774 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.711381525 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.473854392 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.730831693 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.71055202 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.736464463 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.745500249 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.450736927 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.734729325 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.457558045 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.736947694 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.73732812 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.50192947 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.46235251 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.455558 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.96499073 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.731171261 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.124698958 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.734099846 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.511041243 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.743605315 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.731564258 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.734671008 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.957484189 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.512206196 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.127809269 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.167987214 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.167068871 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.734639998 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.814177487 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.742041848 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.142436619 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.81216962 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.209960918 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.140178999 seconds)
  done (took 158.737054276 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.109097044 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.857178766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.272835254 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.486664052 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.39978338 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.935298406 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.880131684 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.066848165 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.72085333 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.899508311 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.611269701 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.864576215 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.626798701 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.824314321 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.863325078 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.928191218 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.293714235 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.699984265 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.587458992 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.589811176 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.709951734 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.894399979 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.609961504 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.210448131 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.705984818 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.608814781 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.707107308 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.42035548 seconds)
  done (took 65.945688556 seconds)
done (took 655.273879607 seconds)
SAVING RESULT...
DONE!
