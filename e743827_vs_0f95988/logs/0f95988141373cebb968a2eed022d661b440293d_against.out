cset: moving following pidspec: 20961
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.165244547 seconds)
loading group "string"... done (took 0.640493739 seconds)
loading group "linalg"... done (took 9.704831459 seconds)
loading group "parallel"... done (took 0.171479138 seconds)
loading group "find"... done (took 2.44314944 seconds)
loading group "tuple"... done (took 2.361510287 seconds)
loading group "dates"... done (took 1.426774033 seconds)
loading group "micro"... done (took 0.646610997 seconds)
loading group "io"... done (took 0.683181011 seconds)
loading group "scalar"... done (took 54.61076929 seconds)
loading group "sparse"... done (took 13.481902064 seconds)
loading group "broadcast"... done (took 1.332667792 seconds)
loading group "union"... done (took 2.542604126 seconds)
loading group "simd"... done (took 3.520066064 seconds)
loading group "random"... done (took 13.595049133 seconds)
loading group "problem"... done (took 2.206517673 seconds)
loading group "array"... done (took 23.384929397 seconds)
loading group "misc"... done (took 1.600203979 seconds)
loading group "sort"... done (took 3.789607323 seconds)
loading group "collection"... done (took 21.559734797 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.918489844 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.18018723 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.245729711 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.570990557 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.31587236 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.205153951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.20451218 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.19131972 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.63586375 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.233034732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.197819779 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414113974 seconds)
done (took 7.119924887 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.305226035 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.106345087 seconds)
    (2/2) benchmarking "String"...
    done (took 0.244836722 seconds)
  done (took 1.006469817 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097733727 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147646708 seconds)
  done (took 0.904629423 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.137377525 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.21006966 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.152359529 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.152713274 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.138354535 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.153471192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.137143697 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.153799237 seconds)
  done (took 1.757817108 seconds)
done (took 4.772315391 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.537763775 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.939014033 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.572386475 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.218273706 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.35658047 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.366527126 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.325921264 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.277429203 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13657889 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114065273 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.242722346 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.487796458 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.450974317 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.963021695 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096617733 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.154720932 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.204877171 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.818269419 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.183499592 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153117795 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.545154659 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.254671352 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1603764 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150492881 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.229172508 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.169214115 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16841576 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148088245 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.724654371 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177678251 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237837297 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125733797 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167656655 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205082783 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.2830941 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156890062 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.722461145 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24277801 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124117949 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142961127 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729784074 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.16077226 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.254639434 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.150889928 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116049255 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181112137 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.141364136 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.136371741 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.137299862 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143552403 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200296141 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.506567281 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149381635 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.241517095 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.152030925 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.72657347 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140561939 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.320812095 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.182190696 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149517407 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120869491 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.147968537 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199996801 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138360751 seconds)
  done (took 22.952480061 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.256060914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.260989125 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.124850165 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.209610733 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.187362932 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.123502996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.151603217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.124384741 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.175662841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.2428262 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.16779089 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.261147664 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.140610967 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.136550744 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.234990009 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.300512796 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.172828891 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.152423852 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.153172481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.141107678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.195480096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.138239367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.155380024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.156207225 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.217110919 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247471414 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.156065237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.17148291 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151942855 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144025089 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.190795282 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209725343 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.11990163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151361077 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.242282835 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.15170309 seconds)
  done (took 7.202319932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.285876438 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.148914677 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.315553116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.236167881 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.148777578 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189879244 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.225786813 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.241919032 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.339881909 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.38737028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227326603 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156965351 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.157676754 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123332094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.139951736 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.123148901 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.89025895 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.223820292 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209134067 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.237782053 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127620768 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161865975 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.144053794 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128707289 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144973044 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.153040761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.150513693 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.349983752 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.269086384 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137187278 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.528112339 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144789781 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139975761 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17560173 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.250846913 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166419836 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.179405077 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153657878 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.129795626 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252535606 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159923898 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.121250265 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.139673348 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173556428 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.159571409 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.151786062 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165457354 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177617838 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.131816064 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168525341 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.218576748 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.243067152 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.225070171 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.13147915 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328191245 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.172605469 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.143220796 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152949618 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.91231811 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162953962 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141650554 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122935326 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155162957 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139969755 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.86761899 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163578623 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.251432043 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.125781148 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204023152 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154877656 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.160038298 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129981473 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146100143 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.150590099 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.1468142 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124303866 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.149039134 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.124063123 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.150516556 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.143722536 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146136251 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.123972329 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.20828361 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.14410806 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.26176548 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.15145662 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.151554398 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.128773219 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.17235851 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172964174 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126157733 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.148199852 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.248487744 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159106476 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.143680561 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158269707 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.189523961 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.145102041 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1271844 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.460162078 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.126509872 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.182140969 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142825844 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156889923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155868773 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126646831 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.145942512 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.139978973 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.127251237 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203149926 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.131178902 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.141393818 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.1335299 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.154118551 seconds)
  done (took 33.309679535 seconds)
done (took 64.124448649 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.497659024 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110122384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.132264165 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10851352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.127000787 seconds)
  done (took 1.719700669 seconds)
done (took 2.441709871 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.238648295 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.341391248 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.255395327 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.14786133 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213156226 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210676651 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196132972 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209089926 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215849515 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.234032274 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.125847218 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233234198 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223941815 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.213751623 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.126122882 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.247217332 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.2090666 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196227258 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.24481088 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149986671 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.159171219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.148992061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164547392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13102567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162670686 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.147420422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168106572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148978372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.156772589 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.131510718 seconds)
  done (took 2.403450397 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.189814362 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14992095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.161497283 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.142693634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165606046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135268668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146962194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165701029 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.167857798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.145310867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.157131365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.132161638 seconds)
  done (took 2.404411134 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.123044208 seconds)
done (took 9.956441528 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.288200546 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.035189322 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.20115442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.311810601 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382885491 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.323079702 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.684741195 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.260935067 seconds)
  done (took 16.337187013 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.277274994 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.144412009 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.159277936 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.140214687 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.155482971 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137460008 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.159257402 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.138946021 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.15231064 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.137548916 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157717821 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.14114211 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.152456887 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.143521393 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.1568557 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.139810447 seconds)
  done (took 3.291339702 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.187080354 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.181314677 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.143811724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.163862667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.141028828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162680604 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146612219 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.162078572 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140122567 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.157641904 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.14710488 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.161484013 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.160416907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.141250713 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.160874089 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.16766755 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.157686672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.145274409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.177954124 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.145557406 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.161637384 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.143599406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.160060857 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.145387901 seconds)
  done (took 4.567124213 seconds)
done (took 24.931135098 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.203001024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153489211 seconds)
  done (took 1.099128947 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.218158748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.235494541 seconds)
  done (took 1.204867882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162342502 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.153761173 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.169094618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.166120496 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137411957 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.153972862 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.177873248 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.139689272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.153254335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.138249494 seconds)
  done (took 2.306304733 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.14686288 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.163723334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157387891 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.229195207 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.164873829 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.139925755 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.158706704 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.140937265 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158996336 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.138376466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.158315523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.155187262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157527923 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155563707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.158807067 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.142454987 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.163778648 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.157650215 seconds)
  done (took 3.600417204 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142285482 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.139882383 seconds)
  done (took 1.033287823 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142336605 seconds)
    (2/7) benchmarking "second"...
    done (took 0.15194991 seconds)
    (3/7) benchmarking "month"...
    done (took 0.140627799 seconds)
    (4/7) benchmarking "year"...
    done (took 0.15481445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.138830644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.153123033 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.137402459 seconds)
  done (took 1.774567073 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.602295516 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275499838 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.400904403 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104435278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15649546 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.377498005 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158503256 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109485222 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107432027 seconds)
  done (took 3.074999901 seconds)
done (took 14.844941456 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.144241527 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.340939095 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.664304518 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.176916492 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136537544 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.215339883 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.397919037 seconds)
done (took 2.841593264 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357795778 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210948334 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.124019542 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.145166784 seconds)
  done (took 1.595729248 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133992389 seconds)
    (2/2) benchmarking "read"...
    done (took 0.167303748 seconds)
  done (took 1.068540909 seconds)
done (took 3.428777081 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.16332454 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.159795041 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145794098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.162580102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142378581 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156503142 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.142123381 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.154447644 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.140493215 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.155516773 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141004733 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157845352 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137361881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.158088259 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138176929 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.158089517 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140516891 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155505879 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13739743 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.158037206 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140448866 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155226094 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.141185621 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16227322 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.142839254 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159853218 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137798039 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.15592339 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.159536349 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.147565413 seconds)
  done (took 5.266940091 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.264788979 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132118267 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.15445791 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143315221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150808144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137458751 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151380912 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.137143418 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.156052735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.138442605 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157447746 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136546554 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.155283713 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137698586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15646431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.140273145 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.162259461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.137976624 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.154380246 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.138181469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.156715878 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13686517 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154315573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.137409373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.154215351 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.134822452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.153449681 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.138444979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136633926 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.154310335 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139022148 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.158765511 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136885144 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.164151391 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13944336 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.157127174 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.144443647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.153147967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.138579913 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.153443814 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134960808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.154675396 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.137607164 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.161174616 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.137388002 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.155857879 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137491855 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.155822119 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.139191513 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.158175491 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135859525 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154393795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.14014785 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.155558678 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.141192116 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.151447192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.139493996 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133738445 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.158471759 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136917551 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.154153611 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.136114935 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.160037599 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.137700611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.172589964 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143164155 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.157852406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.140360726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.157509205 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.14294199 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.15858986 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.146940334 seconds)
  done (took 11.485927994 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.145210365 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138971583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157400393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13756952 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.156208551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.14065392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.156203383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137380529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155574881 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13760011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156207853 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137480681 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155204164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13804423 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15617838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.138925767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.155814786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.139700447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.157196806 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.139379596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138148713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157644069 seconds)
  done (took 4.012357158 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.29246715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14693321 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205349507 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.171634675 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156602736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168698897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142632872 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.16383075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144815622 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167600363 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147577775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.165103118 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.176365445 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148788054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.167908783 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.150067687 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161770921 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149001769 seconds)
  done (took 3.809556369 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143097945 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137675328 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.160525301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137957488 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156982812 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13952724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158073383 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139640941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.156207783 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.140062504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.157017104 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139348167 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.157730672 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.140211405 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155581656 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139790681 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.157659714 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138953214 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136995494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15804426 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137737627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157219364 seconds)
  done (took 4.032403841 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155962501 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158693155 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158501859 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162382102 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141849672 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.159516234 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145640867 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158912247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147145248 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.158568698 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141484891 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15846219 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155494634 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161035981 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146999279 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1594436 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141896187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160111352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142458897 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159283174 seconds)
  done (took 3.862165713 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.257650991 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.156321555 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175808809 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164739664 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175801755 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156603783 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1844993 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156815822 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176715069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186903446 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157143726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.176689857 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.165387163 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181067718 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156432393 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184805973 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183621814 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.165147677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.175833952 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155534443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187921593 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174364701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165081538 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.175811393 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.157059707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176769616 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157688209 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182034182 seconds)
  done (took 5.660269089 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.155331135 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167878471 seconds)
  done (took 1.117110981 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146140791 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140762103 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.16198666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141305748 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16146341 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.14151618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.162469403 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.141378244 seconds)
  done (took 1.989240671 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.255400216 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.258762025 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.146116765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.173014809 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.25724186 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.237725063 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176030136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166027048 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.142536422 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.155820583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.251908012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132901049 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.162432527 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156768399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.143556803 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165918236 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.142692517 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.169959951 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.147514778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.161367937 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.146785007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165096623 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143534104 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.171169602 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135888789 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.163376222 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.145297666 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.171887291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137544655 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.162662514 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.13868705 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.162926305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.145100924 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.166111347 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.150085566 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.257222304 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168425747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137742306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.164309512 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145735292 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.188661631 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.142334581 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.162649804 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158758876 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.145831813 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.165297137 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.146099724 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161267645 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.13415442 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155871008 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.14322394 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156687104 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141407508 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162011803 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.142638809 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167604205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.144993508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.158537898 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.138457271 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.15742805 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.141462681 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.158388089 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14549441 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164832064 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143522232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.162122781 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140835507 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.163881105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.142659482 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.163248623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.141290453 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.176992759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.143775756 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.169594612 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147363082 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.164810414 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139633329 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168685138 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.141372167 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.16276567 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.146047552 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.185988945 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143778618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.159224577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.137792942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.169912808 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.14398507 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.166671614 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.134985531 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171228268 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144353622 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.16427522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.136795259 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.162075778 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.138132091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.166663233 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.135328662 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165350496 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.142440879 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.168549367 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148611566 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.162737385 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143879749 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169806579 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147714873 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.1624048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.213777045 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139740465 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.162323155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.144406841 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169101253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.138256268 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.162429873 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.14193893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160667499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.13928538 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1682707 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143889247 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.165940376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.148034397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165380947 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.144990784 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.16522115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.143423266 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.1596196 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148021687 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.172216942 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144090809 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.167682217 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.145080461 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.16503209 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.142719056 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.177626847 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.140263157 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170797208 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.141462752 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.164891569 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.145354238 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.169924472 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144474727 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.159642088 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142830174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.165183924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143716599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.169095804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.144655826 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.160480463 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135369728 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.164952611 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.139024872 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.167180338 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152536296 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.160760317 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.14560399 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.161808076 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15309782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.161987079 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.169315735 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149082017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.14998255 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17039576 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136425938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161553854 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.146158391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.167662312 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.160533054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.145918555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143599615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171717088 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138423539 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168357512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.137705291 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.161935117 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.149055756 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.167642408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.147693642 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.162436368 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176727921 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176823534 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169905893 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.144828473 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.164824662 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.149369065 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.16313534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.150737674 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170002833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.150676354 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.160145365 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.14337738 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169730382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.140739685 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.166150319 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143631812 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165999671 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.138561405 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.165929829 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.138922694 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.168646795 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.147371394 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.169715926 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.150481077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165845601 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143816612 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174162301 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.141660333 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.167437284 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.137958745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.169502141 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.157368126 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.171078529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151499014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.166467328 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143872415 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.167746122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154747053 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.167136478 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.145210505 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.166990579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.139252135 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.158845967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.152522259 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.168456757 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.142750136 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.165350217 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147393184 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166078661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14349171 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.158785415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.149894201 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16753604 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.141490409 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165883594 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142810967 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.163299258 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.153347364 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.159025041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.14109804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.168273703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.149550093 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.165118483 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.145517108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.169251481 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.152716907 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169853164 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.147682817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162113353 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153083922 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.163974343 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.145600917 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.162014457 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.147219838 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.159357974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.146579604 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.165725055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.142877317 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.160628526 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149398048 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170798955 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.151233268 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.163707549 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.149475572 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.171168275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.151736335 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163968337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150196195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.161153873 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.138512446 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.162537428 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.138718617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.166681601 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.141602504 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170439132 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.143327514 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.16493543 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.148623159 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167118668 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143224987 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.1709635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.154846926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.161503498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.139449716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164299035 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143864733 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.163664178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140980777 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.169040002 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145843685 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.17168105 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168164681 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.145694785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.145157355 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.176711717 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.142385705 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.172280148 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170742034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.153994304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160588997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.151814627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.163798064 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151988601 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.158852952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.147028823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163756229 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146403045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.161936724 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.146967223 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.16199993 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.14133585 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.162636883 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.154084748 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.16423101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.151334398 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166808363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.145018162 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.163558159 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.142586986 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.172096745 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.147089375 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.174349057 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.14890881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.159483689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.141484751 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170001995 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147230943 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.172276936 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.142310694 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.16929171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15379777 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168982313 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.147292892 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.175319501 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156649459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.173178446 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152445224 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.160284768 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14482526 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.170615761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.147089585 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.169741068 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.149095007 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.160204869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150792848 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.172004275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.148221013 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.164088324 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.14235239 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.167594218 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.154670088 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.170589501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.150980373 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.169116338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148894074 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.162627244 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151453897 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.172937704 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.148391706 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.172906275 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.148042849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.169619266 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.144720499 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.172663577 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.151043439 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.161280216 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.142350714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.164950515 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.15484483 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.160945816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.153071351 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.170984662 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.145018651 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.165430324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.15254817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.163193797 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151558449 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17130286 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.148232397 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.175945349 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.150277001 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.164677576 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.154398335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.172927577 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.142529088 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.165522724 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147414347 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17413206 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.147529515 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.172054211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.149623566 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172240409 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.152161319 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.171686009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.154384088 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.172496377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.142246371 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.173901304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15153582 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.170899316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.146236893 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166041855 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.143431438 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.167206877 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.156361295 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.165070293 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.157640646 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.172437501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.147495782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.165807468 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.154218703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167262611 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154713738 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.165565817 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149678322 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.162149879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.15019808 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.168061734 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.155781332 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16616701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.144569641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174231374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.154500443 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172418015 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.150798994 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174275374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.142473075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.163071855 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.152117668 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.165919703 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157916869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171251177 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146490277 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.167846903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.151275243 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.169181431 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155099053 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.163554527 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.147198118 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.169351633 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151372392 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.167446573 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.144420809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.172618319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.147793026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169927685 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.14776446 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.165275347 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.147574702 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.177160098 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147644893 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.166940084 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.146773692 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17681173 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.148964125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.166772744 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.144166028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174873634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.149519154 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176710111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.145584854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.169910992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.146050206 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.174709648 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.155063433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.168382026 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14826187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.168745411 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153752303 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175433413 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.142531114 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.167075017 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15946127 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175819216 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.171646409 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.153451287 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.147663889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.178065939 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176870676 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.153697758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142208237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.16540602 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.147025749 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.165741817 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.152131496 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175480276 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.147415394 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.168959195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153261459 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173788929 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.151134722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.173147787 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.143255229 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177584384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.146260848 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.173183685 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.143187552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.164384242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152317135 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175738968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147859235 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171630555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.151045464 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.174276701 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.14395406 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.169466522 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.152976158 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.176295044 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.156497485 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.171102624 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148510435 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.174725711 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160984019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.173355005 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.148447998 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178121952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.155718825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171107932 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.149256759 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174489089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.176135737 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.153840094 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.176334924 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.149172321 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168839697 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.158370768 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.177734613 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159432775 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.170309367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.144072441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.17426867 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.148286734 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.165350077 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.15386789 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177151648 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.158045656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.170832687 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.147798752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17921448 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.15642464 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.171354123 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.147461698 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.168401792 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.154219262 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.169014579 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.154696697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.16736849 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.157573878 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.177816047 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155445885 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.179971978 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.145465216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176772339 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.153783732 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.179661324 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.151865611 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.166367665 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.145259534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.174502777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.158989282 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.177094238 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.154721491 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.175130511 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.155422628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.172005323 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151433223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.168814903 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.157978678 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.176598016 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.152028621 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.17333538 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.150367445 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.172175526 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.153460437 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.177281342 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.157522336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.172306199 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.161757232 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.178456632 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.149081319 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.169510592 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151405706 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.174509622 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.151544271 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176790638 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.148686575 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.166522713 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156960043 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.180524143 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150247528 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.180696023 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.159130361 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.169570866 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.155165541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.179261623 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.155761916 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.175573025 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153255523 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.176155501 seconds)
  done (took 95.665107765 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.20364524 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181680226 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152924195 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175262232 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170349246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177702696 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152909529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.177055965 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155120145 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18491716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153153135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175166269 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16765456 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19587442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193034883 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162291867 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176503591 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155023694 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175146085 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15434777 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189755555 seconds)
  done (took 4.517060655 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.158415745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.15242455 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.173920092 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152841573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17469477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.153389687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174983914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153253357 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.174530994 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152690367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.17609453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154434303 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.174709088 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153190081 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174513463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155630196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.174802885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155250818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152853934 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.175496479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153053961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.175440746 seconds)
  done (took 4.485012864 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181363845 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.157327339 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.174619133 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.153640208 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.178506569 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152824881 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.180561019 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.154313478 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.185505783 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149549954 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.169041119 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.149593744 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.174795762 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.155933796 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.172460968 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153793929 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.185283827 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.15774478 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.180795896 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15500358 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.16772475 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.15508739 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.177699762 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.146223343 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.181313281 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159694051 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.179693311 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.156989167 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.168316027 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.158364203 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.177054149 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.149105902 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.167907525 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.1472938 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.166893499 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.159758654 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156988888 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.178907038 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154812773 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.169689106 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.155670773 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.180804696 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146202251 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.179301292 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.154518532 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.172515793 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.157086037 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.177896156 seconds)
  done (took 8.819262911 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186909523 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.215991433 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.158231504 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.208977203 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.193054857 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165145861 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181561147 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184485611 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.181966086 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157451866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.19276299 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.191644133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.160719251 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.18484669 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.161375758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180634422 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.161057492 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179058384 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163499842 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181356582 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163822089 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.185016963 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168407239 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191070177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183340284 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.161315835 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.180253858 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.164178769 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.189232094 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.164261601 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.184242773 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.163649302 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192722134 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.161714419 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181189452 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159325707 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.192200837 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.181922854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.162304369 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.178900963 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.16265141 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184715877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.162200375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.19370501 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.160972425 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.18268175 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159956025 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.178857731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.168235011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.183614969 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.165323258 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.193465035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185189541 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.161563422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185033097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.170210192 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.184150931 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.157743104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.184730334 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.168814135 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.181301407 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162414369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.191555854 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.18161283 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166185658 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193583486 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.162031988 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.184972125 seconds)
  done (took 13.002330255 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.192915733 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.184960392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171366974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193619175 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163710972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.187279402 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163604603 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.18794038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.184874277 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168712516 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185314627 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297135202 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.166914452 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.192133162 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.163489575 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187772342 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163202667 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.186666755 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163358414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187313415 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.184852207 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173291589 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.186698322 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.170698174 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.441344462 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159789593 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185230538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.185689535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172703037 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.185641414 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.174093437 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.187089783 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.164485651 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.194012661 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.197066401 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.164959943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.180962049 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.164975518 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.186608646 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163907365 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.183328621 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17158432 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.187974463 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.161178318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187695725 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164353023 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.193754597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.196447816 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.170027418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191608723 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.163366095 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194581867 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.186074779 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.165574408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.194936661 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.178666854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194260737 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.170605424 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187421948 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.194200952 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173361571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.20181009 seconds)
  done (took 12.445447008 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163013537 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159123447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.181671985 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158868527 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.182749426 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157854989 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.18251448 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.160032781 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.183910189 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158754894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182236862 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159193218 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.182073503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160402591 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.181584125 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.16016073 seconds)
  done (took 3.637068443 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.179663629 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.198546687 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.262190884 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.162099035 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.18390942 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16735075 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.183255636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.163457168 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.18236062 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.165139715 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.186514361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.163036584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.200431703 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160812069 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.183438341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163081771 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183076843 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164708724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182298182 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.264944096 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.16352254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.184555033 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.162133676 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.18603064 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.16174906 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.187133713 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.16742136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.182564975 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.161947829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185783122 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.162086952 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.191165231 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.159234216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.188233015 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.161320025 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.184325186 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.161408096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.183622791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.162525206 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.185382023 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.161654985 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.184926518 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.160328419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.186841009 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.159513511 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.184751566 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.158222286 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.189833288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.162000001 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.186851344 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.160048704 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.18999085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.164940947 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.192960572 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.166705627 seconds)
  done (took 10.72172404 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175541876 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184854442 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.173544974 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.18230824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162823499 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.186164037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.162710984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.184743046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.163628001 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.182936112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163593219 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186002005 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162984273 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.185722431 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16266852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.186256437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158963091 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.184385878 seconds)
  done (took 4.082765833 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162214133 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158170742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183484436 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158372095 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184773846 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15849739 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.185072418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158454577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183408449 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158556267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182973268 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159656965 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.182445407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159780234 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181170245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159712139 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.183400766 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160851809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158659352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.18309968 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15973812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183776442 seconds)
  done (took 4.677398921 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.174962892 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.28810214 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.192707886 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.297672769 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.157153015 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.181383541 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190010335 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.160045701 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.196042388 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.157747993 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.181030214 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.158153002 seconds)
  done (took 3.276421324 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191009206 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.220379282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161783352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185999839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171647805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190648475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166494636 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189575714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173532542 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19893703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189050228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173571444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198011982 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173300808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193800762 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194257244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166993791 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187541447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164659557 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206440358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165472159 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19882249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16549395 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189790685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187400297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176821438 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196803658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177036549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189753948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173712384 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195045124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189631168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174155945 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200536884 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162609924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197710757 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166201442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204696491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194997841 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17410985 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18604817 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171697322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199230852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171746002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197851277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18882471 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172907742 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190110558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166828128 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.212208061 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194163377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175854625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194774699 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174719145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198351899 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210579013 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176859083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199338826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172898453 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200408166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198666744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173902701 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201346554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17810107 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19494546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198849798 seconds)
  done (took 13.227881143 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204831773 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187357973 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169183596 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203087837 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173650434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191312736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190154698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169991519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190683327 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166751373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.233470192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168510255 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199742509 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197267823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169728147 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191793244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167599944 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200325964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165299232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.212075711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191536927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175895761 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201822383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176392194 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202801418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194413759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168939989 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190207777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169603272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190914781 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172669723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193020425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17515286 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.190356819 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176174219 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192159352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191743727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173769723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192268234 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172293977 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201235855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182453299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192397791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191125491 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179749464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192548089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168067112 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188836933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169017024 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188236158 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178936581 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203146014 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202356738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176601089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192659904 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169649506 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193029924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168021785 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193770311 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172292231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201034573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191886482 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1872273 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192972374 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168604122 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200716725 seconds)
  done (took 13.24634222 seconds)
done (took 233.802858665 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.32961957 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.357294458 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153753211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.252673053 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.154491294 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.87115687 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.723706415 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.26271609 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.154714786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.177328835 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.15616518 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.19673661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.528005551 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.177587318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.154169744 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.194407683 seconds)
  done (took 31.798890628 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.36159682 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.405967197 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1955748 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.158955898 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.18515923 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.16146774 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.181320404 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.162326299 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.18117248 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.16635628 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.182573567 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.157475193 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.188812208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.156070545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.182029782 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.160904958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.18862692 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.16013007 seconds)
  done (took 4.502714346 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.182685662 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.232845182 seconds)
  done (took 1.388513302 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193074622 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.278370943 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.380745974 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.232659614 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181459597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.20159435 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.233102827 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172557628 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273081933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.196467442 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.172388123 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181559331 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.18547624 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.189940425 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.176509107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.182514341 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186308259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.19961051 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.196136743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.163316578 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.207207146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.162497898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.188523694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.175037203 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26488075 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.194574813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.164701112 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.183097446 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.164417556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.197642173 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.170723735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.200411938 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171824433 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.240221679 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.18944106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.237892333 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163583093 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.186410786 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.172913539 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.185105732 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.16376433 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.188739225 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.194815486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.159828216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.18214041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.166095773 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.181902461 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.16283621 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.191471625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.163670953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193693556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.16614508 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236900377 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.189214494 seconds)
  done (took 11.500426556 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00150054 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.207500619 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.185739681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.151333839 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207459273 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.173527164 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.998280787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185331877 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315827871 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.094857034 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.204005062 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.169617939 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.332451773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.348023167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.353031206 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421500597 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.85075232 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199032293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216604919 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.204795666 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193875841 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202176967 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.178924498 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.510600475 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.183621045 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.162644566 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190165593 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170299659 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.240636048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.185239268 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.166068744 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.263358629 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.36203703 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.277370957 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187954487 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160001213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185253865 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.252267974 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334584238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28293172 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255885124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183534303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160245307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.189526266 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.176000803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183409356 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248213826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25659094 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.257529327 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165747684 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194719594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167745703 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190061669 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.246252404 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.160192508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.451618952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.426803227 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.186450107 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166689493 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.19913943 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331888364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187091809 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.3037718 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209085387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280467789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160171486 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.889128429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.250672728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.161079981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190829155 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.167678934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192755936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165744052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.247145604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.487977137 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190946837 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.168832573 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184342436 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.305550378 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.162385873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185026601 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245483452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.164581753 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191453536 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170504643 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193476978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.25638393 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.339759057 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168167544 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193971314 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166656598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197231016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.186507935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.271649139 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.321713816 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244388829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.296259252 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1674567 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247478188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.252623675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193530127 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.255300552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166343639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199588859 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165116947 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316760811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.223268895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164114934 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192659416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168317424 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.229476528 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165715347 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.195067893 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.254809777 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.549340667 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.253228711 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184133052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169574008 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193099835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.265264458 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169649017 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326423632 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196218458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.254413777 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166931702 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.185164399 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167591074 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247089452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196086527 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192352393 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167899284 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196514445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.346170069 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289635574 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169675348 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.340940911 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.26046762 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.169433837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.2602516 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193121067 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252728298 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173686054 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192668076 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164664026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866509352 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19930195 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19271459 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169720954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.270143291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163015003 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.192325784 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162247168 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1865057 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.861517376 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.190694431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.16207913 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.188961669 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168977982 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.194015664 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171120294 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194497429 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248389338 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312430722 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198892541 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167059024 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.190428406 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24712116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.164089023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.190256317 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163850933 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.189157504 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.169585602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193838546 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.167003849 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254785124 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.244405731 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.322837003 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.648324832 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.162948025 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190520876 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308181928 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189452933 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.404551654 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194453708 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.303744981 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.251625923 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185791363 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427887513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.252301567 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.273501191 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.167507195 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.258597759 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186258671 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.170862929 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.247667668 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.189618107 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.17150931 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.247003966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.198849169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.170370408 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.358079474 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164192528 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313672221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.18590744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.258070108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166369621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193881988 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.397266021 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187783167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17810987 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.247544887 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19415772 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.165696629 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.955612442 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.189397898 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172778326 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195415003 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.302157837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.251007408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195630743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169902821 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.199199423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.24954109 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.297229976 seconds)
  done (took 62.399888004 seconds)
done (took 112.552873521 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321823397 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255897206 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.399157881 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238447711 seconds)
  done (took 2.283411808 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.34548276 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.203015342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.301036046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.186257414 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.307451038 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.162480089 seconds)
  done (took 2.524067132 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237716402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230242617 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230613125 seconds)
  done (took 1.722241844 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273842225 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274793114 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414703503 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327830794 seconds)
  done (took 2.375271953 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343180302 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180755388 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.220684278 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292602083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310065896 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271766403 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.212737667 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213935934 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218642399 seconds)
  done (took 3.315985364 seconds)
done (took 13.242806575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.219669834 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.220759986 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.185233262 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202379855 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.194218832 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.221639149 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191606907 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.217526405 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.190172297 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204349589 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.18824838 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200596388 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.317282735 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.217716792 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.175763412 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.216976126 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.175612346 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.225796381 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.192132673 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.200822674 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.193416775 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.200725595 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.173847806 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207221463 seconds)
  done (took 5.94705465 seconds)
done (took 6.970190064 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.311132023 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.154025173 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173092682 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.20270357 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.291121867 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180070944 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21733483 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.174528968 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.21144274 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173335101 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.19043986 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186611998 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.199477881 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.302743805 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202427487 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.166361309 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190760012 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.185377065 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.233798446 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.190086603 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.291604261 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192889543 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.184361014 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191285987 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.292488451 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167281468 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.198628541 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175224726 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.212820779 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.173933571 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199914179 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.165820389 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215710601 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188758081 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189479751 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175182892 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189427301 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.136238903 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199348046 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178419756 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.211196479 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176109057 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199546953 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.16860957 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199766325 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.17422851 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189338183 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.177401679 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188651573 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.17528507 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192095377 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.19069052 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.198547874 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164110883 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188647942 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.167062026 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211041782 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166245651 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21264848 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165012255 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191413308 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165854191 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201577938 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165774782 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.198824585 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.166099823 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199279391 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.177054289 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.198982706 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16838077 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188597098 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.174732485 seconds)
done (took 15.003594172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174204206 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.235498313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.31228608 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.311651851 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.222516006 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.182799293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.207347527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.18808991 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.206875679 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182278207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.228701778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.222246419 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.31385262 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.181517775 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.209410987 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177835673 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.205172949 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.171820244 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.30583966 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219215586 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.215837503 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.182905382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.218926024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.182062328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.195046451 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.193551569 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.200781399 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178066429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.196614458 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1874605 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.216803547 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.194680902 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.175499482 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.212197166 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.189393707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.204900776 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.18200869 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.204938561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.170670236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.19666167 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.177872549 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.213296607 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.169122694 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.207999076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.177658206 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.212803457 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.176785609 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.2079666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170199367 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.204394567 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170276961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.220069326 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.208146162 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.188445822 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.20889905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1839801 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.208971406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.183497915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200331062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.183598976 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.197575824 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.177381076 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.197597404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190574304 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.201478414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.182801319 seconds)
  done (took 14.414610266 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.194626566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227742159 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180514994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210152562 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.177095426 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191662851 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164155162 seconds)
  done (took 2.405281495 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.171436605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.325548801 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.315172761 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.315807897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.308546219 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.355308521 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189132012 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194953911 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201905913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.205554421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.326653271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.411346583 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.178348727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.208559272 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.323182578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166403982 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.319245345 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.298174859 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.209623514 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.321054235 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210318016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200573621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.207838231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166519639 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.317592691 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.198396458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.369350949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.214113121 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.176853705 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.209578746 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182924099 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271553177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.321539492 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209953096 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175889127 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.315462812 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.311105623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.21195328 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.365604802 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.199845735 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.308900245 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.208466104 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183916125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209298194 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183873662 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.303927546 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217209465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183003439 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210916835 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.332839462 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.204810821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.324789836 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179345572 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211394271 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178040727 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211749483 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189267993 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209642372 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.333350281 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18382135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.343555978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.32249995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.31639624 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.32121934 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19024598 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.353312457 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.30334479 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.181325851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.318685008 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.212351724 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.322253409 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179591972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.209567921 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.311655833 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212481559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.324140171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.324776635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179022276 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.209947857 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.171090472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.210582785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.168341868 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.308580931 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211341191 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179571299 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216381147 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208942981 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.18438483 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.313514729 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221948266 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181869147 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209289463 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.187283872 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.210344137 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210300137 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.328802776 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.179100429 seconds)
  done (took 24.853174347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174158879 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16947218 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.20122482 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.194534794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.171831767 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168375252 seconds)
  done (took 2.175078339 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.209740569 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.210990378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192027352 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210135591 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231067024 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.312852214 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.351878825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180189743 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.230600413 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196715657 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.314971967 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.3178613 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.316587395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.218194018 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.320668152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185389008 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.321648934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.21270596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.19086666 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210655629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.209481247 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.188933314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206860454 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.306876873 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.185336697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.214511147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.177034244 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223589466 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.191199523 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.205652618 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186966233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21188267 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175835069 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.206437215 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.321840089 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.203037342 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180534759 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.214850506 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.18605257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.212436163 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325180318 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181135324 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.219490272 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.186036018 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.206838524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176214448 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.215027484 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203004516 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.323234819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.188466564 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.214622684 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.185353319 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213071578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187782399 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205679577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178258562 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.216030823 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.325306591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186174233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.20650992 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211675172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.186524697 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.205649406 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190071307 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211978353 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187015402 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.204310269 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18669511 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209791203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185103148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.214947306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184170278 seconds)
  done (took 16.966227968 seconds)
done (took 61.862502908 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.61605774 seconds)
  done (took 2.715291518 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.252200437 seconds)
  done (took 2.35561659 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.641819396 seconds)
  done (took 19.77607795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497182917 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417652971 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.089271897 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243090131 seconds)
  done (took 3.350148158 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.172915145 seconds)
  done (took 2.286290945 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.475165103 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346776011 seconds)
  done (took 1.928536373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.844553626 seconds)
  done (took 1.961897599 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.970396654 seconds)
  done (took 3.08199206 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365050262 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284392938 seconds)
  done (took 1.771626475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.718886738 seconds)
  done (took 1.842680273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.147968258 seconds)
  done (took 17.274981407 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324546159 seconds)
  done (took 1.451044927 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.363423868 seconds)
  done (took 1.494604237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.78585531 seconds)
  done (took 4.910352776 seconds)
done (took 67.313275174 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.189413612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214989001 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189835174 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.213092042 seconds)
  done (took 1.922184867 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.193105842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210317038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.188992748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.209903578 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190436367 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210589768 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185394595 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.213312042 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.18442436 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.212253946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186105161 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.210083559 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.188096894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.210379197 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183209471 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.212628436 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189099885 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.212740181 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186555916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.211229235 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185276005 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.213266575 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.187429631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.21613782 seconds)
  done (took 5.908732249 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185746665 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.175041882 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.206142904 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173419749 seconds)
  done (took 1.869239936 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200351036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225312381 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198381931 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221788818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199905798 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225172419 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183072652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.210415794 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183076633 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.224580375 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199279531 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228535626 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196737448 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218326367 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.224020806 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.182400639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.215278353 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199732732 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.22196426 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.203073449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.214859725 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.194249213 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.210937857 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.196207422 seconds)
  done (took 6.106702326 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263904719 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225950311 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210282955 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260822553 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242849387 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183883021 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239734536 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189681314 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.218679903 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192277105 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213635337 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.23054042 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220292399 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185879853 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215960353 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.217725103 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.194178882 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.217437776 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226891632 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.21858478 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190408571 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226032654 seconds)
  done (took 5.927601128 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.341362334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.17700086 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.204492624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.174142675 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.217706386 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.179580379 seconds)
  done (took 2.434469076 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180419241 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169341437 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200739074 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169884383 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204414192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170454287 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199217094 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170695869 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199262071 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171982554 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198161931 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171229525 seconds)
  done (took 3.353083447 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274885654 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217784887 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350548418 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462334282 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259469099 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255052685 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.37680029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226757188 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.273420524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234257094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278367382 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230083309 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251132913 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284691859 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209331578 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.243479565 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269155316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307249686 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211007978 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311345458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253958342 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274832505 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288607581 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215783236 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235945228 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257822241 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189350126 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223882241 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231740992 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262144928 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273636752 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250869332 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208731641 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284756672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324714616 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273206321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.389959156 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201961856 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257275524 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291988458 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330080662 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237448421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287532374 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221569796 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226118419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289130483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218127249 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.281668919 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.231266002 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212090238 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278799001 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277402524 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.269454028 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205025653 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398538878 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229707143 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.239104218 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246638766 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28418998 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301288243 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279360245 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.219925383 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267501685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287292329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285155326 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.239067901 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.262287823 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191818596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261716103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307259394 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281470221 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25577687 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288171142 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198566522 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271796854 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262485055 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221700189 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304761171 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271826886 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217482475 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219522818 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233527462 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193066521 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.2902404 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218300246 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317352996 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20065757 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270309514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272414879 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219190233 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259114166 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26132101 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259036292 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216434018 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.154805649 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24257994 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255611206 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255426476 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198601372 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248921179 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207838231 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224895638 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24808441 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.192019041 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269678847 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.189394126 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258084146 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271396244 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.201120477 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279722791 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245881547 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.230621157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265694052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299253069 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229726489 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200414103 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322602616 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270825082 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233832669 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239992111 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.295286154 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238971311 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234360808 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233763455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29237908 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241985241 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302044695 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207150225 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23414884 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.193602203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274391387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257189829 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258388025 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196559283 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.267932954 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287169548 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193260749 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238246079 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283862284 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200606376 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223132634 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233056313 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205349717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.239370174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.218528069 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237503177 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253339059 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236731291 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266397983 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256138089 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202739468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269607399 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231135119 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.267088224 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216677344 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.216560989 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271380251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266254668 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227552749 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280891096 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.257953473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27564413 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242866568 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229646591 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280769014 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196926229 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.219025059 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229564807 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26978731 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263312954 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291070812 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273930924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26268543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.231652503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249681681 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268992167 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285776285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224899898 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.241410448 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273232651 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267733627 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190644704 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.221234698 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196184515 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2376078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198917404 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236780529 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281336335 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262647924 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270945348 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238378358 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238996594 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.297288503 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193830025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260409163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276229051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207104688 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.291288647 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292974966 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282039567 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239148568 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232523563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220222209 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19499847 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234894186 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259005144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205676295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236641125 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23962272 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.262493716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269125914 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248811738 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284957605 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264481817 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302096936 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.190435949 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.260403506 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23404324 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268153653 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.287167313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203239252 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259241975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295378693 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209675476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290710432 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269863996 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282259567 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295699823 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.263689608 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201868897 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242794213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227016648 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238782948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260019518 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210755292 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231419373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245245782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.209498777 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239137323 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288060444 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211975489 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274335025 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.255454901 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267887907 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19469906 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242253781 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274346619 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214547884 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.190515288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234032903 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292030083 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251908151 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250753605 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238734479 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229958922 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.415816844 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248669122 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272512238 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237032377 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236894929 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244458182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258067454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257559499 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251806322 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241278378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311167223 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271453723 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207420441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233617068 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246224957 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219854774 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.226214171 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.251313523 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.235434618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244442747 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289904813 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205551768 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275589165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280574646 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.214713966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.251414443 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239369685 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.33293731 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268545463 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242636232 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.266709126 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.264543976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282633986 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194934635 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225762229 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.202202878 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.287294913 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19805242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280514303 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263421137 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279466893 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277662335 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262521303 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210579013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.22727555 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236412256 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250591014 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282164094 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234311221 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206204085 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287426285 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.214590417 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200279518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261719664 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39267249 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214898696 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270030219 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.192861047 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.355182248 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229431899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232087195 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229168249 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270242815 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234630885 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.255736012 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278287553 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209443812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260244477 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2366039 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275722632 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279840055 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239603653 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275571635 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248131275 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260900007 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226991156 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272966904 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248952957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.215629026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26205623 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299794129 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.277304538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.202186745 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274193108 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271469857 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242486632 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273607768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241442994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283460488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199520554 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268633462 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208327679 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227630902 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261521664 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264363855 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201834884 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274234245 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273037793 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202011443 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229209734 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218341802 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269551247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243572454 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.199494922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286623739 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232587538 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284284545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313624799 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201996427 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270510796 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212216441 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233791601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239959635 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216064697 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233080058 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.247998646 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278798861 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.230973017 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245553712 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269853031 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266819755 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254081542 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213745337 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369160492 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197490757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300371436 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252524221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300860605 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217612658 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279774474 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274433571 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251406411 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236576732 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250723992 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.322350559 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235804497 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270558009 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233905582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213377274 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240656511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.236000541 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223623479 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274400257 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24293627 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.208564092 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.272941831 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215005763 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.249361738 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243952321 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305606949 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223695136 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290075435 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.291358279 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238512732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250033401 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277555477 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232133779 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.234110916 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273939584 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249491014 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254120654 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.20674298 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.240237533 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319425885 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.197174864 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262320509 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278587033 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243280169 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277311452 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.235768739 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252865675 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245782023 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278948601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198805798 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.25392838 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273184949 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205610434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229871061 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244442328 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263512211 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.26896458 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245248435 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.249481935 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302125082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194239156 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237616948 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389435626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264297017 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265046484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.223456698 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208044054 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251049871 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264980903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.235567036 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279271687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.235489722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200776649 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248447726 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.246332232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196800934 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277757039 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284244177 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230058236 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290446781 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.237670447 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.330052586 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246119565 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276179045 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.174443342 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.232524471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213351991 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238923959 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215155014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281026659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322606387 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.270885285 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.250133554 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208531895 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.231157259 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202815107 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265036916 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252994812 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242572397 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251956761 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.160931917 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246662372 seconds)
  done (took 122.087403995 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273119927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.249882894 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.271330244 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.316670088 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.551577683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.413961161 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.309291286 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322934223 seconds)
  done (took 3.966655326 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.190960317 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240064606 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.249411884 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.220095377 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.18467523 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.588042376 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.24143112 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.225584413 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.2329695 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227998127 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212291312 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642274831 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223018584 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.221130494 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223142622 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.183183281 seconds)
  done (took 5.558226783 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.540008824 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.755556695 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.571346328 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.424378967 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.380312049 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.297676192 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.961644634 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.289851314 seconds)
  done (took 14.486143385 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.243074276 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277866131 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.525016903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.412181116 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.288444711 seconds)
  done (took 3.018137571 seconds)
done (took 177.754374845 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196984407 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.225700768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.197740649 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230089665 seconds)
  done (took 2.103507576 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.25091857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.149963693 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.186177725 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.14951161 seconds)
  done (took 1.999642413 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.46780467 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.149623636 seconds)
  done (took 1.910407112 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217020265 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.23847013 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207258968 seconds)
  done (took 1.944538897 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.207845914 seconds)
  done (took 1.485349009 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.192614298 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.191895143 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.380921205 seconds)
  done (took 2.042220732 seconds)
done (took 12.756549768 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215611845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.030945067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.653820713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204976415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827208823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470944175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.54342071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253719345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.308539445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183422697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.248744341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766437408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.526198967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953445965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.511560234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.957731986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.799531281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184279579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222116583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184612163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.527716898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182307611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217354456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184949496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796863694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.491496509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215358741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.963008215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214314334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192514565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.505607033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183580328 seconds)
  done (took 23.984549991 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.186149719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273705337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238708637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219092665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192376419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218283414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195629207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.229510889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.317450285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187196082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239114904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183295585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222017828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185038614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240312193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183357395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219346259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184325465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223897886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186050195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238001564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.213069972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.188181961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.215599205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.18508471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.233931633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184771262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227419003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.185273421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.22617108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.189823022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.216209198 seconds)
  done (took 8.11184446 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.226443112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282335274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240088981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256248717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270224796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187267599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.305171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254661854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2903504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219617383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206382809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217646531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.258741492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187577136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241238918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18529549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218889358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186314195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223968984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187126659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238475437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183960544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219116971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186296107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217430652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203749583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217279026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196737798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217015935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.224764197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.190877764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215619668 seconds)
  done (took 8.43929015 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.201130605 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.230608236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.209400511 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239492745 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19568068 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.230731296 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.200464319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.226578045 seconds)
  done (took 3.021378487 seconds)
done (took 44.831997073 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.20907547 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.232799925 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.20741646 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.230848699 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.348998641 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.192647962 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.237820117 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.192439765 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.2323095 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.206670904 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.216003236 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.193620222 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.235823354 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.198046903 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.34890652 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.233656948 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.352675435 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.350008894 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193030203 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234825602 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194744527 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.353645321 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.232882687 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193372774 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.330243461 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.225098317 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.341551674 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196350877 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231050401 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.184761623 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.349981377 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230180737 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192507022 seconds)
  done (took 9.385023334 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.299238541 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.22973941 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193158991 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.228798369 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.196339353 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227206058 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.335431621 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.72304439 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.232547449 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.193878845 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228131385 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.317274214 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.199305652 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.222699059 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.196071162 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.168977004 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.336309108 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.228042058 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.186353586 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.153205586 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.223985676 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.192854831 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347351433 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.22441946 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193666807 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.228932045 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.194804312 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.234644713 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.196165518 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.228392452 seconds)
  done (took 8.669865141 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.199308376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.240002238 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.214625267 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294665753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.22466167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241231654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211332181 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240828949 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216192506 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223513689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203028471 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.25781386 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204920821 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234127888 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187651517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.238921584 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204135246 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222566501 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.198158299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241261267 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.2421838 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.20814218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.243499889 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.20143637 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.219427903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.198380605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.232304471 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.202471837 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.228882737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.20434484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.22279544 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.192104527 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.223667409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.223792286 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.22387847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.202208465 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.243568194 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.201345017 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.23594837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.221922704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225771587 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190812951 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.248886678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.245606093 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224405841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200559861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.224572761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.203636789 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.220565618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207658599 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.264491804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.222426469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210741673 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.221930316 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.189720145 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231448147 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.189997764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.225789257 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.206038631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.223551822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211324359 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.229549512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20127371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.224312044 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.200754579 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.222665955 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.188963415 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.22676047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216152837 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230556344 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227202915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.222437644 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201609646 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237345894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201737525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235190243 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189695072 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234557062 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202680871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.227341061 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203707049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227056178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192276545 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.240125717 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.21129314 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238444009 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.2019819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.233918084 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192949187 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226132946 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207943832 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.226089574 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.193717441 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.236574427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.190076964 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.227868083 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201541411 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.232358319 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188626989 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.249054367 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194623352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.223960324 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.215944011 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.22732814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194355162 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.233152274 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.232055976 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.224084641 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.200746757 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233943716 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190667053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.232360484 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.19250786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222930724 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.207010682 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240987419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.19786329 seconds)
  done (took 26.881368644 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.448955764 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.437922518 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.294795309 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.524466414 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203937246 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.394408674 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.439532569 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.442267623 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227754032 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.225117384 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282914259 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.440667909 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192869289 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254102564 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.445537243 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.526310504 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219297301 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.265978237 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261955798 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204542352 seconds)
  done (took 8.063723746 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200470395 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.25907666 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214320062 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243212352 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203819913 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241060403 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191875377 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245893001 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202415055 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232341557 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194195365 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232812846 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205023068 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239386098 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207270143 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.243019521 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200026624 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.230229976 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214131001 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.229868407 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.165711645 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250182094 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.20208331 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.246063553 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209252936 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235680739 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191140856 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.228226438 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199330515 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232535855 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196643791 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.2322787 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.19946964 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.166903556 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237978377 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206698282 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231426287 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195898096 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231522877 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194973048 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239993508 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203294427 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.233643329 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.163081493 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.244223375 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.174905551 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.20568677 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.23803411 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169170465 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.246815744 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.203929774 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.240063069 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199915995 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.246668519 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.198569106 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.242808949 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.202282847 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.239741031 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.196874477 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.226294698 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.191076254 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.229237251 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.201684446 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240321971 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.205304878 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.23534152 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200968154 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.225608089 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.197737366 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.228590521 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195349423 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.238637679 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212506702 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.236417704 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.19938576 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.238306631 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200861506 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.158090355 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235219716 seconds)
  done (took 18.417644311 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218831668 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236901774 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.20947999 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260385346 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205342453 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232862293 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203350859 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.246679274 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207794232 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244559382 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.206969057 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.240613069 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.214869084 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23770432 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.20283124 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.242965394 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205126154 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266267938 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204346098 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254382698 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.206903056 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233168198 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206081234 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239490581 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.2202917 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238679863 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.253317478 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.205682789 seconds)
  done (took 7.696546956 seconds)
done (took 80.400979415 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.565130594 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.763978646 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.449300571 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.451856204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.478335758 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.478917675 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.446856196 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.463072015 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.983369882 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.423456642 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.447803733 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.446438196 seconds)
done (took 31.792643046 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.769531726 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.24717375 seconds)
    (2/2) benchmarking "String"...
    done (took 2.264825227 seconds)
  done (took 5.863404348 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.225600127 seconds)
    (2/2) benchmarking "String"...
    done (took 2.247308683 seconds)
  done (took 5.811636801 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.441505446 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.437099019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.640599548 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.436550556 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.436921832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.437376709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.438038873 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.467878212 seconds)
  done (took 17.633558569 seconds)
done (took 35.860447617 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.470407794 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.799298151 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.696009667 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.420596852 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.441278112 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.437816779 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.458924979 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.508436513 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.453028559 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.426466452 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.965183143 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.732895154 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.441359966 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.867637637 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.420778019 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.440624188 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.440756608 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.834320622 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.442117115 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.484248451 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.42232235 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.445468171 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.464038898 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.455640903 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.456643544 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.446253536 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.488099709 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.439609115 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.847407272 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.47087608 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.487332432 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.438795254 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.489658287 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.443243237 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.439635655 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.453953467 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.813273043 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.453249677 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.441021515 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.442119769 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.749536516 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.448237237 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.440375693 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.441283769 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.422332966 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.464712517 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.424757367 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.629310473 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.464171526 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.459019824 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.50551128 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.849063278 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.450918305 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.443591185 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.444047878 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.781113087 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.447850736 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.551155004 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.471260277 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.445097452 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.441635979 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.442182767 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.496684949 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.443124716 seconds)
  done (took 160.519164488 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.440335954 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.441139827 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.441115871 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.451393016 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.443597053 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.442235357 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.441779503 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.442144144 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.443025052 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.469691921 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44282817 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.441344462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.4486764 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.452412629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.450360413 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.458451176 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.442465344 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.4602095 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.452551822 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.442249954 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.469743464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.442547687 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.442850239 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.443388786 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.488646706 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.531238854 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.462320453 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.450356571 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.452452438 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.442369661 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.45325722 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.447178513 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.236267405 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.401283222 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.456024331 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.477957847 seconds)
  done (took 89.388160186 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.444520005 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.444189586 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.447024793 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.48220266 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.445153325 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.445020209 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.099584102 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.075971742 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.517856915 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.988139763 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.083008252 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.742622578 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.445757383 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.542138424 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.459503684 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.446853822 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54265986 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.470301217 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.44974958 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.445285465 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.445345878 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.102172351 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.459761189 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.63457455 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.446469974 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.481798768 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.845681074 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.961728304 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.447088209 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.483028044 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.791284492 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.483630914 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446158133 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.808991073 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.760436576 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.56403213 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.448985797 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.483753486 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.447489656 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.738392851 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.447090653 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.448772083 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.45158033 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09981395 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.446281053 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.103399322 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.450528869 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.45840082 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.447469263 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.447280971 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.139337901 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.190679905 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.447617117 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.447327834 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.451602819 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.448942705 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.448173193 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.484762902 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.04852789 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.371555 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.449032241 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.452924495 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.486292426 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.448863923 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.929059904 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448624438 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.490336586 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.505097751 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.661670314 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.108328091 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452339924 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549281302 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.570007959 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.450205225 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.448463244 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.449548368 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.449855739 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.563805355 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.449897155 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.30307227 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.638408558 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.451370038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.987824988 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.551463283 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.449517288 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.450698794 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.449987181 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.450831003 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901198679 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.234193119 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.54980141 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.450375289 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.450364114 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.450984445 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.305259768 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.100629277 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.813481869 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.450577619 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.451186146 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.496540867 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.453557328 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.430038275 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.082532143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.169243589 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.451881974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.56589801 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.642121669 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.454658515 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.452136127 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.985409737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.452539181 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.513587378 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.451297892 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.856057464 seconds)
  done (took 410.639431952 seconds)
done (took 661.888183563 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.43424314 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.436550765 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.436774676 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.435137596 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.435468854 seconds)
  done (took 13.527615628 seconds)
done (took 14.878484827 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.465302606 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.464576885 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.460551862 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.307070892 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.455102147 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.493131983 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.469919115 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.454477137 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.474805491 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.4749421 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.300800193 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.45566849 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.456855792 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.458117265 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.286334107 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.460026167 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.444836316 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.458903538 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.478988634 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.843120902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.466240993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.586850814 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817008713 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.529677832 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.846348129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872532603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.467260327 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.712966921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.527402891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.502971502 seconds)
  done (took 21.525663634 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.409304633 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.852368657 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.467481584 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.587609988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843803671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.53386293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844585335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885321311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.468482479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.718430186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.507598138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.504701191 seconds)
  done (took 21.568406639 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.262023474 seconds)
done (took 95.440443582 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.51734833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.595425228 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.51490214 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.494926414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.49461157 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.493118783 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.497827412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.49640244 seconds)
  done (took 13.457297817 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.494367685 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.49303658 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.490854039 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.493041887 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.493294224 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.492804148 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.49338858 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.492327062 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.492466256 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.493919583 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.491789145 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.492770763 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.494243786 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.493530288 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.491567957 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.493154262 seconds)
  done (took 25.241325032 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.495303069 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.494077145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.494074281 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.494210751 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.494286319 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.49628392 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.497183336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.493550332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.495608625 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.493956599 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.49323018 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.493833469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.49412771 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.495521952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.494315234 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.496477799 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.495108142 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.495737551 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.497690244 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.494419437 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.495303628 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.494980891 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.49497684 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.493477068 seconds)
  done (took 37.23304444 seconds)
done (took 77.289400421 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.459262313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.460352605 seconds)
  done (took 6.275159571 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.593618714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.59398098 seconds)
  done (took 4.545404622 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.497512777 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.495305723 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.49704512 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.495835818 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.497218257 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.496189215 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.497702746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.496422974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.496042129 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.496158694 seconds)
  done (took 16.322224077 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.497101202 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.504522049 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.498537838 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.496607285 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.49747653 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.496604142 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.496756746 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.498084079 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.497356962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.497127533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.497062371 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.497940485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.49715973 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.497953685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.497692619 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.495388764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.497337895 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.497171812 seconds)
  done (took 28.31490932 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.519153518 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.522732674 seconds)
  done (took 4.400190276 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.67779953 seconds)
    (2/7) benchmarking "second"...
    done (took 1.57886565 seconds)
    (3/7) benchmarking "month"...
    done (took 1.663171622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.649810846 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.577398774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.52677865 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.578727574 seconds)
  done (took 12.611449822 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.500581813 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.853893152 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.049976816 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.71242635 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.490729932 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.519600503 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.444443249 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.52246141 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.523608693 seconds)
  done (took 16.975568332 seconds)
done (took 90.802536763 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.463776015 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.534625598 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.485519213 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.486622985 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.861310855 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.519473671 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.465749171 seconds)
done (took 18.179218182 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.460439069 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.44897546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.456511614 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.473775471 seconds)
  done (took 11.1992363 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.478236444 seconds)
    (2/2) benchmarking "read"...
    done (took 1.873486146 seconds)
  done (took 5.711440401 seconds)
done (took 18.27210234 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.500147051 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.499653133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.500395755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.500079863 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.500773178 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.499585178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.49946561 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.501258924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.500313064 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.500607515 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.499697413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.500078676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.502445179 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.500444854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.501200328 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.500831566 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.501818842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.5012826 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.501360474 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.500815851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.501993096 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.500597807 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.502720702 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.501370251 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.501905375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.50029672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.502712112 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.501486607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.501745927 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.501955312 seconds)
  done (took 46.389776662 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.506717998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.504677725 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.501439882 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.500932207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.504260773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.502837687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.504579947 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.50149827 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.501241604 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.502278607 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.503759661 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.50129573 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.502587235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.502844461 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.504191001 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.503752956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.502989521 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.503646589 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.50305643 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.503766715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.503200093 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.502337553 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.502907039 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.503554397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.505020436 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.503208334 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.505213896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.504290106 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.5030558 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.503766575 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.50349594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.504195121 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.503044905 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.503353884 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.504946195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.503543573 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.508020468 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.506324303 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.506680214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.504854074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.50453455 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.504498652 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.504771871 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.505980753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.505520569 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.506310405 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.505412944 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.505258595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.506253414 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.503752956 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.504778087 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.507211287 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.506641033 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.50513281 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.50688436 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.505130925 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.506943865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.505794766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.507033401 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.506180081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.506259769 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.506854049 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.506736017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.505958683 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.507210798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.506636214 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.506309078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.506733224 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.505972513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.507251726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.505857693 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.508279091 seconds)
  done (took 109.70528599 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.507746132 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.506333661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.506187134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.507444976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.506807115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.508183268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.507698988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.507234474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.507055681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.508900259 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.506926404 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.507942036 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.507607706 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.508573961 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.507765897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.508089122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.509092252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.506038233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.508348932 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.509213497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508978062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.508176075 seconds)
  done (took 34.536756945 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.509537351 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.508434138 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.508132424 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.510777941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.510937041 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.510843313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.509209097 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.510748748 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.508690386 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.509234449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.509358208 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.509734863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.509922595 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.509311205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.509976653 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.511946387 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.508482817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.511380812 seconds)
  done (took 28.544227448 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.507455592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.510242259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.510008849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.510602291 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.509686113 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.510518132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.510159357 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.510396259 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.512567974 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.51047078 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.510788767 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.511239662 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.509653427 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.510634068 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.51071285 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.51070405 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.510807624 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.510401568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.511002133 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.50990311 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.514205892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.511233237 seconds)
  done (took 34.602661833 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.512282463 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.512791815 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.511599764 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.513161764 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.510839472 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.511879269 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.511910418 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.513178387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.513499657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.513986101 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.511950438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.511150336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.513336647 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.511690139 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.512127834 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.511417688 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.512329047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.511665066 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.513437847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.513278539 seconds)
  done (took 31.617778141 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516116051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.513514882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.514227962 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.514778381 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.515373638 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.51536854 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.515662292 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.515273067 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.514808553 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.514671174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.514845568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.514974984 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.51540374 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.515749524 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.514750095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.515642667 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.515276349 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.515323771 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.51537685 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516020858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.515329429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516319778 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.515646438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.51583501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.515262031 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.515228369 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.515895003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.51668393 seconds)
  done (took 43.801791486 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.541009509 seconds)
    (2/2) benchmarking "in"...
    done (took 1.542238577 seconds)
  done (took 4.456516224 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.516146222 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515035048 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.516586781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.515722006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.515611099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.52032336 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.515191283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.514650083 seconds)
  done (took 13.502678449 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.509138837 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.515728921 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.517123721 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.515647835 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.515928387 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.509402627 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.525723278 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.521673951 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.51066445 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.512572304 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.51479668 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.513267504 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.51568932 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.512089911 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.510694761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.515401575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.52263783 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.51923607 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.517914953 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.518444769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.51919221 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.51610306 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.518430521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.522553322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.512732171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.531155603 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.52796239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.522521475 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.513698355 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.525434275 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.51547365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.520218249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.51978167 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.52177536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.518190407 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.52588517 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.530556225 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.520353112 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.530021869 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.524430377 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.520906045 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.520214686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.518346711 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.518658762 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.520713632 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.524743545 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.520492096 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.519294039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.516216692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.51828148 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.524580885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.513425764 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.522431798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.526140859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.52118115 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.532860848 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.52742559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.516247911 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.519598337 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.533471889 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.540034666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.525891246 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.524354598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.526025621 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.52749606 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.525836282 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.534903565 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.527411692 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.522876966 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.522627773 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.532034835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.541503986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.534656467 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.526832078 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.52328016 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.522020293 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.517839804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.526927691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.533952048 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.533623166 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.529588365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.522565404 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.528365723 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.523550935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.519037023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.528249367 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.523721767 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.521556547 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.516058641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.537598182 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.53248587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.523031246 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.517420966 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.521273621 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.522333112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.525995869 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.516902743 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.523345183 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.528247971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.524655614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.524768548 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.521743442 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.530480168 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.528647951 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.525679488 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.535281896 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.53216006 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.520247163 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.539058214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.531996771 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.525350466 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.52027489 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.530769311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.528429558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.522339957 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.528332828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.530081863 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.532376708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.529489609 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.525495526 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.531466257 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.535633058 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.533245115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.525559989 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.525994123 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.531771882 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.526605164 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.52966079 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.53188733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.526534555 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.526804072 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.529585292 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.53364321 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.523609182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.534106467 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.524113646 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.530772873 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.528363069 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.526381323 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.531160352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.528508199 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.52752211 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.534156963 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.537265598 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.533674429 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.530077323 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.544443117 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.527801684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.534072594 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.532546003 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.533564289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.526672142 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.524061614 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.532369724 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.520950883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.530758555 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.522776954 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.532889203 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.528394637 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.529020554 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.530380784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.521916719 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.530754505 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.533936823 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.537271674 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.530430301 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.534639566 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.52969592 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.530228809 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.522979773 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.532261051 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.523010642 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.526698332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.534592633 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.527621564 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.528443736 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.534846855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.535533045 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.529766111 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.530409488 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.525955221 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.532581693 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.53586514 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.541125376 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.538189459 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.532026454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.531265673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.526108942 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.528046339 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.533392898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.525877278 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.536628645 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.544989974 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.542029612 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.528112548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.534027058 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.524818554 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.534620499 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.539949179 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.538404988 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.533250073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532107051 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.526007253 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.534857471 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.532906943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.535481293 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.524228885 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.535123007 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.533397159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.532194702 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.533188683 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.528611425 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.533036079 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.53795109 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.533433127 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.532821317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.528038866 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.536061325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.525898719 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.52957279 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.536993636 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.532801623 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.544592926 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.539855243 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.537245274 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.542504323 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.535753464 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.53107347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.536563343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.537597763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.533971604 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547203663 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.537175502 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.533042645 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.54987139 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.537195547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.528545354 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.54104429 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.542600005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.535913331 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.530416962 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.547154146 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.536203102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.535150315 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.535151362 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.529530257 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.539179808 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.547603016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.542691358 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.530308917 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.539268227 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.532690505 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.540359357 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.539645509 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.543804418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.538542856 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.544526367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.54387412 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.536423033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532697908 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.53907337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.535168474 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.536594423 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.531634086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.540493942 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.546455383 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.536301648 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.545098716 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.535055051 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.540206195 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.529535005 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.539281427 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.532186111 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.555052986 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.551953359 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.549222635 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.541353757 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.541772595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.547836844 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.540127135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.533879413 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.534797756 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.53799921 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.536099597 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.536365902 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.54241318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.535251725 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.541619713 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.542632622 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.541054488 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.541917236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.542765389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.533380257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.542756869 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.538797706 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.539946246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.537513255 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.539946595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.541479891 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.547676419 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.539750411 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.536148556 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555841633 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.544670171 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.540629922 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.539119395 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.537029814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.533879832 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.542989231 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.544834996 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.536539877 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.543857707 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.536803528 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.541012723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.537832988 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.552875753 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.547609441 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.537558512 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.543792964 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.539841344 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.532630791 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.536115382 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.541965637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.553597842 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.550681201 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.534885686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.546346641 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.542230405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.540042836 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.540614418 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.539809078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.541984564 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.540399097 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.554036376 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.545301815 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.539936818 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.550596204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.549632953 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.541060563 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.542373929 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.534975362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.552487017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.55064593 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.54424379 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.543650208 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.539789103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.54363645 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.542123548 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.542221466 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.543370285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.545828628 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.554081423 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.549505143 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.546296495 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.544425936 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.555268236 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.553355214 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.556323818 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.555466585 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.543733878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.550101448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.542895504 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.54184104 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.541044151 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.543865529 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.547343137 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.538832906 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.549622826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.543593776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.54882 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.554609144 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.552442528 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.539793992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.553175862 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.55460181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.537473306 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.547396006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.54426593 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.538596493 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.547834749 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.543695186 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.538053547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.542748488 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.543644062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.550234705 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.541193751 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.548893752 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.541442735 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.549230108 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.545217586 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.547135917 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.54562518 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.546030749 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.54057789 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.547365276 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.553208407 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.553902839 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.546154926 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.551964953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.543494044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.56053378 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.555649988 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.548676476 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.553527233 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.548029676 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.542241789 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.55050541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.552393988 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.542193948 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.552003855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.541460684 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.544846101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.544019949 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.555828504 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.549169695 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.549766908 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.541078093 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.56481561 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.551136007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.547542673 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.548074165 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.555794211 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.555992211 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.542162379 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.543050412 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.550841905 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.548313441 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.555007588 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.543424552 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.547530939 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.548285645 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.552840204 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.548457873 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.549292686 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.541419478 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.545088171 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.565834594 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.554445645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.549060393 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.546508952 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.552152128 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.546962501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.548263086 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.548722222 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.546141517 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.547463962 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.554131988 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.548125708 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.54706433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.545142857 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.552227626 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.562143482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.551732801 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.545608069 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.566632042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.564236067 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.558900681 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.543547822 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.547788375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.5491104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.552927646 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.552421226 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.5467564 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.568073077 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.557425563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.556143766 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.556323538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.551682725 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.544090908 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.554788427 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.552118185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.557161145 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.56065272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.556801951 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.560526726 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.553842496 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.551773658 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.545104024 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.547542323 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.551164921 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.549068775 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.555018135 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.558757856 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.555902326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.557779869 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.560334523 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.55367816 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.553364573 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.553269938 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.546973326 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.553913735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.546759612 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.56149731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.553042674 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.5488376 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.556262986 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.554665296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.549912108 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.551981156 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.559116631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.554122071 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.547170488 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.556563862 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.566009267 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.561589501 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.553145131 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.550642089 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.556827722 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.55784056 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.55449188 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.55578611 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.552804794 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.573049687 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.565114461 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.551005683 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.555000325 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.566473433 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.564340409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.556314738 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.555084763 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.560354637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.55710185 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.559619698 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.554831868 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.568215972 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.561569806 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.55300021 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.559584009 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.552233702 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.554888091 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.565005857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.563787336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.555744554 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.55683331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.571683662 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.565006904 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.564044841 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.57795038 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.564640797 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.562103254 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.562376054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.550634756 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.558229087 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.562614562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.563769807 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.558314084 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.557814579 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.558052599 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.550302241 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.572275357 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.572177579 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.567563515 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.557959221 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.551309493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.555197138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.560171164 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.565102867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.558982256 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.558646529 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.559135557 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.55914345 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.555440116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.578989479 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.580699054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.563858295 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.558192142 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.558761278 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.567214168 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.564607901 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559355278 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.564047565 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.559799679 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.560307355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.566001863 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.568247122 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.558683964 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.556361951 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.557096192 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.556628465 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.56353905 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.577057949 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.577746933 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.57069003 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.56158964 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.564495108 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.560602364 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.556863481 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.564464028 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.560125767 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.558210509 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.559606427 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.563035705 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.561775348 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.562008618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.558256047 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.568622309 seconds)
  done (took 919.964829839 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.56091204 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.560602294 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.562054854 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.560161177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.562854466 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.560072549 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.561689794 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.559111602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.561542358 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.561462949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.561834225 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.56168672 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.56251378 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.562996803 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.562136986 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.56294973 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.561814809 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.562959438 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.562799851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.562215907 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.563111831 seconds)
  done (took 34.209694124 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.5639222 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.562723654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.561966853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.563406213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.562816612 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.562864943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.562006593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.564389997 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.562014345 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.561804473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.563075305 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.562035507 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.562658283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.56221025 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563567546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.563180206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.564772448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.564182498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.563059311 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.563008326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.563818416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.563538911 seconds)
  done (took 35.800917841 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.563861578 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.564799476 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.558508872 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.568107159 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.565098118 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.563523756 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.564370232 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.564698416 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.564989305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.558438751 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.559557399 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.560266218 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.563717495 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.570472893 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.570244792 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.571613681 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.566133794 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.5646306 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.567738467 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.565633311 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.576410729 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.574458107 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.565134156 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.558603995 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.567289248 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.565133457 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.565847165 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.565458917 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.558848999 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.568216112 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.567044664 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.562507774 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.574887491 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.566870061 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.561792669 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.569905782 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.567305801 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.566209921 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.566823407 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.574444348 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.577257904 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.567370264 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.578134761 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.576927625 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.567480544 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.565137509 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.57364271 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.567875845 seconds)
  done (took 76.629068545 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.569352011 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.56685274 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.568217578 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.567840785 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.567861877 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.567737489 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.567844836 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.567600601 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.567998347 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.567287572 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.567863623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.567191121 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.56915869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.569048411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.567987731 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.571402201 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.568253617 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.568629782 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.569285172 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.569450905 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.569997973 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.569982188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.569745776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.567871096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.570424773 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.568912499 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.569662245 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.56934782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.569737534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.568641795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.569623624 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.570780475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.569472627 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.569472906 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.569907109 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.569490297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.569380855 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.570938316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.570654131 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.569842855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.57031156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.571005363 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.570507256 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.570117122 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.570416461 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.571843808 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.570613833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.570910938 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.570480296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.571071922 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.571938164 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.572862932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.570858836 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.572253008 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.571698817 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.575171046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.571383554 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.571295903 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.57251184 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.572290512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.571953458 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.573240284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.571672418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.572364056 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.578410565 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.570813998 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.572129389 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.572466443 seconds)
  done (took 108.192818447 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.572937453 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.573152703 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570628081 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.573359853 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.570781243 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.572465675 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.572594182 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.572738754 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.573626018 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.573078811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.57288556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.573141738 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.573067986 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.574730208 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.57403892 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.573494087 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.574800399 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.572775071 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.573819478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.573497929 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.573914602 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.574332043 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.573899865 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.573838126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.574212335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.576580094 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.573683008 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.57390231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.574934634 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.574120913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.577164876 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.575671111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.573403294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.575553288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.575636888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.574575789 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.575374983 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.574839301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.575162037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.575459002 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.574100868 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.575816659 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.575514596 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.57474697 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.578789524 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.575728589 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.575034228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.576388519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.575907523 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.575583111 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.576841301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.575666221 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.577438794 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.576849123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.576774044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.576450539 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.575564742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.57685925 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.578192032 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.575564602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.577461003 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.578002342 seconds)
  done (took 99.061398104 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.575842152 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.578062266 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.577817961 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.577556266 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.576906952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.577424615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.577843593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.578948762 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.577722628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.576066901 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.578778977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.577266006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.576615154 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.577868456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.57825859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.578543752 seconds)
  done (took 26.66615182 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.576368755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.578443809 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.579507561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.579592419 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.577439562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.57953934 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.578967199 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.578907276 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.578059612 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.579541016 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.580045409 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.578070717 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.57795932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.580197803 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.57835504 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.578718285 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.579846781 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.578603327 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.580083822 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.578729391 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.58132113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.579843359 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.579504908 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.579986882 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.579841053 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.580479473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.578467835 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.579456228 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.580764984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.580984146 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.580671955 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.581072006 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.580674889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.57967581 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.581868336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.581224051 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.580984216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.587304852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.580718051 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.581375467 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.582149448 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.582316438 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.582481194 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.582970991 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.581956546 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.58195927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.5807316 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.582288781 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.582437892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.587077728 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.582475676 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.582964915 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.581350254 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.58000078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.582334737 seconds)
  done (took 88.357597501 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.581276362 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.581051962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.582081003 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.582449137 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.581060343 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.582608864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.582543911 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.58478896 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.583391086 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.583042229 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.583172553 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.584248947 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.582631633 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.583193645 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.582770477 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.583194692 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.583118984 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.582998229 seconds)
  done (took 29.919038518 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.583583569 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.58470969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.583416299 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.584304261 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.583818514 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.618295176 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.583593906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.584623296 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.584398896 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.584931505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.583580985 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.585262204 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.584143696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.584704801 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.585422839 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.583641118 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.585113233 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.584585582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.584338693 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.584929131 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.585701017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.588119272 seconds)
  done (took 36.326046979 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.576853174 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.577808812 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.576685694 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.599980416 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.587668027 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.577905263 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.577486914 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.577617517 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.601197471 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.608762609 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.606490951 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.587065017 seconds)
  done (took 20.487394802 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58675171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586147792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.585580122 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587087296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.585971862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.584753131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587568782 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586866249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585986528 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586011531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.586823297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586467106 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586193537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586962351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.587289347 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586335944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586347747 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586838173 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585790134 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586846554 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588034834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58678663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58669388 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589687627 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58598981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587174738 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588104814 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587745621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586814148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587444325 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58793517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590388764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588400383 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587246954 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588020027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588496554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587763988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588921189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589456801 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58848943 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.58836204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588633443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589675475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588284516 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589895824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590308865 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588584414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589419088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589102427 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591328828 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588978947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.589563939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58972178 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593422949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589170383 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590208154 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592412485 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591128732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590494643 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590816262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.590472155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590150395 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.592985952 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590933246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591556161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590446103 seconds)
  done (took 106.269121307 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590137614 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.59145999 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590925145 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591890492 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590447501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590208364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591119932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.590694459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590282326 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591810453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.591689279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591500707 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591750529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5917631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591306339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590174421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592293196 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592126555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591604212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592444333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592367088 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.59260804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591668117 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592485259 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595938073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592637723 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592915901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593647489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592714968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592620961 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592329653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593031558 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593367913 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.592934758 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591904809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593074161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592854092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597419267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593553481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594622194 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593197919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594411133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593318117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595252371 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595391705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595080422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594966231 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594184568 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594364688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594010244 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594062555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595553387 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594047399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594701673 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593952066 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594379844 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594878092 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593964638 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595133292 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596582149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595110943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594282555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596757311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594176606 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594573234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595603184 seconds)
  done (took 106.591135859 seconds)
done (took 2036.994897308 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.563414384 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.561918384 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.589111227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 12.145007127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.587530579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.277411953 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.10264301 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.587953957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.588321392 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.587780122 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.587371131 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.560862314 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.849154491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.587061525 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.589180929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.561032237 seconds)
  done (took 60.766631987 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.628363355 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.60723965 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.749832434 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.594847781 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.628015965 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861632055 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.670161198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.597046594 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.807500171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.601211788 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.562582854 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.625863526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.592662586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.575744933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.620178795 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.862159427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953836797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.565975673 seconds)
  done (took 34.546330997 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.202510738 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.58978317 seconds)
  done (took 6.23403849 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.622057736 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.597130474 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.602538773 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.594558358 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.565191635 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.562843222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.593836269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.56912775 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.571498512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.75426973 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.596149622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.617468953 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.594378587 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.596450568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.599841781 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.655192046 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.788241438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.602415293 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.600073445 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.609202678 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.594872365 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.837548197 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.652084249 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.601518392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.755235984 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.576868818 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.611461276 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.617682877 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.812100268 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.604756513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.595746429 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.595442898 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.598550416 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.567346798 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.246996004 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.568130976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.640243567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.610816571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.601818639 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.809306896 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.597845718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.611187289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.566900023 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.266677487 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.780278763 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893933929 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.569970595 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.602981846 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.598991255 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807719683 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.601762137 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.599408835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.706856228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.567865439 seconds)
  done (took 101.016790266 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.605615421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.567507991 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.835347916 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.590806205 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.56643041 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.570069071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.570391528 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972486865 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.620500484 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.568358518 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983477159 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.357413677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.577107187 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.639301758 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.626713774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.624921158 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.569544702 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.574171758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.568146969 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.570378957 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.274051469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572042925 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.572957706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.725682575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.644655511 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.272148923 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.570369877 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.571055858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.570354652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.56980549 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.320222495 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.568447286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.636969897 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.570742131 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968990819 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.109633704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06967548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.572603123 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612784558 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.573070291 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.571726195 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266318294 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.090064456 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.569599528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.576358558 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.269065919 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.569853261 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.583414902 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.569100093 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.934648253 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.574151015 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.572365732 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.570000417 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.572561986 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.570005097 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.651050738 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.625188091 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.269052161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572558843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.575256602 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.592523533 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.574367592 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.580845791 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.576611803 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.574680342 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.091740158 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.743389784 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.574714215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.093159123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.315357491 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.5725645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.399901552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.572367129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.601364741 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.648887473 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.572723459 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.570825521 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261665816 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.603223357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.572563313 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.073260084 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.571713903 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99017836 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.591863323 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.574812621 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.29519962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.58489016 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.643878038 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.573262285 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.573134545 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.591602885 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.5771896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975127005 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.646782737 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.573530685 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.574329249 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.607803269 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.575400196 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.573626437 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.573694462 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.404511705 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.582447181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.574018944 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.574529625 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585685862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575248291 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.575436234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.575913529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952280664 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.575815681 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.579960692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.576044831 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.575436932 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.581686819 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.733141693 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.582927061 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.029106564 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.578740216 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575696532 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.581102527 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.575204152 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.592683609 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57528433 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.60155408 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.576044691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.983963324 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.596356073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.597597292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577546837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.593908136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57638824 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.596354677 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.618687824 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578009955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.554372173 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.586196332 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.595437172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.576490489 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.58964656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.576787244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.585688236 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.577864755 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.00099468 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978760568 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.772941727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.5787076 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.576145751 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.548421835 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.590028592 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.847395818 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.598337889 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.577370139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968555988 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.767173885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.57887012 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.577148114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.583345759 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957218932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.579179098 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.002489772 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.348245193 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57778779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.583137073 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.546859485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.424938605 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.579620984 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.579350559 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.994687313 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.598519756 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.577552704 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.57875551 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.578639085 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.594014295 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.58456442 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.588570585 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.57875593 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.579890012 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.69271735 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861765872 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.599821877 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.581415904 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2732462 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.603038278 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.579431016 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.591285107 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583354629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580026692 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612559809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.584663455 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.627011367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.580790407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.592691641 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.306723152 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.580666438 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.581969747 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.863835757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.503824264 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.580346984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.580505942 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.582001035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.622278154 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.302864701 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.633842754 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.036747131 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.585826522 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.654128713 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582227182 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.613979752 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.303284726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.59447399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.580889442 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.469505445 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.581683746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.278333858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.581080317 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.583346108 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.413008595 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.581691568 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.582949061 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.581318616 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.604953116 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988452442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.585372553 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.589572459 seconds)
  done (took 559.835601735 seconds)
done (took 763.841019048 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.582995295 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.58615743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.587240948 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.585466071 seconds)
  done (took 11.80200925 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.619014052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.611832762 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.620818122 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.611772349 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.621753925 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.610732832 seconds)
  done (took 11.157253727 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.583180236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.586065029 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.587519265 seconds)
  done (took 9.218359541 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.911162656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.592048682 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.09843647 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.594286676 seconds)
  done (took 10.659143806 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.6208059 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.623605697 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.620680116 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.619526897 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.620679139 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.620172091 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.620696948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.620893271 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.621812592 seconds)
  done (took 16.048580829 seconds)
done (took 60.347410171 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.73855139 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.741709752 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.585470191 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.663929191 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.807733581 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.74090518 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.747461601 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.75139611 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.749663068 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.653986376 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.741664635 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.645718985 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.748441684 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.872738216 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.652426541 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.745981944 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.644895066 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.837703943 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.742250953 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.658265203 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.78274018 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.652785525 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.653598758 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.624605965 seconds)
  done (took 44.647042478 seconds)
done (took 46.111469134 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.647947759 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.76964473 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.619284757 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.618061766 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628260968 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.587349271 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.648730121 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.618789093 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.641802285 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.641726228 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.589513723 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.628027978 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.643298355 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.629777293 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.661168155 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.620368415 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.618443449 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.628535654 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.642090869 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.645739587 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.62181797 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.629595216 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.654390338 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.621635196 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.638666481 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.637261764 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.635235598 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.59052244 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.647584445 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.643943479 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.593185418 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.634897985 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.645075537 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.631890061 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.623853424 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.631056784 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.630105895 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.771093307 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.649202877 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.630896499 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.629274644 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.646363619 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.633871458 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.634830588 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.630828963 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.655392771 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.639071631 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.646232248 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.594373629 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.60807579 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.651938002 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.641120914 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.630550785 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.610437892 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.590678954 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.646617981 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.632012842 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.655843316 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.629709337 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.633026239 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.664906689 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.651531804 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.64436972 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.640630488 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.630743826 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.646782528 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.631350467 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.646924934 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.630574809 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.633481674 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.632894449 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.631645127 seconds)
done (took 127.285460885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.800379295 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.593909952 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.839918819 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.627247502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.851228568 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.800104259 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.628076238 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.628344149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.629651578 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.489022452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.628203279 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.628480968 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.594964975 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.629056321 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.801285904 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.629506518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.627269012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.389831277 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.630034098 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.811082541 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.597643108 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.628070721 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.629394632 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.483653403 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.59523058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.599619756 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.810324833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.631339851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.383967263 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.598374207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.592499158 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.383388139 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.813578877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.647908928 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.640769891 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.639866285 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.855742759 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.63414349 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.801126736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.802427879 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.84282282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.669589967 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.601333871 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.596561127 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.634485922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.631587579 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.631131864 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.661435577 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.596086416 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.631718251 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.393943601 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.641950279 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.641841675 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.632821674 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.63240975 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.651673373 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.631973102 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.632372594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.814356769 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.634476283 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.806857912 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.486711544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.496860669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.634982074 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.597528289 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.632366239 seconds)
  done (took 128.957588465 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.75018143 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.7584674 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.806423847 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.627411279 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.720341812 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.805457734 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.628056822 seconds)
  done (took 13.568690684 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.63988612 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.633929287 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.719855646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.71858258 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.632412194 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.861367776 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.634009605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.646516152 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.633558849 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.719907608 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.63349215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.634466716 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.643278031 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.600882697 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.718862015 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.648037715 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.797397211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.629691178 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.634505756 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.839483987 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.63416989 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.64336638 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.720145208 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.65076802 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.634591801 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.641645212 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.446187536 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.635084811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.63486062 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.637162309 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.63643596 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.750969939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.636429953 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.601475439 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.635626081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801671916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.635752983 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.637147782 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.635000861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.606367332 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.636605186 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.636812195 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.636650513 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.635445471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.634521191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.6618394 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.638270342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.640076158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.636683548 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.636462779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.722063889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.638327053 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.636877427 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.636111198 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.726052385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.645112622 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.638326494 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.635801942 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.637189618 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.636480519 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.841418801 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.721280827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.637606221 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.72051886 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.636709878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.638980767 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.637020113 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.638402342 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780681468 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.638701122 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.721256873 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.638202106 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.869847765 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.663591019 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.639430894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.637797167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.63718403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.638693509 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.603518436 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.644740577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.63813443 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.634567566 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.647182578 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.639983968 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.638342558 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851980129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.803035358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.639276265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.65516404 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.647985194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.63812556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.7245274 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.639144405 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.638741631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.724041793 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.803973047 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.725063781 seconds)
  done (took 168.172532489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.65070649 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.65241816 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.63816565 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.668046823 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.634831915 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.633813979 seconds)
  done (took 11.355928852 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.635269401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.643350107 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.641183631 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.639405332 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.640992754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.640508126 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.640626856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.63451742 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.644787721 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.641076494 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.641583472 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.642166856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.642047358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.642380082 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.641440787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.640767237 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.642711898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.640812355 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.641755562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.642874349 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.605886266 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.641766736 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.644358895 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.636319465 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.645470838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.643339003 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.666789681 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.64336247 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.642240958 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.653539183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.644684356 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.643292419 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.637825312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.642063771 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.647700731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.639369503 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.645696915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.645693352 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.643755118 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.640810818 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.645840857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.644320482 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.642909898 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.645813759 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.638914977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.641492608 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.648682001 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.668205154 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.644523162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.643841162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.645702851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.64345913 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.643562286 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.64476607 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.64216113 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.641324431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.650030916 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.646071194 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.645148661 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.63918219 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.647345588 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.644590419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.64089344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.647910185 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.644037415 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.645454147 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.640575453 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.649479658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.647031372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.64533388 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.646739714 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.645656197 seconds)
  done (took 120.806579667 seconds)
done (took 444.330773848 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.97823536 seconds)
  done (took 4.461063869 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.761575826 seconds)
  done (took 4.246558588 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.627659845 seconds)
  done (took 26.117565998 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.661071705 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.618411112 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.61975842 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.615942502 seconds)
  done (took 11.999551549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.256440222 seconds)
  done (took 4.740981518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.635283859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.619465437 seconds)
  done (took 6.74227449 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.002683163 seconds)
  done (took 4.487268318 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.474962424 seconds)
  done (took 4.965330927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.634313903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.624675037 seconds)
  done (took 6.752116592 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.59567079 seconds)
  done (took 4.080238416 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.995260361 seconds)
  done (took 19.481497193 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.634114576 seconds)
  done (took 4.12162252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.6503327 seconds)
  done (took 4.133856268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.732859046 seconds)
  done (took 7.216797472 seconds)
done (took 115.032090745 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.611707257 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.613681042 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.614024451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.612285822 seconds)
  done (took 11.936580692 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.762079103 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.765473039 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.769215765 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.755836898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.75884133 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.767069751 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.681246337 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.680841118 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.743441956 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.742820578 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.773196159 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.756333749 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.764532417 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.682148477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.743361289 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.773667658 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.743117264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.768483338 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.682413315 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.754945374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.650542154 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.745757404 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.743921765 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.650276966 seconds)
  done (took 43.146116906 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.203488656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.771073333 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.855624169 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.735811726 seconds)
  done (took 9.054118475 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.815024453 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.81763938 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.827796259 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.866589948 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.91928841 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.826066778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.68499884 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.677973366 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.665487629 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.819814656 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.890640214 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812407151 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.037059392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.651037747 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.033171956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.650618141 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.65018282 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.815744517 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.864368158 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.896428868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.6504911 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.814209475 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823403381 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.808921302 seconds)
  done (took 44.808063862 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.666686385 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.675996298 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.653540509 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.674354609 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.652299779 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.655474624 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.653669786 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.666670392 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.652377303 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.653255976 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.654274402 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.673554019 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.652885189 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.65318397 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.668093897 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.654875106 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.655902402 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.667477268 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.670738157 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.655843387 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.652907608 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.668509872 seconds)
  done (took 38.021279103 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.618437094 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.616549423 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.056154696 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.96264518 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.617974185 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.617867189 seconds)
  done (took 15.979447108 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.74714082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.947231278 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.650142522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.095631156 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.221003873 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.648272591 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.647005111 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.993656317 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.366390796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.352306533 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.715858211 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.742344958 seconds)
  done (took 24.617610383 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784314052 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628535724 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.626334955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666518696 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62719966 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.626550904 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.685601012 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234037233 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.656123869 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988318138 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637198208 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785562117 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966534292 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627621641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634353363 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.602623769 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971221969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343806569 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63569257 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637942088 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690553666 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.635244049 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.648675296 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918169761 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635106042 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629117013 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.976187894 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628721502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045342358 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000819517 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005595195 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63159135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990359807 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207046929 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811898706 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914345253 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630673007 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632098118 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.628573927 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.645346451 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648863169 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.630765547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99905819 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631096454 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.629705496 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644804064 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245746963 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.661588112 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.631275668 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.631686683 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010860739 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793892855 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.659290682 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.631620544 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633592861 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631842499 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.658851451 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832999504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351479403 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63164401 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647719169 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.636293065 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.630533115 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633621566 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452554546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.661991095 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.659378962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659314009 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630047788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63129194 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706004793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630164283 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.684715144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633874741 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632723687 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.646208991 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633702861 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398526237 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655979298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.636850608 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947133362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63151648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632076817 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.631336778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632230677 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624503996 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666425039 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.607779663 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697431077 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24088559 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920032778 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68826385 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694262797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938816242 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.607919904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634832334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.642220564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635550443 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685402033 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245668112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634258868 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.663942182 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970259766 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.933997123 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647394127 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.629252086 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249880729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643190031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.691142917 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644442006 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925260957 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.444490532 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020969845 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636435401 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700199306 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.63510688 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653317228 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657035577 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.668148861 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644874254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035019816 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.61590409 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637211408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786657577 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640646552 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.637638907 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652727836 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637757148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63648003 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.920067978 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649825861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010509367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.638710761 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637873573 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.636507199 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658944689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.63802471 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942120293 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656015405 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995115231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637526113 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636940564 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637815535 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.943047646 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.654000694 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.666893116 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06480021 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643868819 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649563747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015853273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703152056 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835860622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701169541 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.643259593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979924542 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.666906036 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.66765683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656230795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.639497872 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646170159 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.668424106 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633973705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462166452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644659562 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646722464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640243148 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.683905964 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794597833 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669248722 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929301066 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.65635679 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660117114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.669265205 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.639373135 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947715348 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010176573 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.659699323 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895772361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.252625282 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458178166 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689814047 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.641476685 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.639565199 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.639690703 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640232253 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640983745 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.640257885 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927849345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029554876 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649175709 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460805945 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64853268 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641942527 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.670760716 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01411625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.678022813 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641832945 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.643207282 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668082024 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65648851 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01783453 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944269799 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.688968688 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.641790692 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.246428754 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67146304 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643569968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.640914533 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700157192 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641403492 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334916612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074800015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637093725 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021077122 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662433121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.690593476 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.642489244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655479303 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65680538 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.654043646 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675952019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.93204506 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647878477 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646308864 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364541049 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619592199 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400378777 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649358553 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.681451951 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648889081 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260791334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645987454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644363016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01010296 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26258828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644748539 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260079442 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.651727709 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.663057502 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027599739 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962709504 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647197315 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.671208609 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023406398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945068015 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702790209 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.644918673 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649023245 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.621217196 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338617083 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64682981 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900044063 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264306306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664066779 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64903854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.715360103 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668651439 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203067234 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651013094 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646594724 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.651762281 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669902367 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344565046 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654488046 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646541994 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468252562 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655620592 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.271205019 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648198699 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939417715 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026507631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.011035482 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.667835623 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.654086738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.981607438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026665053 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651998414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.652098217 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403656359 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.595485152 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.677615149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649132896 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.649560255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649297512 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072904033 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.664766239 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.654253729 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661142175 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649114738 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649487759 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.648257505 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658013076 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649643924 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347425815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.666349402 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659226219 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671418202 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653173982 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988260728 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.695800143 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463097856 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969528178 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651532363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714038286 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.6769504 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650611785 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.627026454 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650993608 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649771106 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651984167 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956949623 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.65470218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.630076283 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717801475 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.949273088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65064482 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650262997 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98286521 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.655607532 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.65382183 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630881413 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712601792 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668508963 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653548401 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648689194 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735678887 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803346222 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941731348 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.033001613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032300896 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214713617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673432145 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653925545 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.697869122 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813398058 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652190338 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.668048779 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.653301373 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466897432 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65873244 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469914575 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033914927 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.654288509 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654570599 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653405228 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983200238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652887354 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004025652 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652918363 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.663445471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707373891 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653756669 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655245755 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957427059 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007388789 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654041621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655464777 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658829101 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.654862186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042001011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.955668105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.372576219 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424333709 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662217381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655554942 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302879158 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009714154 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654788714 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657152002 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655561787 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.655440891 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.656487113 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.714431563 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656782961 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988792429 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027631726 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244449242 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029368679 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.68090209 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.614638077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663178258 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992835751 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576478057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946997101 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472842391 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.606115345 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998516921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80992122 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947831285 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.661416931 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98056359 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.673947643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.657634536 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656659412 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658386866 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.655914625 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029722424 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468185166 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998054572 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.68637625 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.674792514 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717378167 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.94980472 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968681562 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.660128079 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970132934 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042284218 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.667583776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659004403 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491692345 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044396777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659579686 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.687174814 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988159528 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.662371382 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723982637 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.615438597 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.659569977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426553055 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.964095574 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712267252 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658682784 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.617579232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479799351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.670296342 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359617169 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666839827 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669405795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027708482 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.689202167 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671457802 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035294572 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.687504954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.675786984 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957567021 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.481873149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.667273261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.662172194 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662839108 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.682625144 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660351223 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732126341 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660836828 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664375617 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.206613844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666118296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663473686 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707208927 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.661139172 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662284988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.664737604 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661301971 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.692791939 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.662930879 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.652332605 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.663271007 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867647066 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366469507 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668114989 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.364297024 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.086945903 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997971669 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670400685 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.641323593 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.689770955 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665687725 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665357655 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66314222 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.680740686 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433681825 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.677007181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.041255665 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692548054 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.963518335 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963848615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.679377035 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957720811 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676367434 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716600065 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.638585046 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664907667 seconds)
  done (took 1133.106944635 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.662897496 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.671389218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.686118116 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.693749045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.6758988 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.731230347 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.707438006 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.703815618 seconds)
  done (took 23.055575504 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.670782436 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.692040098 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.676495314 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.687987767 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.667045928 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.301370935 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.67474607 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.690445831 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.713933036 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.678818305 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.674144037 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.461716186 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.6921054 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.660005648 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.67122998 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.692053507 seconds)
  done (took 37.835994438 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.262993919 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.131287016 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.673468882 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.704209662 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.733905268 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.665655039 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.202403113 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.671038824 seconds)
  done (took 31.570439091 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.701351617 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.70459358 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.706183866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.70439984 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.707879962 seconds)
  done (took 10.048476416 seconds)
done (took 1424.668689121 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.694297368 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.697654919 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.695154042 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.695167521 seconds)
  done (took 8.307797451 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.642977714 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.646180076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.647491766 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.68227929 seconds)
  done (took 11.14520855 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181466373 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.373763661 seconds)
  done (took 6.080661514 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.668091173 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.51579527 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.501289934 seconds)
  done (took 9.21143387 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.058133441 seconds)
  done (took 3.584712065 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.183297261 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.264989493 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.661656206 seconds)
  done (took 8.635732799 seconds)
done (took 48.492745901 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.673120863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.429558186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.820047438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.666080512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.827380284 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.82090411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.952948695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.666325585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.662806423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.661210898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.665979592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.82649749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.94033082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.430333704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.940490826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.435256676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.826808703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.679451556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.661692175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.663216461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.953260746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.667280106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.662067222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.663264791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.826411515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.810357588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.664688227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.435728244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.661921464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.664969337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.81144809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.661399051 seconds)
  done (took 92.261600867 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.664893769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.662571686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.664688715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.663587038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.670506564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.662995133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.664426112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.662400994 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.669540519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.665825871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.662702917 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.663934778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.663054639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663841051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.663901883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.664793198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.664119928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.689241558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.664134314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.664462848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.665684303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.663368016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.68397357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.682106713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.678815721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.665226073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.680460832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.66455434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.664778391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.664566074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.689024561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.665178512 seconds)
  done (took 86.91307994 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.665345433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.687055316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.665273497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.664223502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.686116719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.663242651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.665423516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.666979579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.665533235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.664814499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.680559029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.665141775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.667134487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.665488468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.666328379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668451763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.673868025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.665947814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.66565867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.666843808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.669739148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.67667774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.66633236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.674834209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.672636444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.667944576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684561423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.666922519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.688132967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.666316017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.687237602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.686519634 seconds)
  done (took 87.018692603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.992271294 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.702223586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.70538586 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.674044513 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.705193586 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.703335529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.676831879 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.994949218 seconds)
  done (took 17.687623965 seconds)
done (took 285.412205847 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.676092121 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.700592164 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.738364076 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.675851029 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.728401775 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.734927395 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.981201311 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.733928874 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.978520523 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.684284783 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.72572846 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.681726077 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.68564131 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.906152521 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.67120323 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.682255614 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.678778077 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.670311148 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.682755188 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.019998283 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.736580259 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.671490558 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.684355951 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.686114624 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.657413069 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.789811121 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.788609152 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.92006693 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.8798651 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.783844161 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.677506965 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.685291893 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.690282612 seconds)
  done (took 77.222223163 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.699309388 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.707454698 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.707408254 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.709136267 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.707026362 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.707702774 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.699324963 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.707652139 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.708752279 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.709223778 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.70939412 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.709836216 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.707908177 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.708565803 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.708390431 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.686681526 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.700259649 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.708232451 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.698697509 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.688432167 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.707366628 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.708788666 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.709294736 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.70919193 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.707794685 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.708563848 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.707973758 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.70941626 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.708346921 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.707538438 seconds)
  done (took 52.710229354 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.708454615 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.673835758 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.690143418 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.721937126 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.704351789 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.707153472 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.11129467 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.713873392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.708824076 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.706989904 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.681689341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.715809322 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.772545237 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.693580448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.710223626 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.711733036 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.709848857 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.704726278 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.674730424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.732373789 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.128667689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.71701995 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.116529413 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.73295396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.710383073 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.706025326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.719274497 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.676662584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.7143231 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.681913042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.697348385 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.106957456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.70137243 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.682442719 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.68736185 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.718197963 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.712474121 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.693410035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.712674636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.708025232 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.110480599 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.712302941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.676777612 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.703540793 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.714693747 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.712988153 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.676653645 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.692844181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.028195694 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.723927533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.681487709 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.713656395 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.714376528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.709649809 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.024048169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.717049982 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.707862781 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.677585466 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.725265901 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.10526611 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.716635963 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.710681714 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.679895467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.71329322 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.680082642 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.716313786 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.729867394 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.711055994 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.679243778 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.738560749 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.680366896 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.714707646 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.716330128 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.687835722 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.686332878 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.684139024 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.717342827 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.681631931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.684891284 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.112132206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.72275832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.680134534 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.138523831 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.720561532 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.71968251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.719182935 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.716496211 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.832976526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.109376688 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.686831405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.684978097 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.687543647 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.12655967 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.733025268 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.711534826 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.682241715 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.720588561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.716674306 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.701362443 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.68447503 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.716926992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.732886982 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.682139468 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.718648021 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.118892773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.731785236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.689780243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.715401379 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838614254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.718357062 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.73348657 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.717603475 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.136239532 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.720732015 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.719932472 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.683058369 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.707369212 seconds)
  done (took 244.968471905 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.685191811 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.685554008 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.684763125 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.683510452 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.684418319 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.716078002 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.684711862 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.687773773 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.7132972 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.684835411 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.684172896 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.716346122 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.715113773 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.684157671 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.691451127 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.686167005 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.685454484 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.694399337 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.688068085 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.685374097 seconds)
  done (took 51.386492237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.720337062 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.461562605 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.429529202 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.721479736 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.720313596 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.717994167 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.790538308 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.723367546 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.721972256 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.130016604 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.950685699 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.725925413 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.720632142 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.721677805 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.448008508 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.703908717 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.14787907 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.505602843 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.766667465 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.486664122 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.704410107 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.722568212 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.718618059 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.485530248 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.155440577 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.120534462 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.798168608 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.498790593 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.726171394 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.722138408 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.498991178 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.72782328 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.717780593 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.485487645 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.728432506 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.745054172 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.722658656 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.794065572 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.796647953 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.148699846 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.505115629 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.128276229 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.747347969 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.972095404 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.729066525 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.702881002 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.506934437 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.729641389 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.701221504 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.726202055 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.736555815 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.460858395 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.722785488 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.460465887 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.7295925 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.724719463 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.50557323 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.468016359 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.458008382 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.951155101 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.717386548 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.116596461 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.727784448 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.511343097 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.728928588 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.725766664 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.725334695 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.949912276 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.50027081 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.123107414 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.151134861 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.155053586 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.730364944 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.804328051 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.725399438 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.138736358 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.80423111 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246912823 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.140304713 seconds)
  done (took 158.272376331 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.097994026 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.841256839 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.259201048 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.471678067 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.398167742 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.929531472 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.867010882 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.051258125 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.711022959 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.884443546 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.650603894 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.84806776 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.64408351 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.817083653 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.852042567 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.916061253 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.314481471 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.696981299 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.569614893 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.631946493 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.709829651 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.88140978 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.612328914 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.209768854 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.697248582 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.579060857 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.698432112 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.440755141 seconds)
  done (took 65.835534883 seconds)
done (took 651.930342905 seconds)
SAVING RESULT...
DONE!
