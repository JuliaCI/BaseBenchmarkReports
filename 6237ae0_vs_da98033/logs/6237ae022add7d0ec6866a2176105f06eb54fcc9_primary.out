cset: moving following pidspec: 436
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.475897459 seconds)
loading group "string"... done (took 0.485777486 seconds)
loading group "linalg"... done (took 9.492551812 seconds)
loading group "parallel"... done (took 0.168836205 seconds)
loading group "find"... done (took 3.15318582 seconds)
loading group "tuple"... done (took 2.196650845 seconds)
loading group "dates"... done (took 1.431894517 seconds)
loading group "micro"... done (took 0.203327463 seconds)
loading group "io"... done (took 0.518989182 seconds)
loading group "scalar"... done (took 59.190531353 seconds)
loading group "sparse"... done (took 15.235192269 seconds)
loading group "broadcast"... done (took 1.418352571 seconds)
loading group "union"... done (took 11.401301031 seconds)
loading group "simd"... done (took 3.931503161 seconds)
loading group "random"... done (took 14.530672162 seconds)
loading group "problem"... done (took 2.235560471 seconds)
loading group "array"... done (took 26.896787435 seconds)
loading group "misc"... done (took 1.168279849 seconds)
loading group "sort"... done (took 3.823342759 seconds)
loading group "collection"... done (took 23.00590145 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.729642156 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121434157 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20532625 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.203774936 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.281458767 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167622433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156576265 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.129990134 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.627913019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209675825 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138856344 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422745099 seconds)
done (took 6.174700778 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.461227507 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062428329 seconds)
    (2/2) benchmarking "String"...
    done (took 0.197302953 seconds)
  done (took 0.970645848 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079059285 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162503206 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110063717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096687505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095354445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11084573 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095661815 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111212117 seconds)
  done (took 1.491373868 seconds)
done (took 3.709117549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.506749637 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.935215575 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.558376173 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.261678738 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314448297 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.310849096 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271932764 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232695303 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091976361 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088169383 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.202467297 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420782908 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.408582893 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.002588108 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071621188 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095396209 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.16616701 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.817966866 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080956384 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110811298 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541301865 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.232530128 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117588626 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108118707 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18704704 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136600052 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.151578423 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101617322 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.756359241 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136504509 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215400715 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085945147 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.144106943 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163472115 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.225909454 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113007876 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.74978131 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201462909 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100992312 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102698395 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.744982026 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127387428 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211165331 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108517152 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070886458 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178137387 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117493013 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080464911 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096362603 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103145658 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175247006 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.51367412 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108092866 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.204480262 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094529409 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.783361627 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099311721 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283739643 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127996793 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096941168 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090823352 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091178215 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17337498 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096960515 seconds)
  done (took 21.041806085 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.196151689 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.214982786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09846727 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.146569896 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148673585 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082859349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090632964 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098175822 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116656873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200395525 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128616286 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.224365752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07876721 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110356561 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171523348 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.257693524 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110786504 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124844996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091865033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096916026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147387667 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098880661 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096426019 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.115540042 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175237717 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206862758 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106964999 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123224748 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092115764 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101615017 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146170054 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148306638 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093198584 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091424825 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178137318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127165054 seconds)
  done (took 5.567789033 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.251854094 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105320935 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.263131366 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199068331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152401433 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186362177 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180550474 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309919788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.34049728 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167843969 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131013797 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096151333 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080226612 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086421953 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100695137 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.828985376 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170040269 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164112908 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169470084 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114931026 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097625403 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.775285251 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102840452 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088566849 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096679892 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083393356 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.234599526 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098236585 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.507514608 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085190861 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119869503 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11546615 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208436771 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122225948 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119705445 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111747451 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087657446 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217644087 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100277277 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096014794 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080708448 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.22621501 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137744331 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116987363 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110125945 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108309513 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136154395 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087030271 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110447285 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.166994211 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195621663 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161500355 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103049837 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289614273 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111240543 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102447316 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112635412 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.841446597 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135243036 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084839699 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098953715 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08132794 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097478947 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098477467 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.825814651 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105812967 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101780191 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083100372 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163854286 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.489844414 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09647847 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119767116 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085582182 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086522106 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106100783 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111846485 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.106265399 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082089139 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088534164 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080437394 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110014479 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117721394 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104453227 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082205705 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150943008 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113113825 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112014873 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126517485 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092922501 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088144589 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131389194 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081856568 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105736002 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191335644 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121231966 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116833782 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117541763 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149793211 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087299998 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.323688368 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082607013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127235943 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103788268 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129138838 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099786502 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08046533 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10176804 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080705584 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083464734 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163146375 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087702773 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079834524 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106617957 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092308386 seconds)
  done (took 28.891009744 seconds)
done (took 56.203844289 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.446665878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084615788 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107648814 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08643257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086773814 seconds)
  done (took 1.59506352 seconds)
done (took 2.351592405 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308320004 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199146344 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088016779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195130959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088902856 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198520566 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163040007 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122239636 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209276612 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088170011 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19714127 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08750596 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089403059 seconds)
  done (took 2.818538307 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106278459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100781461 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105088993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123738291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089349141 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104718134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123782221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111908575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103359861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117678303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089558106 seconds)
  done (took 1.935780311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102531056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101010122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095130463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121040532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088938893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102585252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121418024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110337984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101566547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116520334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088630335 seconds)
  done (took 1.910218541 seconds)
done (took 7.419766718 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240891317 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.002788413 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.183958868 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247146373 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331253507 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300640046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607943022 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203710402 seconds)
  done (took 16.010003018 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.234961303 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098565327 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094372546 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092965732 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.118206023 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092217802 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091696577 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116401115 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093547231 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092600113 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114179813 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09250492 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094484012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095838235 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115318296 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093581593 seconds)
  done (took 2.558990707 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141083863 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118214055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118733045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100260236 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094347892 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11948342 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105260033 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099114769 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114881508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097721086 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104080972 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116904042 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101390058 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096617034 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1185773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120406023 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096190374 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118466811 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119946607 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10226894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.120694049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099764083 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099525994 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11874017 seconds)
  done (took 3.49367409 seconds)
done (took 22.824816271 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146055235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087490665 seconds)
  done (took 1.00074835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173730542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.191503612 seconds)
  done (took 1.13965938 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115872277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093871015 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141974618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106733266 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091282557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109338345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118366379 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090960379 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10813498 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093151999 seconds)
  done (took 1.847290008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100404388 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09925913 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127188451 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16586348 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120348474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094958794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094759326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111524029 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096724172 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091361129 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114113813 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109520002 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095879441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129212591 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097673105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09598581 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118397598 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095776076 seconds)
  done (took 2.734095376 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09503059 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095253174 seconds)
  done (took 0.966403199 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097843518 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093416348 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095062228 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112550625 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09396125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092835828 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107310574 seconds)
  done (took 1.472242944 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.540731751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237335768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377233794 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074025126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126943657 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307599311 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.129011727 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075491094 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096623739 seconds)
  done (took 2.779911328 seconds)
done (took 12.714338045 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095621447 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216997357 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.617596554 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130689663 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092450374 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14733333 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.358726343 seconds)
done (took 2.440822887 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348259719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179861001 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085369795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096408489 seconds)
  done (took 1.486255061 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086030214 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101641347 seconds)
  done (took 0.972133258 seconds)
done (took 3.245949922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094176362 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092745104 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115289033 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.110625311 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090359955 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089529122 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109530618 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091609904 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093706958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089115592 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108873761 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090763427 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08899777 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107242618 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091001167 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091511358 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090451027 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109757673 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091279485 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091059903 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109481939 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093409993 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093146551 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092648653 seconds)
  done (took 3.146393826 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116690537 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.220734774 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115720791 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099081734 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098439404 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116715121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097253359 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095074241 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.095193669 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.113625064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096775854 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095495244 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.111361298 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097946114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093079644 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115436956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098658425 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095035759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112168942 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098576572 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096527569 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113179336 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098306565 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097826616 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116174341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097800985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095482323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.11298448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098826045 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098253696 seconds)
  done (took 3.996387739 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10153903 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089722164 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091979853 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120092227 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091525466 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093546254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107527361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094504895 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091962532 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088727903 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110941412 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090632266 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089962906 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108520573 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091927472 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093228266 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098871651 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108489564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091001586 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09070036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112192409 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09034452 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089877211 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089192907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110395043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088495332 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090315466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108792465 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092954069 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089820011 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094117625 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112410663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092418177 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101851989 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110699761 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093188945 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097717314 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087204874 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.111959 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087039769 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086205446 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107861691 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091555288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0966632 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089965421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10893578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090327129 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091576031 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110456156 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094848094 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086341008 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089852558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110989254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092600952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09370193 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10549023 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09252266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087609605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111328752 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094303612 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089738856 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089049802 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116151852 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095773631 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106813234 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116548899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094764145 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094064476 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090980844 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.117476322 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094085986 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099746204 seconds)
  done (took 7.826491623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11859043 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101988668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112534981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095817072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093257599 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091895066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117640449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094627117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093788463 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118661947 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09528139 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095184311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112572765 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097141543 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094609168 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095549511 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117818544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095733682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093026914 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112839 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095289841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099328693 seconds)
  done (took 3.037796845 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22566466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121591859 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143851952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124202665 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114202861 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124843808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10026268 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100802553 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118137509 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105743963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104520624 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119075338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113158873 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102786814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121971028 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104554077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095205892 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119936411 seconds)
  done (took 2.956863439 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.110112326 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096402972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155812342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094461872 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093646615 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111642758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098985702 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111698492 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112733121 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094229371 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098831003 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110210104 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094552597 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093192019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092450862 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113466244 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093576075 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092435218 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118019477 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09934294 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098038374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121561966 seconds)
  done (took 3.102608998 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112170269 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095485117 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129431823 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096486921 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092219968 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092248043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116875268 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094055885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099162471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.113347096 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095514381 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093730005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127093816 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095027168 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099961595 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114142587 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097845334 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095212387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111451114 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09360031 seconds)
  done (took 2.862583782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194742572 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13514051 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114369222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119374328 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129906743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108753844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135804071 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109805025 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108791698 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137763887 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109173311 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108539501 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136943671 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114176251 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126945124 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117654417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116657013 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140774605 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11113599 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107311691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14010839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108938295 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135923081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110218416 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108499621 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127806126 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10940246 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112701552 seconds)
  done (took 4.239083266 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096870489 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095782222 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092625256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110195298 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092395199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091119757 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090976094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110855298 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091876209 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091696507 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110840631 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092563517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091283885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091665916 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109798669 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092382907 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091425942 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109295044 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092122748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091265725 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092108221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111113432 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092378926 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091702234 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091585878 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110104504 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091665288 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091615979 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109988568 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092796507 seconds)
  done (took 3.715958992 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108881793 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105438827 seconds)
  done (took 1.017234105 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.105195012 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110681952 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094627117 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113836682 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102525049 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092926482 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122238939 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102006268 seconds)
  done (took 1.650149855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.194490794 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.217712881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119700626 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104912852 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.211813248 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.192055918 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130463797 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097889822 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112779635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085959394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202924408 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08414876 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090405909 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110517615 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09252252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097376978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.116990156 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103358185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100902566 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114401001 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098267594 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09668939 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113181781 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103374529 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085957369 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115809001 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099902229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104364878 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108963228 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094453841 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090166773 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112502574 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096803302 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096540559 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093497504 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.207831108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119829833 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088765897 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092219758 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117782995 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124273205 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094131313 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114837439 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091911479 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096303517 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115614633 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098037955 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093838958 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084687585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108513519 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094760653 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087042982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111732714 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093500647 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092320469 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118750436 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095974914 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089927567 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108359799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08932344 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091923631 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106555659 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096001942 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096303866 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111911158 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09395259 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091392487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092219548 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.11341575 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094211981 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091625269 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127942736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093795447 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097631898 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118026531 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09513179 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088995675 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117819312 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09339805 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092740913 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116594505 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121226728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094685295 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107584979 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089371281 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099868147 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094827771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116661832 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085800087 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100125861 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115316899 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095084508 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084837813 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111158829 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090069205 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096032533 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104241608 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093920603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093474666 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097756355 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119889198 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091961625 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09385579 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118080379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098773385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091003262 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164354071 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08923544 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109430396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095177885 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099572019 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0865689 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113503539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092066805 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089491199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109102701 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098670927 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093999174 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11581801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098170654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094833358 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115040467 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095813092 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093166038 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089594494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117960601 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102761322 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094067619 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.117582131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094110152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094184742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112855204 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09840134 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090428539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118400531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09011083 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09347299 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095451104 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118071718 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092902037 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088571947 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112169222 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093950216 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091544951 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.117200029 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094585072 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088944202 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.107219501 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094460895 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089453205 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114901483 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103493119 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089057344 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096552991 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109697399 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102344858 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090147427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120166957 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096004806 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098299651 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119020512 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087000588 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089667338 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115991566 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095471289 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089764418 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094682991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.115970893 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101214547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086102989 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.119045376 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087319484 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090680665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119534614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0966852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096457447 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08923097 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152782278 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105742148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098121067 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113772498 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092512602 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096523168 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113675489 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09751226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099220788 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119693363 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09110998 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092006044 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120343795 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091025611 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095076825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112234523 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095688356 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086805522 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095387759 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106680536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09970381 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095905911 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118639318 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100473461 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096644203 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112316307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102591468 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090278939 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.117865198 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087605484 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098783651 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104138312 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120892748 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100213792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094494279 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111544981 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09584906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101130458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118614316 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094816666 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095273429 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107273557 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087951618 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100058743 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096313504 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111563699 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094232374 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094494279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116337979 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09208706 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087379757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.1183529 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098279258 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089478487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113880473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093855999 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092032374 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120905948 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087502328 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090466253 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095487212 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119874462 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094112597 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092751879 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117366671 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101188077 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096880896 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116386309 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092089783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102121506 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092638037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115328213 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090744082 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096776692 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108800078 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09677767 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093584736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110889171 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090283757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096978254 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120504569 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10049162 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091951218 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098261238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121246354 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100818826 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091737643 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120977535 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090811758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086221858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112435318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086675058 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096242895 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09016831 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120437732 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092341142 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092847631 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.11935128 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096492228 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091016043 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120459453 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105537653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087600804 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108648454 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092013866 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093905447 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111895584 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091703142 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095228939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117251083 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09993261 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096660057 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.1118578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095028425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100071385 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091067377 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122032138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100363251 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100472344 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110193901 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100415074 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101183957 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118946481 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088880995 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093578171 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113944518 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094434844 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092176736 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113006968 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091736596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087980252 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090582888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122072367 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093852857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098677841 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114579515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092898965 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090691909 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110901673 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101452496 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092604793 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.121189643 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097077499 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087703052 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087929687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121177421 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095679346 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099504972 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110419768 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099296705 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101108039 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119132747 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09611732 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10343124 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10275811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121425777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100551963 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087563439 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114496194 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098974737 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.105289716 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119318525 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09747315 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088329599 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116862836 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102070941 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096362114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092792387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109418314 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096407372 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102295969 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119010944 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097325086 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09810193 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115213324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090866583 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099555607 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100767493 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11577869 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102623525 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095671105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120665135 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092400856 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10123948 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117381826 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089122576 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088429611 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112895223 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101151271 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088673427 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100691785 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120802513 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091126881 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09341125 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121970329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091589091 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097594604 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119974614 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09365346 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104534941 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096977486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113560461 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100404808 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101699874 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109193564 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093756615 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094208488 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121987998 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094095066 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100383645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115800061 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101421556 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097761943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100467874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122827491 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10137602 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089009712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123510119 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098817315 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097172901 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112470936 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094388888 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090950463 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112914009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10331635 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092241409 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102350096 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.121196348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092720869 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093002329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.121234621 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093962438 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103032236 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11230234 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097300013 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089019211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117453273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09390838 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102929779 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091678349 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.111088079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100553359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100003779 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12101092 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097962247 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101717823 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110712403 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088883789 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098564001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112606219 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106962135 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098590679 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093954127 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115201451 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096594546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098322909 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123170481 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090906183 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091974755 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115730987 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096904641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093566647 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110740898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099850268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094450279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096484756 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115427248 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089702398 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094679358 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124580856 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094085638 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09053784 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114072816 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101694078 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094307803 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111875609 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090363866 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100283842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116948741 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102953944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092431097 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095698971 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114289953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097870128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102635747 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115236372 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094908368 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09376793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121782875 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10057955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088542055 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113079393 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105288249 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101182839 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117596937 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099066089 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094868139 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102885081 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123771954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097788902 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089494551 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11085446 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094095415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090272094 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119566462 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10087882 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094567612 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112644353 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101032192 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100317924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09854675 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.121328697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089487217 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103520078 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114254822 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098340578 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090003903 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088039547 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119841147 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101008376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093641097 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116784334 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098311524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097942902 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110474594 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093464679 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098737905 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119986417 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101903322 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095485397 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093563853 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.119927751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106239907 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097359936 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115872416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102676185 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102451017 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117449782 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098499746 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100034997 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123231243 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098664991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103010934 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113982441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094961238 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103215849 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102542509 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12526998 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095000279 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090343052 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.121739084 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093423123 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091232552 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120558697 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103869214 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103598858 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116219527 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093346158 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10496656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121304532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096287035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094290901 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113204969 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100762884 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094745218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099125873 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114039572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103997443 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102651671 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124461357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105273652 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090445999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12299504 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099420674 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104212414 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096864133 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111959558 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090244646 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099141937 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124623041 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103003252 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099427378 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119563668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100974922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096726686 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095302203 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115590747 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103267112 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10060588 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118825376 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097237016 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094207371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117697649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09823421 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102705589 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101801284 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117917789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104959227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099232521 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115073781 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093453155 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095208057 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119779757 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098154241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10038127 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115041864 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090438596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103456592 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101391455 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116908373 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103226046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102356801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116153877 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098776387 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103209912 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120727992 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098923753 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097036851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119289331 seconds)
  done (took 62.473243352 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152358341 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10423176 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119442982 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098202222 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115098645 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121658418 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098617708 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100103442 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120086361 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108167386 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09915374 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098772057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134789417 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119062417 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135358763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107555716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097004655 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120699776 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09973042 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09873581 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135255468 seconds)
  done (took 3.241960587 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122716094 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113439984 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130940045 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112340333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104022865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13320395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109743913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130887524 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112284879 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105921081 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133339442 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110188174 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104797126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128591492 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106477297 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127315143 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112519616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105550224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131952883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108693501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106114961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.13115774 seconds)
  done (took 3.439930105 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13441409 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107692535 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096354571 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119113332 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100900331 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097633086 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12143723 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099288115 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107587494 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092598158 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110879044 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093840215 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097306019 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118165586 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093031174 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10056656 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127512933 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101744084 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103250769 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097836743 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111734948 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100211626 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099023137 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109292879 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103637761 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102716065 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097957289 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122776018 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089879656 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100933436 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120004296 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092515186 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0901197 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089754431 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111112034 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101315538 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10202743 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119093775 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098927873 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091335568 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09957188 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124375802 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090184652 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099671194 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118906741 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093641377 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101997468 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098323955 seconds)
  done (took 5.863246507 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.136463513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157823072 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102524979 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127360889 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135325938 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108298199 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101319868 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15179563 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100848998 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100576058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137800135 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112422886 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126857403 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106719855 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101256871 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126004082 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104782458 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101952281 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127947416 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102166134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107244015 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126789028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113053972 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.110856276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127390502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103091322 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101482318 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128628159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110882396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106588764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129946203 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10824512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134051334 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105193545 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102257696 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124229345 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115976759 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103825493 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125293656 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101267696 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103920827 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127560844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104409436 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115068264 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12586845 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104562388 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10373051 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122547916 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113938651 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104745024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.384396158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113718231 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104196211 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125401561 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106417164 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133768408 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103639856 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102205944 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10512049 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132549957 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100993359 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126729942 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113563812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103537258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130424407 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115592213 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104349513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126466431 seconds)
  done (took 9.095301923 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140603145 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106993424 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13594543 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11566408 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106033596 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128894324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10764686 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106583317 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129024159 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111648067 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105921151 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239016498 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127125104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111098904 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106374002 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131489486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106340198 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106600567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131433124 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107456681 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108135259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13675098 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106375818 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135333132 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118715306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103676732 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128891809 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107908485 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114469654 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130332356 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118359744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128621873 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109147469 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114736867 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140117679 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108716199 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101764198 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128787746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106719647 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106281602 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126912438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115475299 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109200688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125422723 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107368542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108963996 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136726185 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119327395 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135103144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112343127 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107335717 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136157677 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108065907 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105616503 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136617862 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121153046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136977614 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115812074 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105761144 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135638547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115796848 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143060301 seconds)
  done (took 8.350928565 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108141266 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100495391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100120484 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120932487 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100194166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099871359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099469772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121351814 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099925836 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099294052 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122266386 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099714705 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100340553 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099306972 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121038647 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099979333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100512223 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119535452 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100622503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099791112 seconds)
  done (took 2.987639559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116882461 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116962499 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123511377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107413938 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102680026 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129627239 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102503607 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102075341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101511581 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125179396 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109378504 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109606605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124182412 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108265444 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109242942 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130051035 seconds)
  done (took 2.696954131 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127112813 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117272595 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20162976 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104260186 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126358387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109512041 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102059347 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127092279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100903962 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108486351 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104826528 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127477733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102532522 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103122052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124654609 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105496237 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101077448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126958463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102981951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207193876 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106371488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104269544 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126251111 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106051614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103897499 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130083442 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107985799 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103180439 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104121202 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124957161 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104189646 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108283602 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123616697 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107130313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103486414 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125499689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103955189 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103422439 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127389803 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103844281 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104101925 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124642875 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103272561 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103880877 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101202325 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125079802 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101399556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108014434 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125968672 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104422916 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102441659 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128205968 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107551526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10981152 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130945213 seconds)
  done (took 7.220225142 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119195325 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105334484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135546776 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101307995 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103592084 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104011202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12697774 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105197386 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103774719 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124457656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105476472 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104470757 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126209625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105010281 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104657094 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104815633 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124413796 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104604712 seconds)
  done (took 2.887837413 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115848181 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10268317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106066421 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125508069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104250408 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101794369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123564875 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103494097 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10228256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101686883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124860849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103724293 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101928325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12621172 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103448491 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101962338 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124392565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102100344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102860008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101700572 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124944939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101951302 seconds)
  done (took 3.292058438 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.123522202 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.23400378 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109546892 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.239099259 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098369422 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12246718 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109306288 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099878483 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140623399 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098033276 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.122859059 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099572578 seconds)
  done (took 2.483144051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136150623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140845005 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126679796 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103607868 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112820911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13219635 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107891304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108779545 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138711005 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118645884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130000819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1173409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116502944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137140065 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11267159 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111035838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130122343 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107990827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103540331 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145180893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108666054 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137075392 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108485024 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107367564 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130193721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11645133 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114854689 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140518148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107932789 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136955405 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112937057 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107425113 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138050167 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11961123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103717938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139281608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107576668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145693736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113533223 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115576988 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126319206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112617184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138948745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113418962 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115871229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130315944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112920993 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107045386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130062699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128534502 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135009486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115880169 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113711736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137375081 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116487788 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151014734 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119764741 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137888065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112830899 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118314696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137524821 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112264276 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137315647 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119978945 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112290746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138048351 seconds)
  done (took 8.97382677 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151819167 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104155214 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130938997 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120622601 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115563858 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130685613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108717387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107923291 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131714655 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105143398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174324752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108151253 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115139293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139845018 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108479646 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108532237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110982409 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115744817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127587035 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129345569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107820345 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138834275 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116308156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137883805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119624849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111805698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131355041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108986485 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107953532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131812363 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112810785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130086724 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117054271 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104206966 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139226923 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108638675 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107696447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135740307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108166479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113413375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139929945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124158666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132244959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10934945 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120607167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132158286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108175139 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105465367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13110948 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106184662 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118234309 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142459177 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120569452 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139033113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111454327 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109170796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130832559 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109432841 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109079723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136123735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11772768 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131090832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128891251 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10860159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131807613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117017953 seconds)
  done (took 8.920943718 seconds)
done (took 170.263785993 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.183264297 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217063217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200226858 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.187586075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092657593 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.165077417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128454533 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201114472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094888323 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093034456 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116460899 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097674781 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.203914687 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094096184 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117310239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097252661 seconds)
  done (took 3.180976785 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206388466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343272284 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134727119 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098961048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101008096 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099036128 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121193345 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100829232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099939455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127767994 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100081721 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09565099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127635854 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096321187 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098411606 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121658837 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105689069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099364451 seconds)
  done (took 3.180524423 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12480791 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.216706538 seconds)
  done (took 1.244482207 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130645035 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21504257 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29855263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173368066 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119333471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141393469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148765426 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133953696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191163276 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135145329 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11278159 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096559137 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14917714 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105743335 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138316681 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09919348 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127809409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136120172 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114835623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101198832 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146142188 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103832338 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105149475 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137131963 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180045102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135279912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102989214 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103104033 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12335577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114622956 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105558745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138612739 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111959139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180502772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102470223 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177508327 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105633335 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123976799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114752163 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099232241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12574099 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103740148 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112330695 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120127008 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104727074 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10608025 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127373879 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104631672 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10720204 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129263714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107713907 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128445803 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153669472 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129964362 seconds)
  done (took 7.95098846 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916076759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14916394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098753479 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.068548871 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143829883 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112849476 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.907946674 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148506734 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256611193 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.929914062 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116673915 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108423425 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266183221 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259405055 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27846062 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360246369 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764465789 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112198695 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166921506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104573424 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13970757 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115537807 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446359833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100003708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099378839 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127822749 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107702662 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177367527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100361924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104433112 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19873463 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296192204 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213174106 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100227689 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122490297 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100555105 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188929891 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277422569 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22121591 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168637437 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120230024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09975647 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103869494 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136577144 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097177023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182865432 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192394508 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170300287 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128427086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108737989 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107726059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126467828 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180660404 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098032997 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360751951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360734141 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122008323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106826224 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112343965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270100618 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125634552 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242233667 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121664354 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217044011 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123210361 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853447844 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16545882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121787764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104784903 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104428573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129971556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103979703 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18164349 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40207166 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128728171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106449501 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099409849 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226832336 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099410407 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122911649 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184243052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10264315 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106855068 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131003879 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107352687 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19108212 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251814005 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129488115 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10544637 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127138793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111068593 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102278858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23635785 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235326433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178876448 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234142903 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105698637 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182526213 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189120418 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105633754 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192994654 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105253259 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111749336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126038723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229630947 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13571216 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126353986 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104726934 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106810929 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161944546 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10305675 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129531416 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16803743 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483257404 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188721485 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098476769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128202825 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107283545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181856087 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107062148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268993145 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106873157 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189467739 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128607835 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099045626 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106684517 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183967458 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107495164 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129167613 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104616586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10910291 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.281933268 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222503015 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131806286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249478932 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173347673 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128999156 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170825424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130918045 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164981385 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135473582 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104587112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124117319 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838177956 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11329681 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106085488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128490153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181813763 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125128203 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102932991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100070338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09719092 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845448224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127763174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098477188 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102368465 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127168197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106146459 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106739621 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128369676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1577804 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272527044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109032091 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104881354 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1233645 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157409961 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126015117 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101550763 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100576407 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124216424 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107622973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105873659 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126385415 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16640929 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180397801 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232172262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581696038 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125010101 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10160496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24492081 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10151682 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351512507 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107761469 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239462085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186084627 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098432001 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357950407 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18718805 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209282759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105033259 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1950204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09854186 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107366098 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181024487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124656704 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108408199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180210417 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111055184 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107692187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28730099 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101547411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254735815 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099286927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191360158 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102818661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10603171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351934 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102318389 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112585127 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182775338 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105302707 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130244286 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.895694836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102877747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110246911 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12827581 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237540053 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186000329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107566333 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107264409 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132928566 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159688044 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235765875 seconds)
  done (took 46.934621366 seconds)
done (took 63.391760505 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258440756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171138453 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.377567915 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154585371 seconds)
  done (took 1.95539768 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261414737 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170406935 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.241940543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097637765 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248584195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097940178 seconds)
  done (took 2.046813774 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.182082582 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170203697 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147948074 seconds)
  done (took 1.431996904 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211355159 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209403374 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347461224 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235157836 seconds)
  done (took 2.01812067 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.275113267 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118137159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126531174 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226258032 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243470765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206235583 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123915897 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176083984 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131218991 seconds)
  done (took 2.599067312 seconds)
done (took 10.977884339 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.310282543 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.363746396 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.413720348 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.261096191 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.230902687 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.269408142 seconds)
    (7/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205167012 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113629464 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.351623276 seconds)
    (10/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.192682184 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.137658218 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.314007599 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.214469731 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.33040717 seconds)
    (15/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.142670307 seconds)
    (16/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.161569778 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087967401 seconds)
    (18/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145122854 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10433331 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154073643 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.403436079 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109867393 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.154073014 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.254675752 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10365976 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.205211781 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148437801 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.415504164 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085831725 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147693572 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126451974 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106949355 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135156712 seconds)
    (34/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.203327742 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13439649 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111814847 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138650732 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.173624523 seconds)
    (39/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.411445548 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.323490368 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.168404725 seconds)
    (42/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198503665 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124452907 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106105462 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.112044485 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.239281755 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180326283 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118829217 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109872142 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125720666 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.285037154 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130891854 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.139519487 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173299202 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136839957 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192502343 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087280094 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132800617 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086314747 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102295411 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137773177 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08700436 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17310665 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080925724 seconds)
    (65/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158419517 seconds)
    (66/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111677051 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.268063627 seconds)
    (68/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141190161 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090074233 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197732408 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086266138 seconds)
    (72/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110627406 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102956109 seconds)
    (74/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.102728915 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126064355 seconds)
    (76/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.135933697 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099813321 seconds)
    (78/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103932909 seconds)
    (79/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079450117 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100593378 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195063073 seconds)
    (82/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082701787 seconds)
    (83/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.174208187 seconds)
    (84/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109176035 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201624802 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12345711 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104814306 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.13334887 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124542025 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.166129855 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161253816 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086736239 seconds)
    (93/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079555787 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223194164 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182181407 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079959959 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102073595 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127484648 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111820295 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08799408 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085624925 seconds)
    (102/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155975282 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084700925 seconds)
    (104/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.135946687 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.153540195 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.087393795 seconds)
    (107/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.194156883 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107524149 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123128297 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.087041515 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083974365 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.11053752 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112046232 seconds)
    (114/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176649908 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.16968757 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110628383 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081575458 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106715246 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.110223724 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082924162 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082985762 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081922778 seconds)
    (123/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128871974 seconds)
    (124/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181606683 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084948931 seconds)
    (126/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079072695 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146421343 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083258213 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11351667 seconds)
    (130/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116494074 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.110654993 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111242847 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108422377 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127530323 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124574431 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123828806 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109248459 seconds)
    (138/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141995501 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082681464 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080700207 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125517568 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083393357 seconds)
    (143/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086191268 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.142269838 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111426879 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.11151886 seconds)
    (147/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083332036 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103998909 seconds)
    (149/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.137401271 seconds)
    (150/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114012194 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086223115 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086808595 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081461617 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130898419 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087771426 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079889629 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079599647 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.130206223 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105804377 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100637868 seconds)
    (161/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07933432 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159988222 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104457208 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110222327 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149937573 seconds)
    (166/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086423979 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.152124303 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100556642 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129012914 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08291194 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106610904 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.107144142 seconds)
    (173/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082259902 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083256677 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111126422 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078804923 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128002311 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083889578 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124486641 seconds)
    (180/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079789406 seconds)
    (181/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129227467 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08263055 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079565914 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095029473 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129863023 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081743635 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086295611 seconds)
    (188/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08839036 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081584397 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085720398 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.128355079 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106724046 seconds)
  done (took 27.625325889 seconds)
done (took 28.560930899 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227196769 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131915727 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1119238 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110861444 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234867856 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119182544 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154399103 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113131146 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121432411 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137418104 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101942713 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123573745 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13748536 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.221307681 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141842618 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103742243 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102077506 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14848201 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128122369 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12710932 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235119354 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130096571 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122817923 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103051932 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235960452 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104565253 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136147481 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113365813 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125179746 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110661698 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138086834 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10378338 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127073631 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154345675 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102474903 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112121171 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126606952 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086970557 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112545876 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112625495 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150456842 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112800657 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111104073 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127416552 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114567502 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11069613 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127521942 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117227058 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101298077 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137031183 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105699614 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127920457 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134458928 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102392071 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101668794 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127039828 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123559916 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102300858 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125342335 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12636118 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104008408 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10190849 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139159316 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103194897 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111396568 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126098438 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112375393 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113559762 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111212048 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129610685 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1022519 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110617558 seconds)
done (took 10.11443683 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112165591 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147107674 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248018691 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.252306945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156429808 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.121181192 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115407273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153408055 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116106594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120170798 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166563709 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135063125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254775974 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118298493 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145380848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115419287 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113980416 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137805722 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.251702957 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129316096 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125546552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145329025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128361714 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117823921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133621601 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139846624 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137154662 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116873311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106268122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114387939 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151423725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107104751 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11013698 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149788252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124408488 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115774988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143523698 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115174074 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132025588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107560536 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11366634 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146340118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108276199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120010373 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139924706 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123089256 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114864816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142869984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108797005 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114334861 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10768171 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155775606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120349243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148670931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120123097 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118706576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.14291971 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120802164 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110450289 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118224182 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133338604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107318396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108146853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152650697 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110372555 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119084766 seconds)
  done (took 9.828749801 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130777315 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136787437 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141992777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118404373 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111519209 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125755726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101475823 seconds)
  done (took 1.850407793 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107858897 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268818402 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259916362 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.260078464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.249280164 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269380974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125760755 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103627843 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165682103 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113969032 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.269635336 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325539791 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139600783 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119642798 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26440562 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102281861 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.264179823 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103032306 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144935749 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262765608 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119871528 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132697252 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.143774917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103583214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265216618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104057995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331023729 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122193611 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11358225 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115683496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146374829 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178908435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263584985 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.14625526 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112163076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261432616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.253873555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117421286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.332344846 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108384803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249802995 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11804029 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118983497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145803457 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120130849 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247305331 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122322678 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146203019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117913737 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27395425 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114473076 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264559062 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143327793 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118281382 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113936346 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147264397 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126637403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118159579 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272275406 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146954372 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.232577131 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.260735182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254230723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.261866471 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154539415 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265672262 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211962079 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146544683 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113364416 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118231376 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262594357 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14541472 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116274074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.252218456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120556043 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265074839 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263036591 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114456315 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145818823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107532739 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11604241 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131468045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252799117 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118883623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115693553 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148551642 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117571026 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117948239 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137158922 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127382679 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117277623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142405749 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123962202 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117522766 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145638423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.266321297 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115211369 seconds)
  done (took 17.837878267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110348669 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105639761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108955545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131340515 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106278249 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105218059 seconds)
  done (took 1.683799037 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144575717 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118978677 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153275566 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120589078 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165843716 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25330372 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260680216 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13925046 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138574046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130180102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255113587 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257565156 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255398539 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124231301 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259685747 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11987523 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261927302 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116272467 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.157158672 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11630648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117074315 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151463185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116887769 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246609572 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118713769 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148027483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11246933 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126856006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153967345 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113735692 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121847478 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146275934 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111893489 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111291806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258292483 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.140081081 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115383947 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121369345 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148939331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120189865 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258633727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116410823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123671522 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149866264 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112533095 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138867659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122665878 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111359413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259454012 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120996741 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150670417 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120311738 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11842777 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150707992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112094562 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112022765 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149658486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262239982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123073542 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110669171 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148748943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120300912 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11308512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151574652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120505268 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120598576 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138403284 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120927109 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115802435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146262524 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122473885 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119075617 seconds)
  done (took 11.828057046 seconds)
done (took 44.007257698 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.740105149 seconds)
  done (took 2.754770351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.107698472 seconds)
  done (took 2.125053682 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.900545803 seconds)
  done (took 19.945174104 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444074837 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476045522 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0562193 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175985717 seconds)
  done (took 3.165836452 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.107554808 seconds)
  done (took 2.132399029 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.353928807 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.249732246 seconds)
  done (took 1.627264542 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738797999 seconds)
  done (took 1.767903237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.782050358 seconds)
  done (took 2.808050381 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296274757 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.271536067 seconds)
  done (took 1.60215688 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.671216431 seconds)
  done (took 1.704960665 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.086096494 seconds)
  done (took 21.124180456 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258706571 seconds)
  done (took 1.297829493 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297614941 seconds)
  done (took 1.337596283 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.766460036 seconds)
  done (took 4.804178171 seconds)
done (took 69.224514725 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119515268 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122503358 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121104856 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146384397 seconds)
  done (took 1.537773833 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123540919 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119466938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.123011173 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144648842 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12453071 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117921141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143842663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122264361 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117172721 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146854778 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118984474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117439515 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147124785 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118794855 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117453623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146872867 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122945103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.139555665 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119428106 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.146362467 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121259623 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119340106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148180016 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122426532 seconds)
  done (took 4.128277137 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115827858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109498631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111217913 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135052299 seconds)
  done (took 1.514274266 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127395041 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13199807 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15399549 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125528673 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131321518 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155131948 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118835992 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116023623 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144308644 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128567397 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13404414 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158541111 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131084616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120639852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158332635 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114023717 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119208176 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157164818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12627339 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128190743 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146619273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126177917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124641338 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154674068 seconds)
  done (took 4.272395533 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195452089 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129660343 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173566834 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166259061 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17586573 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119208036 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146319375 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151768532 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125014711 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118580372 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145761063 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167481145 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124284869 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.149200398 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120745243 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.123250589 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.156067611 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124013116 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189315624 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123859396 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123717898 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.157339631 seconds)
  done (took 4.248892823 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122890138 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110414948 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107817412 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132672528 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123108183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111485197 seconds)
  done (took 1.751375507 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10875992 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104089074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103887443 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128950895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108133095 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103145239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101872243 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130755594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10490943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103316071 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129512838 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104513012 seconds)
  done (took 2.380787878 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208584905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148073998 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254893517 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385808978 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191261613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16267348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307645756 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191505009 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179262321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166055753 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188160589 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192320755 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155424304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216050379 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139670695 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188464678 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172894542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238019513 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17012324 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215544798 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185582398 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202360439 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190995657 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176692371 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141112777 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192423911 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120815084 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12771694 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197279626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167367373 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204083774 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180062283 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142600676 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220531606 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259954984 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180317483 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26608251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16143694 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175661863 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.2170577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261167429 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142791831 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222819396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180934112 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131620648 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219401364 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153764596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212279858 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135706922 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170465672 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188835675 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210885965 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197419867 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139185717 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327148096 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135216776 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170737424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177689914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216021744 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230308617 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181717731 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122563071 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202619481 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218570252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245299629 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143454974 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195546724 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126388698 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195449645 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2067082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211197317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18762777 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190828457 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158969098 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171551145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197831722 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155973186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236288218 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199884357 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120586982 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17866888 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136746928 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125808666 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216454342 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122438824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244248169 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132402521 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.212322949 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179278524 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184491827 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162679416 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191849466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191521213 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148963077 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103624909 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174930485 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160291892 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187299097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128925123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182323046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140207494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125058711 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181346665 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121865847 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201020744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136185823 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192398838 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170375576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159328501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183163446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175515057 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161715815 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200496376 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192509606 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159860971 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133454051 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24785994 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197472179 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139233907 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200349919 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196787734 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180266011 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137269132 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194392109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193340578 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171860472 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199208363 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168246116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133957398 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170791342 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172029488 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190142336 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158821314 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156899002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16534875 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219515485 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125759847 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168173621 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182096899 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162025911 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124304145 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163766217 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137232395 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141974199 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177091444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139675793 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184126976 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166376604 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194275822 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158442565 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163567518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173994403 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15985287 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170308249 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177913825 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119327185 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204703475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197419448 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158905682 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18141015 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190693873 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208709222 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172533183 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156491129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183550576 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155805357 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12148612 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16141913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198607658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192676317 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188660373 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207205399 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194711842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164682883 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178970733 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169262865 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214433623 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155043599 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172340491 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173906892 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200002319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120088107 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.152585326 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12922998 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136450941 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160431504 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137602414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213901572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194485067 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178345095 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194680203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137975856 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221666876 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124306519 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193076647 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175821171 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169389767 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18720963 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220081408 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208673533 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141029107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193002476 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121609179 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125247492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162379378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160884914 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165953436 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135623322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140667399 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219205529 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20171811 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149098429 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21869443 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196496566 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202307919 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.151584081 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161556019 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198171708 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169598872 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.212343832 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133767499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158963301 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222032773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170391361 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1922528 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197459956 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177875343 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226532508 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194778609 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131714514 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14688013 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189282171 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136748255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19288165 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145571445 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160716527 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152193376 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166904953 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141651533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219134082 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144881762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209962035 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155908652 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203778497 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125156488 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171135729 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173060834 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175899323 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106347602 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19812254 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194733982 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179894873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154291898 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201702535 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12965294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346429878 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184705681 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204076929 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164320197 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138753329 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170334999 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189507129 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190902 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185680805 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170742592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209341635 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199795728 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142143005 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160098083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149289654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178569705 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.144747387 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17997128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163943054 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172139767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192207612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166447424 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170295329 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207464371 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14469801 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178042892 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138883792 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257221676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168572065 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206273158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190595327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16453901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212575776 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124227599 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126188044 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161743822 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185375459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158536571 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178196543 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192880464 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209534257 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175786949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190719295 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140198345 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155844469 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166546738 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147569604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213015356 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163320349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138051703 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21885751 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128895511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160115403 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160607923 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316437586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147276899 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202342491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107682269 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309400518 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130342273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132182312 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192225282 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199832255 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134292566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183366265 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203864192 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141650066 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192519384 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135713907 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205394904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209899877 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167885455 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205770929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144943502 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193358946 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161028648 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204899799 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144334695 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178447274 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159405536 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224612013 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174840879 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161883086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167992313 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200734185 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169144833 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205314028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137830655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213195966 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12578967 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196781378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136135329 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154485217 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160123225 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195792635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129682064 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205613158 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199254249 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131642159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127080825 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176647533 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166893151 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169911551 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130608788 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219867973 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128735016 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212460048 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209671774 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15965005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169409252 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174996066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131055632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137269342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173549863 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130991099 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201775239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181514912 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.159151872 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177858721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195219937 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164441721 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187896241 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141825717 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.295751436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127315213 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22142746 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149761782 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228253188 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148392683 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206837336 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169031062 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182373681 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164465468 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180508849 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218736405 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196355067 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198105499 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133444065 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141730105 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168933773 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134588623 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18229923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168909468 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141432371 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167253881 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166395531 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177111628 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146705947 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172460409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199989049 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182774081 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219154056 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186807485 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166931214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175992562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207194714 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129030724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196568362 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173666987 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175665285 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151141077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164839816 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137623716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246637858 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125843726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189602183 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175509609 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196957308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173011596 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16347002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178478911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169565138 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177415648 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126050736 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182813191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168766015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165322699 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126837917 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203205519 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161393149 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194471867 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142684835 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179955357 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221171421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122637452 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164095379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310810544 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163022058 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224441809 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137826465 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135705874 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177339032 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157875943 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.198880738 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170174503 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.16027087 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129145753 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17567171 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160459371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17028143 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169863012 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207868333 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163105588 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215087896 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135218173 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282763053 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143079437 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2012867 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118659713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128894952 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169401151 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136017786 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141646434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212017883 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246973306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162558032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178467946 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135012979 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155472006 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131293372 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162330419 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182237629 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16687562 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177240486 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104392884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169305747 seconds)
  done (took 85.752591166 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174653913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175668218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.183565522 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.242772212 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210789375 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313919738 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250819046 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262529614 seconds)
  done (took 2.938510407 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121053452 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160943232 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141629742 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144553788 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110897343 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.504994874 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160839657 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12094024 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160515384 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154490945 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138588085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.5798296 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117090379 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147666334 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122908926 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137572802 seconds)
  done (took 4.149821985 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.326139239 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.572030493 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.19240219 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.310135249 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.797128043 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217491973 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.795570792 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198068972 seconds)
  done (took 13.541855847 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172198224 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170148662 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.464799749 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.325842344 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215567287 seconds)
  done (took 2.485412356 seconds)
done (took 129.733447253 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129949975 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124765866 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124087218 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157741497 seconds)
  done (took 1.666852398 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200630611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092512393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094659733 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.124415751 seconds)
  done (took 1.65564343 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467474669 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09317393 seconds)
  done (took 1.735649136 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147605852 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13574715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164826128 seconds)
  done (took 1.602935401 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135865881 seconds)
  done (took 1.279846131 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121280856 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116296353 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.281283814 seconds)
  done (took 1.665010264 seconds)
done (took 10.747328275 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12372537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.936895328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435519489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135116764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714386026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429949506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.441656023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179124454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171930244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1092787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16287979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692464174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.455906159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.886328771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.413796824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910034369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698705192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112967089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146926226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113731572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.423002883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138672732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114731489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113317483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693439927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.45190607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111063146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.892348391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141522466 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116069299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399938079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142582308 seconds)
  done (took 21.143014974 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114851546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16890437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149220791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11334933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114439343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141498022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123305834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12380485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204378154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111871908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163372451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111590378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116411731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11216161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166805569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11116232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114615553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143068054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119310703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113007737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16435882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111180759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112824334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144585565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113531127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134019975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142081615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123274196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110783222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145413115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117098061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111614054 seconds)
  done (took 5.314025687 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164686236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177597374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151690868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150027947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190235015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114328785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199708357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17973794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206977298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114336258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133165608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139055043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15410542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113690574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167086331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113130168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114274378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14323253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120908392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114614994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164031403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112422676 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11400507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143543323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11341994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134981202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141399545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12526565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111996644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143838333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118261617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112794371 seconds)
  done (took 5.654733189 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129066552 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127294679 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135851284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166144313 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122199059 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125315727 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15807932 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123285301 seconds)
  done (took 2.245061051 seconds)
done (took 35.50593417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138884421 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128594914 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132919696 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159173104 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277498906 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120046131 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130007314 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.15147003 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128691296 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134525138 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110966625 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153803497 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132776452 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123630037 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.276103756 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.161083822 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.250057986 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.278547851 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.154918862 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129466394 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122441687 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.282341491 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121997288 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.153870055 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275755806 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115632791 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.267784541 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124782907 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122285522 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144769178 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279039604 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.1239805 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120732462 seconds)
  done (took 6.672394304 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.2274204 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155563637 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122993224 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120616386 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122164418 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152637077 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231052566 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154187973 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121086277 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120170799 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150907249 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214827947 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159356787 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118223484 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122904456 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112107622 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.265659132 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123466329 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.148215636 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096226482 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116902156 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120393382 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.277878912 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116626563 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.153928932 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122073344 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123108672 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156731872 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124883618 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12196076 seconds)
  done (took 5.640640406 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126377454 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134319455 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138094935 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.22022165 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150328823 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163259727 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140189476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133232026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174562072 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116927509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129064108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181125826 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132094591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124593358 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14335552 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134953335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130277112 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143531799 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124180666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132509448 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135120534 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161778743 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138300827 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121679929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.144682295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122428627 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123266373 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157526316 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12266106 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130215441 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14659881 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118805541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116428074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179596651 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11613935 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127692775 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167569912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12947261 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126032228 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178727198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118071788 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114710327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171627411 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171097107 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115151166 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157263224 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.117367789 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129029536 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112345641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16297687 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157130386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143618123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135874471 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112640791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11116651 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153266068 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115595636 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116858925 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.160046609 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117817566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134952427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152612913 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127401816 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116830988 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1556281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113795685 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114089648 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116994277 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172244529 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12271351 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150767007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.14420919 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126655352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126467967 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.157661808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127458038 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112672359 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154942957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127776165 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120862227 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126734621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148703616 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117189903 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130178146 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166543176 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129931118 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.1250673 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158588743 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11775883 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115373889 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162388457 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116882042 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119341712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157198412 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115745095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118169986 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125766273 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156080253 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11224905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140205609 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14878114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114435432 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13986639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148235611 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119425033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123407173 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187265643 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11573895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125729815 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15771824 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115744886 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121635789 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116535001 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.144593876 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131340026 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12953393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152994106 seconds)
  done (took 17.137114294 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.377468112 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.366650327 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213056632 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411080208 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12603984 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2852985 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396424503 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369854854 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114612479 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147860842 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206323933 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.330761754 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114182537 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177909425 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.37100465 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.448320837 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.143626853 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184463052 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.151190944 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127274704 seconds)
  done (took 6.241800441 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135527081 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149080131 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168096515 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141974409 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126166952 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16286673 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115348956 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134971005 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157544824 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124891859 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117205477 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161325892 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128971988 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131834223 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160787695 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14761542 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124358202 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150220918 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138441418 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118404302 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103464554 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.17151818 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123498945 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16699868 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134388248 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125207752 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143679095 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121358659 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121453154 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123589878 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149804315 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134953055 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121914386 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136245258 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128679422 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129751137 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150026271 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119448709 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119413369 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117163852 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159238266 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128921073 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122082843 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098162413 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.164539289 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112633387 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128571308 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156168602 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10822305 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136362313 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125841073 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.161340628 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123110558 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135555855 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15471318 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132885264 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124813148 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160015041 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119522253 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113401502 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143217375 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119995427 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123222932 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158459676 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128369257 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135116413 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162643937 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116985547 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119655579 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117537642 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.15018069 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12830661 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165154522 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125812927 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121928284 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125654457 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154267802 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096199524 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123905003 seconds)
  done (took 11.818028885 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140569552 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125127294 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132655557 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18182347 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12784405 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120540888 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155611757 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135210211 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128267498 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165339461 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130755454 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128505028 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169202732 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127053308 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125458273 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161183765 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129339073 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152839338 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160050101 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142984873 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129118235 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152107681 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128453136 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12573645 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174907787 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12704318 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141198542 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160910337 seconds)
  done (took 5.173342574 seconds)
done (took 53.841643132 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.316896303 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.601222684 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.292767328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.291624236 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.312527731 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.326811391 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.289314864 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.292134705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.820986872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.258275162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.291219086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28834819 seconds)
done (took 29.576207003 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.439029433 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.5128472 seconds)
    (2/2) benchmarking "String"...
    done (took 1.69231667 seconds)
  done (took 4.396859964 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.282000386 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.279299554 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.618059391 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.282380532 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.281267611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.280973439 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.281636373 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.29051313 seconds)
  done (took 16.497946841 seconds)
done (took 26.802363905 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.314677656 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.601034671 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.542184799 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.259950933 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.299557017 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.285652387 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.285561314 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.342236397 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.300918783 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.271316625 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.815977856 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.571289827 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.283790209 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.680185518 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.278289439 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.295637246 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.299064637 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.649510109 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.283781059 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319720127 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.271184067 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.263005513 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.31032808 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.290876096 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.299880383 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.299606815 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.285567948 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.292801131 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.600453452 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.312420036 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.262607208 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.303881869 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.290566908 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.288702355 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.305882403 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.291890191 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.615033448 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.295335881 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.269534206 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.28717758 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.587568922 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.313376652 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.294564832 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284310526 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.280422672 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.322366901 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.265090764 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.47095507 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.327161785 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.29133188 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.387385016 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.688481825 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.287615275 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.290379524 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.297823557 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.637883211 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320748191 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.392686249 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.341603496 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.290681658 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.295624674 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.297409259 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.36465943 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.291102242 seconds)
  done (took 150.227055274 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.285490006 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.284161414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.28487184 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.333932199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.292115079 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.284127192 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285548253 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.286533643 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.28610852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288058558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.290527657 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.286485314 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.291406261 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.314783605 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.296960598 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.303558504 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.29044294 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.30445813 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.297644834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.287662628 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.289020342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.291899759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.288778063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.288315295 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.298183519 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.374860239 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.295926179 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.315929421 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.298642027 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.288539765 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.294422776 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.29837684 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.054707097 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.245780416 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.305068473 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.295773227 seconds)
  done (took 83.587692054 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.28778527 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.286269923 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289674407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.324250032 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.287369714 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.935047396 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.938982534 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.357226432 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.848023622 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.880471113 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574988621 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.289043739 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386599372 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.302037501 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29198301 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.385701911 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.315349529 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295016706 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.291613829 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93507694 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.306286225 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.537822862 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.482319015 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.305102905 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326503741 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.684199157 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290356825 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325325937 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.632876779 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.347814831 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290063562 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.704191295 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.484576425 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407930366 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.293605213 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327163531 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.290106445 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.578493047 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290962698 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.291637505 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.295821277 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.290571796 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006047138 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.29549414 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.938662312 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298798891 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.29051753 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.292133867 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.292829905 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.440485275 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.16602209 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.295336858 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.293100819 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.295029976 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.292688616 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290595543 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.328413551 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.447852272 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.205776936 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.29506769 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294404408 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.298167596 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328275335 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.292796242 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.64305901 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295379881 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.294078668 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.351284197 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.516810693 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.840909099 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951145882 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298458904 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.294590604 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393565062 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413801504 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.293793785 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.294985417 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.29354089 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292157892 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.407786563 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.294584039 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.041025539 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.481034355 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.312891465 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.892649338 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.399085108 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.29460094 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.748909411 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.297678777 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.294958318 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.053171567 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393620306 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.293293023 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.296090725 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294089214 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.045292911 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.945143303 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.632417013 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.300245234 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.019739731 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.299796643 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.211422626 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.916208479 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.001813779 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.301612657 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40842554 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.483284711 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.316127491 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.29556957 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.903748515 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.298314052 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.355014558 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.297893678 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.7008313 seconds)
  done (took 391.460285498 seconds)
done (took 626.462882971 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.272761082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.272915292 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.271572244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.271488225 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.272481088 seconds)
  done (took 12.557156885 seconds)
done (took 13.757179876 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580864858 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.582012489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390886019 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578567638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360806217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59930561 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.564614048 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.347598602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.482916089 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.416385422 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47720824 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380165732 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360981239 seconds)
  done (took 20.316251809 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.692222594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.306311997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.429488205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.655222707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37616257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.698946423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.760550346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.306875547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.548758749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.370297717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347957586 seconds)
  done (took 19.688318466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.697894753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.304467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.447236063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.653999367 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372239096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.69270834 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.715029334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.307416677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.558800739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347593712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34642911 seconds)
  done (took 19.638402272 seconds)
done (took 60.841426275 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.361032992 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432483488 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.354629664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.336711463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.33666474 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.336868955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.340514112 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.335985184 seconds)
  done (took 12.027402367 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334779584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.336591755 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334571805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.335993285 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.337674365 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.335113075 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.33593867 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.337833393 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.335518574 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.336375736 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.337129044 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.336019476 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.337189876 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.337762365 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.335595888 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.337185825 seconds)
  done (took 22.577252457 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.339368575 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.336033374 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.335544206 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.335217069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.334370872 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.336956117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.337092448 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.336830193 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.337740644 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.336052301 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.338575038 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.337827807 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.33902747 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341101616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.338545356 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342296462 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.340082911 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.3413506 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.343908118 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.340037375 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.340993642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.340091292 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.340696537 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.342445083 seconds)
  done (took 33.329527031 seconds)
done (took 69.133578581 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.310122886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.304541241 seconds)
  done (took 5.813798808 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.459285221 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.439981369 seconds)
  done (took 4.105050649 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.343506601 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.340667902 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.341823077 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.342960093 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.342422664 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.341613274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.34121462 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.342884734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.341895013 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.341075775 seconds)
  done (took 14.621225856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.342712855 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.345125662 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342765096 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.343403026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.34408384 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.343629103 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.341894944 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.343622119 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.343792462 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.337833044 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.342848696 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.343034893 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.343742595 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.340913743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.341692474 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343048652 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.346094779 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.341426588 seconds)
  done (took 25.375260779 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.364437684 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.370153216 seconds)
  done (took 3.93546826 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.522092439 seconds)
    (2/7) benchmarking "second"...
    done (took 1.425632547 seconds)
    (3/7) benchmarking "month"...
    done (took 1.508355916 seconds)
    (4/7) benchmarking "year"...
    done (took 1.494390243 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.424431557 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.372885826 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.421772838 seconds)
  done (took 11.374301998 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.334778187 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.697130061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.896223255 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.546469771 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.32762155 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.358416947 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.299952599 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.358055867 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.36244218 seconds)
  done (took 15.387447804 seconds)
done (took 81.820961243 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.3046254 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.318639891 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.329724122 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.324038972 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.744448718 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.370229342 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.309928308 seconds)
done (took 16.910886085 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.289573276 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302522967 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.289228889 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.334154294 seconds)
  done (took 10.420464712 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.32500802 seconds)
    (2/2) benchmarking "read"...
    done (took 1.720966821 seconds)
  done (took 5.251226779 seconds)
done (took 16.881726999 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348069961 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.346276856 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.345701992 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.344832328 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.345298029 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.348620798 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.345443928 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.346062723 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.34703142 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.346328188 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.346553357 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.346000703 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346889643 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.345224347 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344629579 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345107643 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348775008 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.356219321 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.349421879 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347713351 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345780633 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347429236 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.349744755 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345939522 seconds)
  done (took 33.536859541 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.346117617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.346993008 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.34795158 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.349621764 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.347481688 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.348128278 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.349034818 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.344914951 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.349300773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.349068412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345819045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.346738018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.348060881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.345599535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34638455 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.346856259 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.346430715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345382678 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347492792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.346623967 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.346545186 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346253878 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.347371758 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346558456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.346334126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344736995 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.34568062 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.345305992 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347827751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347965827 seconds)
  done (took 41.616826904 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.352817492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.354181701 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.345808569 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.346459072 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.347673472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.347402208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.346771331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.348940183 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.346755268 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.346018093 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.346469338 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.347989923 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.346778735 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.348061928 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.350452386 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.347254494 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.346995662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.349569872 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.349226463 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.348895415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.349252653 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.348710685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.347650564 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.347382233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.347218386 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.349485015 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.349601649 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.347576882 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.34846624 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.35096118 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.349764031 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.348433066 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351314158 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.350348742 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.349848818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.349522031 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.355616171 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.356484508 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348105859 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.351092621 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.349395059 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.35024398 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.348819777 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.350832743 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.351428069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.351668253 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.350504767 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.349769129 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.34910424 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.349541587 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.351853263 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.352257993 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.350429828 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.35161245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351622298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.354477689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.353502215 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.348934735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.349579859 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.3502048 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351417593 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351925409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.349825631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.353427695 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.352703231 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.352975193 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.357853397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.352004679 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.352340685 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.351332527 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.349995904 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.350672526 seconds)
  done (took 98.414045741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.35291052 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353056069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352423657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349723663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351297326 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.352616279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351478495 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349868164 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349984868 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351204787 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351748013 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.351122793 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352549441 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351184114 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352536451 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.353412051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.35386574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353036095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.353243733 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35049045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351156736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.352978615 seconds)
  done (took 30.954431846 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353631422 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352591136 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.353906108 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.355427251 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359406458 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354020717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.353362743 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354648311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354361961 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351962355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352879302 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353746381 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.357092477 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353764819 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353615778 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357253879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355799435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358985595 seconds)
  done (took 25.597241522 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.35272593 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355010438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.354940038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354772139 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.353634774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353737232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356076355 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35405941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.355258654 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.356821353 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.354533981 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354332698 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.354330812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35672155 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355176521 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356727067 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.355962724 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355435353 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355678191 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355828698 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.355218635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356024534 seconds)
  done (took 31.030661931 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357084165 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.358000832 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356340705 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.355942191 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356359493 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354580705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.355010368 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.355614285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.356897131 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.357298718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359972173 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.359893881 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.364451513 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360191195 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.357367162 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35544534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356716521 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355114432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356481365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.358157696 seconds)
  done (took 28.36321658 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356099683 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358564592 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355725124 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356469702 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358901226 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.357656585 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357334896 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.355452813 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357125511 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357379664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35834955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357322673 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357770287 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357204781 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359212719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357035975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356758496 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359468128 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.357893137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35918115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358751975 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359224102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356068604 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.356022438 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358052376 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355935416 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360598229 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.360859576 seconds)
  done (took 39.231696085 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359082115 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358653918 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.359491524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.360108922 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.358554464 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359252528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.359862382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.360181487 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359029525 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.361150814 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.360159137 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.358524084 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358339702 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.359752592 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.360694122 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.365275361 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361290217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.358981335 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360005906 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361486471 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.361486611 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360523639 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.361177564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361984509 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361928357 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.359272503 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3638807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.360236172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361759201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360895824 seconds)
  done (took 42.029860782 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.382893174 seconds)
    (2/2) benchmarking "in"...
    done (took 1.388042572 seconds)
  done (took 3.991842678 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361634605 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361695436 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.360430052 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.363942091 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.360783868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.362366401 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.364269926 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364687227 seconds)
  done (took 12.117665033 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.353189676 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.361629925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.358956121 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.364030509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.360901969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.353909739 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368840339 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.366824441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357012509 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.355024546 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.365473012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.361761646 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.359553404 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356565384 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.355276044 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359450527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.365091539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.362715818 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.36370037 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.36284265 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.36319891 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361226382 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363666147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.36866818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.357349772 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.373562867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.371470562 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.367143895 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357468642 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.368972828 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.359778502 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.367552955 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.364489017 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.364483012 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.366180644 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.364424484 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375552017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363250103 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.37215319 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369124803 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365269215 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.364808052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.363648269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.362317373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365460649 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.371086854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.365259228 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.367170085 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.356074121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.365037761 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.372666245 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359333823 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.367229031 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369634714 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366054161 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377959725 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.384440159 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.364518351 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.365551234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.37776836 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.384688095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.377871725 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369833412 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.370843807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375973788 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.387934458 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379504754 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37657617 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.369198625 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368637031 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.374726912 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385072781 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.384028933 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.371481457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367075031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.366864111 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36090148 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371406658 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376004937 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.37654949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.374238861 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36634044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377004506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379821694 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.365965253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.371418879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.367798935 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.366613031 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.360305664 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.380788018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.377753833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.370262098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.359508007 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.363883843 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.363598891 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.370227806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.360451493 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365362034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.371859648 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.368876656 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368252275 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369445793 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.379215611 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.374691083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369959266 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.379371357 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.376362246 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364476935 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.381168723 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.378452875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369020809 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364469183 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.37384307 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.375457032 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369023114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.377654798 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.374943419 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.37262008 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.376261395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.374720766 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382508279 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.398082885 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.376672201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.372507845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.374812049 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.382515821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371609057 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.374940137 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.379047224 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.37356189 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.37235594 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.376013248 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.378347274 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.367419279 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376965535 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368639266 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.375675636 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.372112473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.37299387 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.374664334 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.37233813 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.37187634 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.378835325 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.38395525 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.378735034 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.37438015 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.388229467 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.372812632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.377559465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.378191179 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.377806493 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372328073 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.367909006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.375036798 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.363822103 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373165051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.368010345 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.379440361 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373906276 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.373073839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374452646 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.363042954 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371685394 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.378875135 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.379317998 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.373673915 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.375518143 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.375489439 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.374951382 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.36461564 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.375965338 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.364563119 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.37371987 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.379856754 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.374712594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.372963419 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.379158481 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380720621 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375101401 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373990156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.371632524 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.382793161 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.378753681 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.385169022 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.382804266 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375573178 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.376534404 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.369350181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.370705451 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.377125052 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.372515109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.383456584 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389403219 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389746839 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.372030619 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.379501681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.36864625 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.379898729 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.38223471 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.383534666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.376473502 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377219198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369427634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379455167 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.37424787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.381038049 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.36968472 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.380699598 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.379975764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.376014855 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377588239 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.370286123 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375416524 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.381380202 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377250487 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378968722 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.370464708 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.379916259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.36945173 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.374236976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.381715371 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.378129998 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.385585555 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385855003 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379630189 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387738762 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.37770683 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.373058264 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.379555598 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38137217 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.378633693 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390302216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.380978964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.373399438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.391907798 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.381976298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.370860638 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.385025707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.387343251 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.379218964 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.372810816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.388525454 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.380595745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.378785179 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.377705713 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373110365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383174564 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.389993657 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.388224438 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.372462937 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.385177053 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.374867083 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.384349574 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.383579993 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.384943015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.382240507 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.391100363 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387417003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.379573338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375824188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.384188171 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.38245911 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.379314017 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375060892 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.387483772 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.391228941 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.383605904 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.386986082 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.38109532 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.385056717 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.372698441 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.391875601 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.376663541 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.400620289 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.403831591 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393539919 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.3874624 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3873876 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.391848084 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.387491873 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.377611986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378615325 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381645459 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.379038983 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.378989325 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.385950197 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.377833243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.387454787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390091575 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.385356127 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.38583447 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.382664024 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.37635589 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.388709905 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.382820818 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.381758253 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.374664404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.385469199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.383557574 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.391913804 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.384648983 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.378706538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.399145171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3875548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.384996025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.381935231 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.37933497 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.379497909 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.38570212 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.389284699 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.381396335 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.392911487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.380126342 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.387847644 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.379810031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.398361831 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.395243557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.383334641 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.392673398 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.388167727 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.377008906 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.379900405 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.387944584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.396008529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.397747926 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.37793535 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.389559524 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.385092476 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.386816158 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.38704007 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.385396774 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386882718 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.387999619 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399446396 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.390588566 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.38256485 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398116269 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.395652757 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.386526387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.386220343 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.377001922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39650077 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.395725323 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.38720294 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.384873105 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.383032158 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.389351956 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.383526984 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.388176737 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.386722013 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.385916393 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.399481805 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.393375721 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389110165 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.386416317 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.397614808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.399997094 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.400230993 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.40049625 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.387198121 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.390887207 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.389414254 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.385181594 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.382841631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.385177892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.391408432 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.379452303 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.392428814 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.387949893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.3920567 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.398532453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.396011602 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.38044356 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399185399 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.410641186 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.382405263 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392237938 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.386175784 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.381298417 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.393319779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.38783214 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.381485034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.386582191 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.389915296 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397263018 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.384001136 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.392656008 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387410089 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391949493 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.390938192 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.387897791 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.389760807 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.388385632 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.38215125 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.390449023 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.397161748 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.402842498 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3912251 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393432223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.387235136 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.406349299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.402620124 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.391134795 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396638218 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.391980013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.386953257 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.392289131 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.402272663 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384277079 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.39626757 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.382943529 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.390732788 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.39028329 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.401168613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.397113348 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.395753258 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.383818431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.387064934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394529989 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.391890267 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.390307105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.395329741 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.398229063 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.385218609 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.386004603 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.398512967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.388802235 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399428866 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386908908 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.393131067 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389888896 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.396754922 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.392665017 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39235562 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.384855434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.387925518 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.408766017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.403832359 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.396271621 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.395514821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.397774675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.388607518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394849652 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.395526135 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.389511473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.390119791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.398360993 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.389673714 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.38941195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.390736769 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.399230377 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.407248366 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.400324301 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.389045912 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.411327447 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.410757891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402858142 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.388524197 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.392541747 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.390559791 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.397858276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.395654014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.388114648 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.410885002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.403859876 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399142796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405499261 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.398226059 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.38896755 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39964279 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400424523 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.398574078 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.404675134 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.399597882 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.401717076 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.397966668 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.396482821 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.390998185 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.389400775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.396798573 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.395207799 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.397920155 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406277363 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.406619655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.399228421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40323347 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398625202 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.398919443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.397622701 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.390223785 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.399791552 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.389083836 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.407481566 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.398924682 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.392016541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.402774124 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.403821324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393683931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.401989108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.404224657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.397463812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.389058063 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.399947438 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.412669656 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409617452 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.400438701 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.391939506 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.396359691 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.402633114 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397469049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.397718244 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.39551091 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.420542095 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.415558361 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3937331 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.397113977 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.411731827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.412564265 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.399557723 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.399714587 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.403615292 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.402755057 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.40747102 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.401879177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411187415 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.408955567 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.396566002 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.405135248 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.396308707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.402259603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.410578119 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.412677548 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.398440193 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.403076257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.424587792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414798977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409484684 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.436946695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.410900576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.405904131 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.406450918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393476922 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.403701756 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403730391 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.409938722 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.402599451 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.401501965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.404232898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.392087779 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.415670177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.419989651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.414491326 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.402079482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.391163918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.40063705 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.405853566 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.401170917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.40292554 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.400918231 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.400458815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.409095528 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.397067393 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.425600141 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.430466402 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.409016328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.401085851 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.40350187 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.410227027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.41187151 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.407031858 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.410259922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.405857617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.402561806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.407622855 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.415256298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.405778626 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.396868834 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.402010688 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40127512 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.410797002 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.422534807 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.428991285 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.411542557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.408492309 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407248785 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.405669953 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.400428085 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407906411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.407457051 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.401240968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.401642834 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40924422 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.407452303 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.404511146 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.403122423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.412202627 seconds)
  done (took 827.220673055 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.40410495 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.403578066 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406113725 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404837165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405042429 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.406775191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407014607 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.407784677 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.407945452 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.404627851 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.406461604 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40813975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406799635 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407064195 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406282391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.404791699 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40388062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407357947 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.404249381 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408080874 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407491763 seconds)
  done (took 30.786883445 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.407695559 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.405551153 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.407920588 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.407270505 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.405789032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.407802068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.409511573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406671756 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.409729757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406296359 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.405222829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407626486 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.407763655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.405932835 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409058372 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409357363 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.409775084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.407640315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.408816372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.408744855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41182772 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.408965134 seconds)
  done (took 32.234786072 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.407628023 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.40910782 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.402229292 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.412132647 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.408685979 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.409470157 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.407464036 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.410937453 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.409934532 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.400784904 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.402446359 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.403371477 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.411818989 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.415682399 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.413683053 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.415612837 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.412745852 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.411750056 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.409978531 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.409887389 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.420960235 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.426548655 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.412671263 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.397786828 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.410977122 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.410116049 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.407448112 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.407767636 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.401522429 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.414010678 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.407459147 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.404070518 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.418786844 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.416425091 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.402695482 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.4148237 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.41114509 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.407568239 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.409563953 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.421265791 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.433518396 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.409239402 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.421602915 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.426320694 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.410869218 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.411064144 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.420614381 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.411870183 seconds)
  done (took 69.016256259 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.410067929 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.411014487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.410485509 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.41155024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.411447434 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.411210462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.414323637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.4126193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.410486418 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.412081802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.410681763 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.413256183 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.412770506 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.413567814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.412340983 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.41154535 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.412637668 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.410397579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.413961091 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.411710246 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.413259117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.415573308 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.412976539 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.412164703 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.41140462 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.411920747 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415055853 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.413390488 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.41126815 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.412512373 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.412238525 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.413856957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.414422183 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.41257565 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413325536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.411863268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414035612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.409991242 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.412655059 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.413054202 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.414706438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.417168203 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.412701015 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.413131587 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413142411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.41348659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.411659612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.412762056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.413539389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.411128678 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.415900723 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.412868285 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.413243472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.415128628 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.414532882 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.415249314 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.415641682 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.414221529 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.413731732 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.415855536 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.417626571 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.415131701 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.415338082 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.415839821 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.416828565 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.416946457 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.416714514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.414836971 seconds)
  done (took 97.371305739 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415954012 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.41718727 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415577638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.414932374 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.419813302 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.415666475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.417333028 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.417645987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.415005008 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.418014469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.417370533 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.419068235 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.415778361 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.416083567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.417796146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.416464133 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.414192475 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.416221923 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.416190425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41754772 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.418112946 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.418183206 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.416758932 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.417709543 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.417918578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.416469021 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419429105 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.416735536 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.419579962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41684847 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418805772 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.418201155 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.417570558 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.418775111 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.417683073 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.416800837 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416481873 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.417333657 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.416529364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.419297105 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.416535161 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.418497143 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.418160438 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.41977433 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419963111 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.420547823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.41771967 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.417105275 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.420393124 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.420059423 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.419913175 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419968279 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.419826222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.418758419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.418360044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.421532026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.42042099 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.419646171 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418791244 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.421040134 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.420447042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.421374534 seconds)
  done (took 89.186139524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.419822521 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.419736616 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.420398572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.419533029 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.423617068 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.4179968 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.418953975 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.420696025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.420846394 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.420546844 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418574736 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417845314 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.424367163 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426228294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.419159727 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.428176935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.422773734 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.42266136 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.423326668 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.423818699 seconds)
  done (took 29.696562112 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.422707943 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.422719537 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.421200349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.420754483 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.422213677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.420347797 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.422208439 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419473174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.422139435 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423828058 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.423075867 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.419111676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420758324 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.422085588 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.421550185 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.422292388 seconds)
  done (took 24.016484429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.421245677 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.422685105 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.421286045 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.422466223 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.422871092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.425715448 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.423859138 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.422830306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.423185658 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.425697849 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.423485277 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.42309703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.425256172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.422699493 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.422585093 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.42431534 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.423562381 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.424936789 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.422747195 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.424927988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.425248071 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.423887283 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.42429341 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.423970744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.422299512 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.42440802 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.424544909 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.424579131 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.425706928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.424169652 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.424052738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.425014103 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.425075074 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.423598629 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.428330795 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.423568248 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.425949487 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.424123277 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.425304992 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.424050642 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.424129982 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.424371633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.423793486 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.425255474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.42422762 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.423330159 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.425256731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.424823436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.42735155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.431315253 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.426943398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.428854675 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.424961023 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.428373887 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.42698663 seconds)
  done (took 79.623960144 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.426262655 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.425144706 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.427402116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.426137011 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.426158312 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.432670453 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.426397519 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.427658782 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.425556769 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.42654684 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.426067239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.428656675 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.426877328 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.42564917 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.428541716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.425307785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.425788294 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.429166027 seconds)
  done (took 26.960074882 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.428766815 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.428321926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.425248979 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.426550681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.426877399 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.427150128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.428180916 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.426438167 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.426197983 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.427995208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.427890516 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.427607589 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.428105907 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.426515202 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.427425093 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.42580254 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.428168833 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.427493678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.427093138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.429784402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.427776884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.427604516 seconds)
  done (took 32.678056058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.416974952 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.416682457 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.415931453 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.442214195 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.434312422 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.418385117 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.417576495 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.421191829 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.449084063 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.47888045 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.470184791 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.437479445 seconds)
  done (took 18.491043659 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429907322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42875138 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.428309424 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428873882 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429488764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429627329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42868517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435117343 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427674636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430385666 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428662682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429740961 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428981437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431372034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429444904 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431009558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429543449 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430019487 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4289931 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431508365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428408319 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429283361 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432610879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428079507 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430195907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431736327 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430313101 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428402383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43236406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430931335 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429790967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431562072 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431100631 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429713233 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429596879 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432739387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430919253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431251837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431988733 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430793958 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.430987279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431891793 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431721729 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431199526 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430327977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433108149 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432221514 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431495304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433209768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433337648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431748619 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431646021 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431286059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430658745 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432546415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431835711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431374339 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43165098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432442282 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432961901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433262568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432486981 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431714745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432349603 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431912327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433080492 seconds)
  done (took 95.717343388 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433150193 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.433850561 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433711787 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434029356 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435870721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432571349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434135444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43206472 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434243559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434218835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435370099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433132803 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435605115 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433673724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432853647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433796226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43375851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434724137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43407992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434649127 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433527266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434460835 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435864296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435352359 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435451254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43566434 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440066087 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435467178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435621806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435928968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434972772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435433934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435080257 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437001312 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435836988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435415565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434283088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435652118 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436238785 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435453629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436348295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43616147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436242626 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435489946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436255267 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436573324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439108423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435980162 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437403039 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436409965 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43750766 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436499502 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436802404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438093768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438240156 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437163971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436417997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436444607 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437128004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438125826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437112568 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437651813 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434915152 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434425635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434395323 seconds)
  done (took 96.025188681 seconds)
done (took 1937.120714283 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.652619932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.615324477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.423825474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.474159878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.426861893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.403904016 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.421994864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.427075258 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.424657074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.429707716 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.427955817 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.702607993 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.464521082 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.428055132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.42575044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.583043905 seconds)
  done (took 29.013696156 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.466464345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.443312659 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.580687879 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.434447006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.46609761 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.697906208 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.507754373 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.435399153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.644420635 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.45783315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.415905891 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.463564955 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.43143098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.407076697 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.470352549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.696340854 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.801856368 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.425518846 seconds)
  done (took 31.530056651 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.03306433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.456422636 seconds)
  done (took 5.773127924 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.45876637 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.432890943 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.436894455 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.432073311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.404348626 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.40226973 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.434104854 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.409870696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.412987922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.596300759 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.438008213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.454847715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.454576382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.436357724 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.443810208 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.492862046 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.64647767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.442907998 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.44236596 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.449021555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.432323832 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.599850651 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.491783139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.445865497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.588881659 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.419084578 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.442046715 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.451395111 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.628577769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.44677504 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434347203 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.436411991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.436838232 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.406952798 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.072995177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.405985217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.490117493 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.451838115 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.445105834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.650012757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.436040784 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.451818699 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.407545401 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.077243831 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.61028026 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.60182227 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.430527443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.443261745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.43996747 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.515700775 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.436604892 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.438681204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.544775212 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375125566 seconds)
  done (took 91.80296091 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453821746 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.40841255 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67299019 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436124174 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408112792 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.41075356 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.410320405 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821718041 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.444537605 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407398106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.849412275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.179563197 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.418241663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.480790818 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.432816561 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.439276531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.410396602 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407434423 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.409619338 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.410717382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.097718851 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409111033 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.429360744 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.564435184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.48357099 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103003043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409911624 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409977484 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.429204929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.410311046 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.155905231 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42299541 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.453583448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.40956577 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.813794268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.953309775 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907910356 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.410933751 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439680074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410407916 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.413937834 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105343913 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927072989 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.411812144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.422730712 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106377913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.410350925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.408857858 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.411347979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.77008026 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.410295542 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.409825579 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.410457154 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.41116758 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.411351891 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445928843 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.440373389 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106771049 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412067135 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.41146636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.464796117 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411478862 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.420511994 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416193917 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.415644336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928709021 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.685757526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423398325 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927566628 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.152303446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.416885904 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.222946647 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.417592489 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.419808692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.498171381 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.412269186 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.416420552 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099428006 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.450015117 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.413768888 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912773405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416200691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.850722009 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.436304156 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.412158837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.125836533 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.420474349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.471669826 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.413359548 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.414154482 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.43326138 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420995505 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.822065502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.453497822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.414199041 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.414200088 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.451623353 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414330621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.413049034 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.419757219 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.21235354 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.416053605 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.414584215 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415739041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415837377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.4156956 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.415038533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.415353517 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.783141348 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.414431542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.421598794 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414906253 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.414587568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.424403131 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.578147892 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.420034001 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.86320076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.417908521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415771307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.443997731 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414874615 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.447455573 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416089085 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.437932505 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.416510787 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.826304449 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.436295844 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.438245325 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415138824 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.42453974 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419061321 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414861904 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.46018359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421708026 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.353052857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435087032 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.432607387 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418075162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.429678592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416828634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.41875786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.41939167 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812626521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.82016498 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.682139817 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419673409 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.419133047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.34719464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.435100931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.686259614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.442071719 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.418221269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.807107943 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.694134079 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.417206196 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.418377994 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.420222432 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.813475583 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.41939202 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840034477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.165577341 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.417943162 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.424255137 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.349882412 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.285057898 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.422675957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.420040286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.844682693 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.443061649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.418337626 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.419473104 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.419150299 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.418041778 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.420401575 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.429703875 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.419586178 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.419401517 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.536704843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.702848735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.441636119 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419745137 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109591729 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443313357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422190071 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.434811788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.423916058 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.419401518 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451163727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.424451671 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.431279635 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.423238877 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.433880315 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.146428048 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.435725241 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.424062935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.705603624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.313139681 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.427102497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.420080654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.421653829 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.45920623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.142282199 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.474627395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.871355149 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.427835621 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.4975602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.422373474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430537152 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.143676022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42581204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.422353499 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.312545751 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.432802454 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.117162315 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.422369143 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423498198 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.238467545 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.424475207 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.428136497 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.426993405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423750464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.813007017 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.424118249 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.437003896 seconds)
  done (took 523.692362568 seconds)
done (took 683.097254354 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420617315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.422760255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.42907691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.428145856 seconds)
  done (took 10.999958096 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.461204808 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.450379479 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.461774643 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.449621841 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.460745183 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.450121345 seconds)
  done (took 10.036579023 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.421980966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.423135163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.4276863 seconds)
  done (took 8.57651186 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.750150491 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.448932577 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943107919 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.433570219 seconds)
  done (took 9.880241545 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.46292479 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.462821005 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.462693615 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.462226237 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.464600561 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.463867926 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.465329146 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.463992314 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.46473333 seconds)
  done (took 14.474148005 seconds)
done (took 55.273381414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.413817777 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.987187477 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.843515855 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.569692557 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.404336264 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.490805709 seconds)
    (7/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.73520243 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.492958008 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.845841291 seconds)
    (10/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.582111175 seconds)
    (11/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.500038587 seconds)
    (12/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.401925273 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.420340673 seconds)
    (14/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.440068531 seconds)
    (15/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.793597356 seconds)
    (16/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.689383476 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.401930161 seconds)
    (18/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.859858086 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.428713944 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.627608999 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.041211525 seconds)
    (22/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.495702142 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.560360574 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.610268666 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.598889146 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.671850589 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.677018704 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.663765483 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.779192173 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.682473239 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58753477 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.72394185 seconds)
    (33/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.494581189 seconds)
    (34/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.485604699 seconds)
    (35/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.525636605 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.562196282 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.51358619 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.584993664 seconds)
    (39/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.90226327 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.517815709 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.405406791 seconds)
    (42/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.40965335 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.635895319 seconds)
    (44/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.632594969 seconds)
    (45/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.22477586 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.768321656 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.653734249 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.616560388 seconds)
    (49/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.504352474 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.681139829 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.916949425 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.629841826 seconds)
    (53/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.511938215 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.696960067 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.499863216 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.938287403 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.415896393 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.63890024 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.732696805 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.632846468 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.670823224 seconds)
    (62/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.213862811 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.599718372 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.849987419 seconds)
    (65/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.599346398 seconds)
    (66/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.493962745 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.418397619 seconds)
    (68/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.412694729 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.421457016 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.826933788 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.451498127 seconds)
    (72/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.507929814 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.675367447 seconds)
    (74/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.411890926 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.611131206 seconds)
    (76/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.740555067 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.726918975 seconds)
    (78/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.741571607 seconds)
    (79/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.40926189 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568052753 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.692739 seconds)
    (82/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.948706117 seconds)
    (83/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.557879322 seconds)
    (84/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.494405189 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.406247889 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594884238 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.683758528 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.632751274 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.598279083 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.408332513 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.705809935 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.94493839 seconds)
    (93/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.625013837 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.414886419 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.423734122 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.430349488 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.615405214 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.646089353 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.500296791 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.409254207 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.043997774 seconds)
    (102/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.70246356 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.745488166 seconds)
    (104/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.412962989 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.6276266 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.40845669 seconds)
    (107/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.608762819 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.982972486 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.440231541 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.736260386 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.682217201 seconds)
    (112/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.809282172 seconds)
    (113/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.500280866 seconds)
    (114/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.123529326 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.748824833 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.505054378 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.933970723 seconds)
    (118/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.651751874 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.926486461 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.411477535 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.687169018 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.411159758 seconds)
    (123/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.621653704 seconds)
    (124/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.767711802 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.686516282 seconds)
    (126/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.589504434 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.788300803 seconds)
    (128/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.956325103 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.575216164 seconds)
    (130/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.500650187 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.038430864 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.501497781 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.679560229 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.626204841 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.604991039 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.664753597 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.501570836 seconds)
    (138/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.469577521 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.823425801 seconds)
    (140/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.411146627 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.643451727 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.660176409 seconds)
    (143/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.685666802 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.592418841 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.576171662 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.029597898 seconds)
    (147/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.621476166 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.473500925 seconds)
    (149/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.590094593 seconds)
    (150/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.60053328 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.706800914 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.436089953 seconds)
    (153/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.413364298 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.814689633 seconds)
    (155/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.417941206 seconds)
    (156/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.412620348 seconds)
    (157/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414123402 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.441185642 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.47638565 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.570629337 seconds)
    (161/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.457460408 seconds)
    (162/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.843763163 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.684821653 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.509206094 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.626316727 seconds)
    (166/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.807078889 seconds)
    (167/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.668962653 seconds)
    (168/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.648267772 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.627940606 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.616658096 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.601415306 seconds)
    (172/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.646273244 seconds)
    (173/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.414878875 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.948668193 seconds)
    (175/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.515322654 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.414307085 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.623496396 seconds)
    (178/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.991659903 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.728124086 seconds)
    (180/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.573659891 seconds)
    (181/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.444226253 seconds)
    (182/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.42933644 seconds)
    (183/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.418741727 seconds)
    (184/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.002218089 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.792700454 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.627313152 seconds)
    (187/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.815827348 seconds)
    (188/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.456356077 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.417178889 seconds)
    (190/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.862377751 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.603249478 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.441021236 seconds)
  done (took 361.902952892 seconds)
done (took 363.211575169 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510951148 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.618858376 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.469391813 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.468980588 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.477554374 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451340006 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.505588245 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.470039591 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.493848973 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.494107386 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.44755405 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.483569384 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.493987678 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.481925529 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.512298596 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.471691337 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.469160918 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.4840552 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.494329482 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.497133329 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473453224 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.481560609 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.508530101 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.470985242 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.488178909 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.487693651 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.484357054 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440069509 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.47905673 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.496547082 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.449343174 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.486279296 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.496049812 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.482367346 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481514653 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.482451295 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480615237 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.622915316 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.501983178 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.483400438 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.481639599 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.498986708 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.485577112 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.487615359 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.482881028 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.508509776 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.490195087 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.498559349 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.451682927 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.448732272 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.505776188 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.493165786 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.482370838 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.449762781 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.452162737 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.49518846 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.484430876 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.500942403 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.482419028 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.483319142 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.515762794 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.500712486 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.494856084 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488513588 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.48143266 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.4974018 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.483323473 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.499673108 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.482631765 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.48470682 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483457428 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.48469809 seconds)
done (took 116.468559657 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.653407881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.445661002 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.6918414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.483218921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.702564202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.657367603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.481899339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.482340597 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.483538375 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.341338309 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.481977561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.483353505 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.446337066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.482486844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.654246884 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.483717797 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.481460736 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.238328212 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.484686914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.663438277 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.449697898 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.484124832 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.48645795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.342320556 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.446594571 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.453998236 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.663693686 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.484005962 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.241052161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.454197422 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.446028786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.240834536 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.663443934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.502792499 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.496071952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.493341786 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.707262285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.489028598 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.654799887 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.65222903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.694972664 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.522286878 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.4538508 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.447975542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.486734801 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.486186546 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.484194604 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.514050285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.448433422 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.485613848 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.242489356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.495613653 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.495937716 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.492243322 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.486891036 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.506627554 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.486635906 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.487535322 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.66844869 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.486937829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.658406701 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.346859541 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.3460725 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.488139867 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.450471321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.48744369 seconds)
  done (took 119.149096617 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.60082815 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.611359447 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.660909185 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.482784996 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.572184005 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.660915261 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.484258997 seconds)
  done (took 12.395859907 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.491379107 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.48806814 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.568374162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.570125084 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.488857836 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.711411835 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487025969 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.496897336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.489298325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.57287662 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.490082573 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.490304738 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.496580815 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.452507753 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.568369833 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.498292625 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.654765246 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.480929523 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.488153068 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.694224105 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.48805927 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.497711267 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.574584729 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.498921476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489205576 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.492356466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.307802829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488615976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.490000579 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.490030261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.490342522 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.596452524 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.487958001 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.453993766 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.490169315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.652095354 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.489702776 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.48986348 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.492083316 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.459882084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.490645843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.489687481 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.491115735 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.490880649 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.490302154 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.514075079 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.490456712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.49170303 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.489567005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.493309799 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.572011496 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.491206319 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.490733493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.494589919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.578325009 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.502885877 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491476675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.491438192 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.490407265 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.490745437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.697795578 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.573658564 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.491682148 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.574080545 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49206362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.492109017 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.492000624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.492245138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.630846353 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.491229715 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.573854887 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.491970941 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.725358092 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.517688737 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493701679 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.487885016 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.489391843 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492442859 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.455819766 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.496355647 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.493359526 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.485084172 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.496015171 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.492543361 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.494232333 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.701736652 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.653759323 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.493808047 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.507066017 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.497787533 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.491882941 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.576757561 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.492157278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.494715424 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.576030234 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.660354016 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.576903879 seconds)
  done (took 153.788847803 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.50353547 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.503664328 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.498389914 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.521282979 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.485040451 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.489047525 seconds)
  done (took 10.33278785 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.490400421 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.498858199 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.496953558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.49429938 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.495521044 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.494404561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.494099494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.485577461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.498036587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.495094034 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.494747132 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.495925983 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.495700117 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.498991737 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.495519786 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.495593399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.49429058 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.495078389 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.496099609 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494876339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46163517 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.494867189 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.494574345 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.489171214 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.500297908 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.495095291 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.516392343 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.495797615 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.495717019 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.503561801 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.498955698 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.496115672 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.489510503 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.493932993 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.497862053 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.486717969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.500856429 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.495425501 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.498746803 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.49649966 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.496382815 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.495901888 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.500738537 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.49721686 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.489421874 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.493576941 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.503172156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.519309404 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.497765393 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.499837444 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.499400448 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.496541495 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.497701767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.499075127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.489624973 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.493409602 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.503641909 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.496859342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.498992365 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.491371564 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.50235641 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.49928025 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.49110463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.502924778 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.498125076 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.501186499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.490155626 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.503482251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.498703012 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.497940765 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.497897743 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.498026669 seconds)
  done (took 110.077470748 seconds)
done (took 407.068486373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.079926085 seconds)
  done (took 4.415236323 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.587095258 seconds)
  done (took 3.923918817 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.940839544 seconds)
  done (took 26.280855967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.52415157 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.503401864 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474108335 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.464860441 seconds)
  done (took 11.301716021 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.045716707 seconds)
  done (took 4.382049561 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.472840017 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.479686209 seconds)
  done (took 6.288491015 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.786443443 seconds)
  done (took 4.120406094 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.303927755 seconds)
  done (took 4.644377682 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.481725155 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.477565338 seconds)
  done (took 6.303163762 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.440290417 seconds)
  done (took 3.774606604 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.356709118 seconds)
  done (took 23.694022614 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.490295938 seconds)
  done (took 3.830707523 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.561920968 seconds)
  done (took 3.897665338 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.678118356 seconds)
  done (took 7.014837432 seconds)
done (took 115.214095245 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.4623611 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.465762651 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.463229577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.466547457 seconds)
  done (took 11.193946591 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.622551024 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.621711882 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.623813964 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.610413238 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.611345689 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.623886949 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.535151362 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.558617754 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.59824486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.596028797 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.630864092 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.610604813 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.623409792 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.537830963 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.596503787 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.626624098 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.597101698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.624002815 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.555637487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.611561848 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.504144696 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.612915022 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.59582912 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.503630315 seconds)
  done (took 39.569079701 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.079750714 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.620834185 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.710143099 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.587418484 seconds)
  done (took 8.337224168 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.666467712 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.672538526 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.688163627 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.71712122 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.775117422 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.678635251 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.535260106 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.534281559 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.519458864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.674166247 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.756799939 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.666732481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.89133255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.506004569 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.888959483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.503330696 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.50434535 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.671665301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.722267266 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.751060174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.505007306 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.670003986 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.676892152 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.664518512 seconds)
  done (took 41.178633262 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.520249816 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.529092072 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.505928722 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.528668904 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.506604925 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.505384867 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.50787855 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.519847531 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.505707395 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.507615389 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.506271293 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.526233957 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.506337782 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.506726169 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.519786489 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.509483503 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.510115358 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.52230762 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.524569291 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.50917697 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.507225744 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.522274515 seconds)
  done (took 34.649207558 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.469330702 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.466982638 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.909192991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.814619094 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.468829311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.473885052 seconds)
  done (took 14.941247697 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.59844782 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.793393001 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.497628295 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.951427482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.073968275 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.498750505 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.498771806 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.843607417 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.216322551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.206186974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.588161246 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.593737584 seconds)
  done (took 22.704850317 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638927129 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480267497 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480073059 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534698791 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481135205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482263213 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528780022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361952313 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.515080934 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83364798 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493689037 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649411982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812890452 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501141871 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487108172 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.449289187 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802531384 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139121672 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483652007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482318108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546250609 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481945504 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499949959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050985114 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490279734 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482737644 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.970313683 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483187423 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156025637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111886156 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874983893 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491948243 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841380458 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317728951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664487991 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773149086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487466947 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485116998 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.453635201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.493919583 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493393469 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489721703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864508609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491246129 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484298807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499762156 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362972484 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.514254502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.482855956 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48544162 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877324693 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650971747 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.510134494 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482235555 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476668297 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482989212 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.513671327 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695052352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206633748 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483702712 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50573142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.489533131 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492395926 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485235168 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322254039 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.51554014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.5127152 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514447054 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484573632 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495916764 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545848253 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48505826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.534175889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485672515 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487752388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.511780024 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492315398 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201597633 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503040925 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.490254243 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799194227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485756953 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483189796 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.484157168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486384477 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.436775375 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516207473 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.45237275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552467531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379249135 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062046647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539835967 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544240856 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789420987 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.45111428 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487991245 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.50394062 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494138536 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538142944 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357985537 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486343201 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.514926514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824252162 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.782148624 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494224579 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.465582599 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143037044 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506428226 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.546152133 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498026111 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053443039 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.333925145 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130030152 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494392338 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55923564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488633994 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493283329 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504723192 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.522524896 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505787992 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901885708 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.457395176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511174291 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639228774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494112485 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488513518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500571756 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489797969 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487211048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.818747901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503596302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126750127 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.496331133 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491342649 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.500981654 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509954583 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.495386459 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793650855 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50497015 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851041253 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48595195 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487488737 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489635379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.793557686 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489867811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.519122439 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923857077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50089526 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503390271 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88408959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5603318 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686180624 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553523811 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.49838726 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.831279383 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.518446026 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.518598908 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504748753 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491810376 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500802302 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.521209297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491443849 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313067953 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495656396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500649768 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49272851 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.537434544 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649616896 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525506002 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059012742 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.499268726 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485040102 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.520081988 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.504729337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796000874 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87327362 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.516927746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741125111 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.112297521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313099941 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537054747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.491814986 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.491980231 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.491672719 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492689469 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492232427 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491503843 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782602941 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136670103 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496141793 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317739149 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497482885 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511704107 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.522573995 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13001786 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.529507908 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494829336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.501762829 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517083911 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504807839 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13215242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801126317 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.539229605 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493619545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.141071571 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523332541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496424092 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494027768 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54880652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513325263 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499341432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927597567 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510341155 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127178673 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520414782 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.542154627 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.494919292 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494795672 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501613019 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.502701565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525516129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.787087101 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502777064 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499168505 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217077046 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49625284 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258351289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496574809 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.524282662 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501412645 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417390089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499834162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497305838 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872585404 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360894915 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49656552 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128844387 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500808867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.498746524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888006149 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817163482 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51469534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.504726474 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89728645 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804960952 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555264675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503915687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505181002 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.464917501 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188429478 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511501777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756656555 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360561005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498398853 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504096575 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.522816274 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505280176 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067910382 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503619281 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498307012 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498393196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526101958 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50671248 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50722784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496655964 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337209083 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503176975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.157501314 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503269794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068221874 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139855215 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.906922103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.503854227 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.50134008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.833631916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890136867 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505618767 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499307978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267924923 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.462275126 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.530253114 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502567331 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.509029047 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520005512 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169060046 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.512655904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.517938629 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509281592 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501611553 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501657718 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.501580334 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511387446 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49907827 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159340653 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.509589523 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498015495 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513868838 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507270792 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.841955671 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.545143136 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326155163 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817055787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515079467 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565170194 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.528935698 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500123724 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.475537707 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500852309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502332874 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593955418 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806639518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.500190143 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.478462659 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.594620587 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798616011 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501653458 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501113095 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120975789 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.507679084 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.508881681 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503086112 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569975833 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50130481 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509233611 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511442062 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57019248 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655879075 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795488588 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.901781016 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161567124 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076313126 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520362889 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509322171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.546868006 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66296594 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507809758 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.525034294 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.505395833 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327408883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506855376 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342273135 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903822197 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512580825 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505657319 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502061541 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829949046 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502666435 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862141548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504446341 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.495674904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555990745 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505211033 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513761073 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808138871 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855995654 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505521478 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521824039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511858876 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.50580615 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909320801 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.812089442 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172355158 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224843257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507921154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51335313 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390648001 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860140246 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507162189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508581923 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505325503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.521801271 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511791758 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.540064837 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507079008 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824726664 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13748571 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359880261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147239045 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.536961369 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.467636981 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513886787 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.846363633 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427482782 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068865601 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341871547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460586294 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848632986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659131514 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080520225 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.514850806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830779459 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.513962774 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506857471 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508680748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509019059 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.510276411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150916328 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355724774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852892187 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.536738995 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.514772305 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56735036 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.80192132 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.820783983 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466837508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81694858 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912211881 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525629411 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509379859 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340716023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907994725 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517441847 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.536854792 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094997765 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517036489 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574629427 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.469712315 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.5101141 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229795843 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.809363398 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55924472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517416985 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475081573 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340335947 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.530184879 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173597076 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512903491 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510647967 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877204985 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.537811757 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518063017 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887466626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.539381021 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517945264 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813289805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.341694499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.524426256 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.530829375 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530821064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.512374024 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511673307 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548112787 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512390786 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51709795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.082809204 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516823543 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512452596 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554129614 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.523225824 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525813932 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.518128178 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510508215 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.542061808 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.483118838 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.501430455 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536146252 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727984124 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25491433 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522368382 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.346464449 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.935807968 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850838155 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526576249 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.486590369 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.540764856 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516529023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514434831 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51474786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505167103 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232534109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.525712593 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.909965926 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547854514 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.812828783 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81295743 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516381517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085444315 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536854512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573490456 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.480884475 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514821683 seconds)
  done (took 1072.028294547 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537147357 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.537786963 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.552408446 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.60661024 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.551820731 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.523255297 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.521002427 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.520448026 seconds)
  done (took 21.722296949 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.517661359 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.53749356 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.516440882 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.537595668 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.507305782 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.152791287 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.51836061 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.539102983 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.565667254 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.514139123 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.516786946 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.321422298 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.542499713 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.509246252 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.506673788 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.537213845 seconds)
  done (took 35.218889568 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.813740211 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.770907949 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.260795175 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.523343856 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.575325256 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.524080262 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.933560266 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.543081072 seconds)
  done (took 29.317869403 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.550292603 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.552101981 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.550530343 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.552472979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.551508541 seconds)
  done (took 9.129179975 seconds)
done (took 1341.336413555 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.545284704 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.544730583 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.545659193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.545360063 seconds)
  done (took 7.55321141 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.484043257 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.485095346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.483167587 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.522748598 seconds)
  done (took 10.348217954 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.452131238 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.250703599 seconds)
  done (took 6.077394689 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.515781301 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.363877906 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.343201954 seconds)
  done (took 8.600517496 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.899232857 seconds)
  done (took 3.27258634 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.047163749 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.142379 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.508413185 seconds)
  done (took 8.071912148 seconds)
done (took 45.302222652 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.507945529 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.28441878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.668533617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.522425653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.67641772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.666275928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.801055498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522190147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509560329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52239604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.524108687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.676585619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.780895811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.285148552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.790927464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.279292779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674845314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.525295081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509556628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.517255022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.804488126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.525435952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514148133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.512209688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.675902431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.655302815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.52135317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.279811909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.512247682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.518899645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668064354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.523051151 seconds)
  done (took 87.331945986 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.525906821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.510430621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.510296876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509167961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511508132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.510695809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.514581847 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.509839275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.529415996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.527795888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509663484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51109551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512536545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512052616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.511952882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.510112913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510672621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.52044209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.511679592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.530157431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.515598387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.524907392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.511475237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.513141021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.519986166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.511646558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510217955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.511662761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.511170241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512493663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.513114342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.512446589 seconds)
  done (took 81.846478384 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.510384596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512543949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.513496793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.512107371 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.510042723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514840679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.5171504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514789067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.52246623 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.526802884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512162057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.532882499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.514589809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.522412732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.513500076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.522727645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511985358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.51362614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.51315513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521579455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.512247822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.515736952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522072255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.513823092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.51445292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515572826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513672933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512841472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.543458774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512947701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51649061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.534226734 seconds)
  done (took 81.940495089 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.84338616 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.550647746 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.555521551 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.524066713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.555658929 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.552619995 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.524196058 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.850298561 seconds)
  done (took 16.334342587 seconds)
done (took 268.833960875 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.523710942 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.561410567 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.579692292 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.543527986 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.569076697 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.581097219 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.838132349 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.581367226 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.829243719 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.53375754 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.571893046 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.539328849 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.527718155 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.752677488 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.533364403 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.543729199 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.535320099 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.522431448 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.534073991 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.872280686 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.592241933 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.524490649 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.546830082 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.526936701 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.500566168 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.635221979 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.639324666 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.776144438 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.737501885 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.630643114 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.518022718 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.551171696 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.547080393 seconds)
  done (took 72.183138234 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.545161085 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.555097195 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.555694757 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.557443234 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.556253836 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.555126738 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.546322126 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.556462033 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.556856776 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.558978484 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.557833996 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.555587202 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.556203481 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.556402319 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.55676284 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.525298713 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.548230959 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.558852491 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.54658005 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.53021512 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.558581088 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.558548122 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.558492249 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.557453919 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.558133335 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.558037374 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.559021996 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.558786631 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.557353347 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.559681857 seconds)
  done (took 48.005310872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.558306192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.523559595 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.520920643 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.564833838 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.549149581 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.553447754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.951633864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.561550878 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.553842496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.5528335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.539744335 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.559023323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.619985754 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.523066656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.555420141 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.55928879 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.559852618 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.550062966 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.534964398 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.573854748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.967870495 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.561844701 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.955414582 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.575018025 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.557185519 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.554975183 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.564026054 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.522412313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.554199805 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.536559153 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.531453336 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.947711088 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.523939881 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.521281931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.556816617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.567857477 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.560927406 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.524004554 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.557322129 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.554016681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.950005375 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.553456902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.52476757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.52391837 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.55333063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.562519717 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.522777164 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.544920412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.889423718 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.565966874 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.524303475 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.556601227 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.564880213 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.555405474 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.868656272 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.556680916 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.553913386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.541025992 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.566343877 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946925514 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.566215718 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.554246109 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.531381679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.555678484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.52871905 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.55906816 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.575970659 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.557183494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.531091558 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.561950371 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.525072217 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.557247049 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.564873019 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.543502844 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.528141742 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.524421577 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.582567587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.540469707 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.543073389 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.944409691 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.563197247 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.526190935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.991312862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.561541729 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.567715559 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.566252245 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.566399889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.683570306 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.94627166 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.526453469 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.526574644 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.541711764 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956046297 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.573170513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.556629163 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.545702914 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.565636315 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.565600486 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.527329558 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.529584803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.557960757 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.578291694 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.529339171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.558518859 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.953269617 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.57079961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.527599703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.558693183 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.684803564 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.567466087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.576680456 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.562829323 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.9722251 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.562105279 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.568279808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.526425602 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.531171387 seconds)
  done (took 226.62777851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.529817584 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.531235362 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.531019063 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.529918155 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.532372937 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.559557259 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.530779368 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.53053234 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.556668904 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.531479318 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.534849509 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.562257253 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.562904892 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.530282867 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.552506292 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.532246454 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.529441628 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.553676344 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.531100847 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.531497895 seconds)
  done (took 48.176117509 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.569640665 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.314547681 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.282588868 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.570315332 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.56914549 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.56120258 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.637520665 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.569750315 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.5702325 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979818034 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.798263731 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.574814437 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.568572162 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.569804652 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.28253104 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.542319941 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.978201697 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.31654158 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.56989335 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.314247224 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.540442608 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.568908658 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.558666434 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.315113605 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.98843128 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.955765743 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.640366209 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.316425225 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.570536449 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.570934195 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.317902158 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.570784036 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.564187876 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.326432992 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.571139039 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.592666847 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.572230659 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.639915313 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.643672006 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98381107 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.326689798 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.981052339 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.594993888 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.796041521 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.579813537 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.545062749 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.374127953 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.579356705 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.540175186 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.57558304 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.58505701 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.328760243 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.571739745 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.326032592 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.580637384 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.571954855 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.369502155 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.333216675 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.322407409 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.800630164 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.562821921 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.959013852 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.571194633 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.330723412 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.572546831 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.574838532 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.574006722 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.797121128 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.374638702 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.981694949 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.020719115 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.017304854 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.57984266 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.65259423 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.574926812 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.012489158 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.661245051 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.054619446 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.014976136 seconds)
  done (took 145.916771822 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.950335305 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.716875379 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.148115832 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.369891311 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.286342977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.778716833 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.717839468 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.901082673 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.554790871 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.734646424 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.52102282 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.699925458 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.511296444 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.672163129 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.7095264 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.773819562 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.166175322 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.545311873 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.436529952 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.471716969 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.570718106 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.735530964 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.476041961 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.06591795 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.546650311 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.484624198 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.546107784 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.30282992 seconds)
  done (took 61.794869866 seconds)
done (took 604.089366966 seconds)
SAVING RESULT...
DONE!
