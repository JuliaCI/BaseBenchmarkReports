cset: moving following pidspec: 5045
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.474623135 seconds)
loading group "string"... done (took 0.478833168 seconds)
loading group "linalg"... done (took 9.308200157 seconds)
loading group "parallel"... done (took 0.165029785 seconds)
loading group "find"... done (took 3.146545591 seconds)
loading group "tuple"... done (took 2.098862642 seconds)
loading group "dates"... done (took 1.395767227 seconds)
loading group "micro"... done (took 0.196117607 seconds)
loading group "io"... done (took 0.50875911 seconds)
loading group "scalar"... done (took 57.079782493 seconds)
loading group "sparse"... done (took 13.972971913 seconds)
loading group "broadcast"... done (took 1.318991263 seconds)
loading group "union"... done (took 10.488528675 seconds)
loading group "simd"... done (took 3.61802042 seconds)
loading group "random"... done (took 13.459793875 seconds)
loading group "problem"... done (took 2.312926595 seconds)
loading group "array"... done (took 24.559497965 seconds)
loading group "misc"... done (took 1.139370587 seconds)
loading group "sort"... done (took 3.816700364 seconds)
loading group "collection"... done (took 22.165616453 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.705519256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118304429 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201131024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.198057868 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272229031 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16558635 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155230564 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.126973549 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.674114774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206346492 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137245456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.363070472 seconds)
done (took 6.085327541 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.288345606 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060897758 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192614787 seconds)
  done (took 0.945147075 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075694333 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157760495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107518701 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093768977 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094268901 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107611799 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092867326 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107486643 seconds)
  done (took 1.456022655 seconds)
done (took 3.462247819 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501485559 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.898476615 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520260362 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.190780685 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.364397595 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306290066 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265246439 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.228123073 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092066316 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086056543 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.198211867 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420647835 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.397887049 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956567591 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069038109 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094062311 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.159888699 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.787173424 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079424904 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109533272 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514781453 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222101079 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114910003 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105485341 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183994277 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125407079 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139723145 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101280896 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673550317 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138146548 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210362156 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08281968 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137650954 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.161179156 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215963496 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109891139 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676778869 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199235112 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096359949 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099023207 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683840802 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118913865 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208064726 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104664496 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068308477 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161465226 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112530581 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077402371 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091872856 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099422629 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161812756 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.467488568 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105649608 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195853677 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092870608 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702477109 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098882477 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275588397 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12691607 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093677694 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089194513 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086776398 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154269199 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094068527 seconds)
  done (took 20.236197844 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.19040452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.207993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094718749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143844619 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140788644 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083121744 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089059999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095168946 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.114005419 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19583908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125577002 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215867953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075410288 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10679284 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165735112 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25271831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109408466 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121333097 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089528913 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09477518 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14291978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095727606 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094100514 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110699552 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169778782 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202741983 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113616333 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12442085 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089878958 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097634762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14171879 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150241801 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09304151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088518169 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172429818 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122582907 seconds)
  done (took 5.437767471 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.197692668 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23306595 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122263452 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246989928 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189605955 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126599619 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179543013 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176647184 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319598184 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.242110327 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162501531 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128202546 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095891943 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078678232 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083357178 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095492241 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.808883308 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169429576 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137964402 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18679631 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11161552 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080340594 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380981548 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084215807 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098092502 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092235402 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079646092 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.215551153 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222407751 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092564146 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.587981125 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.082290352 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082427172 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112398231 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112574022 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134354027 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119954011 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108604663 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084116632 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207062854 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098325213 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093610717 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077423253 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114537191 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127903067 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103129036 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103648865 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.131691746 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085505496 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107030579 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.051077515 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.191947454 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161386864 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100865271 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27660326 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109288409 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095896622 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107092738 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.786998193 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132100597 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082272473 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093116869 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093467612 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077456986 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351132012 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118677591 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.190191713 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081588657 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155902856 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093905517 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114696848 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084458296 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083431839 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121196138 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084622074 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077415221 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101866585 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079347101 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086129738 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128616984 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083481146 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094172171 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144802562 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096407371 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119353725 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107418757 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103171919 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084379864 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126683707 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07984039 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086698595 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203436205 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08146888 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113912461 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111749267 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112389991 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142520568 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085690575 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.263656364 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095112305 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121122525 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097889962 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11175653 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11032206 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08007785 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085304702 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098343302 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078450968 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079349336 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146345356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100282795 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080563248 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086416297 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098616661 seconds)
  done (took 26.974876904 seconds)
done (took 53.343352183 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.426026522 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080837864 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101403816 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082011477 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081368448 seconds)
  done (took 1.540341966 seconds)
done (took 2.283504697 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297823837 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19729569 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086709839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186447871 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085957229 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192693288 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162861981 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118421763 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205898949 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085479794 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188285396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085441661 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086787712 seconds)
  done (took 2.748565093 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102866363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098168908 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100978413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118809103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08552156 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1011651 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118680036 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107138834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100410115 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112853946 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085668017 seconds)
  done (took 1.879336542 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098079791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097005702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092287714 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115651159 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085343813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097331231 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114353299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108373139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098087543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111610352 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08534549 seconds)
  done (took 1.850169984 seconds)
done (took 7.220137352 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.213956049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.888996639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.180467641 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.246129274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328378909 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294985766 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609917294 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.203369367 seconds)
  done (took 15.840525321 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.223549448 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094944545 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089351586 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095627594 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109741469 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095829504 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096872584 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114430962 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089912062 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090633942 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108180726 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090983008 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093675948 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091091751 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107263152 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094527523 seconds)
  done (took 2.500177502 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134237182 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114706136 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116018245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097511283 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095399283 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115669318 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100855144 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097586921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112553 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094828399 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103218922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113828442 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097127365 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09334958 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114608638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116972138 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093082298 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112760289 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115811375 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099778471 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115289661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095310444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096125352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115469572 seconds)
  done (took 3.396416332 seconds)
done (took 22.485273372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.141780949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08396382 seconds)
  done (took 0.97924757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165929411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183609732 seconds)
  done (took 1.110681533 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110728187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090097141 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137379691 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103878084 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091210342 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10701759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115649623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090775929 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107095463 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090870634 seconds)
  done (took 1.807905461 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093103599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093735593 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121213878 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.15821984 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116453356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091898907 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09420325 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110367317 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096409816 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089184176 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112303596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10771251 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09432631 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124663897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095148342 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095856673 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116226023 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092715352 seconds)
  done (took 2.668370887 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091936273 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091191414 seconds)
  done (took 0.947605279 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092187142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089542881 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092310202 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107776554 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090133878 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089215884 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106918555 seconds)
  done (took 1.43330133 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517536692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.23631378 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369296543 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073246954 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121492405 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301537856 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.122176221 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072617195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091785275 seconds)
  done (took 2.703807098 seconds)
done (took 12.410108926 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091389345 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207937057 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601323604 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.127917523 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089419263 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.145532124 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345756119 seconds)
done (took 2.379872748 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335972054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.177391553 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085954646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090210703 seconds)
  done (took 1.456851252 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080824315 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098116667 seconds)
  done (took 0.955367648 seconds)
done (took 3.190032475 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089452157 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087876328 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087846436 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106329513 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088693961 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087699211 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087439471 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105806332 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111442524 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088019084 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.107089246 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091264259 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088270722 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10719317 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088611269 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088715681 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087084258 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107594129 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087338131 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087931713 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104745373 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089437281 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086481109 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088043947 seconds)
  done (took 3.05726196 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110411666 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090796323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109676447 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093260673 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092485154 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.229201493 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093115193 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090683459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110257875 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091648177 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091851485 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09320026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107297583 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093386177 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089803319 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110838536 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092505269 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090127522 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107772923 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093340221 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094074742 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107089246 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093121269 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092466857 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109498212 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093351745 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090478964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106916808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092832475 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092485085 seconds)
  done (took 3.829717872 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096186883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0845046 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088231401 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113768867 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086467979 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089075503 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103375576 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089558875 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090463808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08799904 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10889611 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089591142 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089987282 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106782364 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092210957 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090846818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096783955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107610961 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087995548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089599103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108857837 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088387078 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088405586 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088910399 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106309399 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086292538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089138011 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105381767 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089159313 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088545198 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090586868 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108354282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091009898 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099332115 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109223317 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089216723 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09399184 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103802725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09030436 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086498151 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087185668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106691361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088872404 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093881072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10647136 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090309738 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088850824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089968564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10678411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091764952 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086815579 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105893005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090966386 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09078871 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091517714 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102980414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090631079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085951712 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106385875 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09041017 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086280175 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085946055 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111380644 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089923376 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103649424 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111830352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089497135 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090827682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108422237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094424298 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090897523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099662813 seconds)
  done (took 7.627148955 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.112419883 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098144045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109350986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091983345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090373783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088876456 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111981768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091594608 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090250163 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113062143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091412881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090121516 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108157539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091423427 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089302487 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091115358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112235571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08989572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08984697 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108322015 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090538329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093775822 seconds)
  done (took 2.931699136 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214437325 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113947591 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136584128 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120208442 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107528199 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121097243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094704641 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096097904 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110802638 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098692997 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099218483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111605114 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108040065 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099300407 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116292931 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099870452 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095331257 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116890493 seconds)
  done (took 2.847773869 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103111925 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091895974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152861617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092067993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092021129 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109743844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096313156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109870885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109021965 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092188189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097772908 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108160542 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09268944 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090642253 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091234297 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109712834 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092122329 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09056396 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115454765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097544736 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095675854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116194036 seconds)
  done (took 3.034899411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105274979 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091448151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12714913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095194997 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091124088 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090129478 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114249585 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093083206 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097732539 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108972656 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09273812 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091301136 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12278824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091693643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096793175 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109414333 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092025739 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092485714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109512809 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091418399 seconds)
  done (took 2.792170569 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184569211 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125696641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106328744 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115372562 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125835695 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108059971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133289715 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107524567 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106977989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135090363 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107823697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106272662 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133605188 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112192968 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125693009 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114886397 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114444861 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134954313 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105535418 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107610053 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138044929 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106827482 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132521112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107209793 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107482383 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126067708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106992237 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111860104 seconds)
  done (took 4.141012485 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091207409 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090875313 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090161116 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106696389 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09028271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090913237 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08909911 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109015818 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09160285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089571725 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108681977 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090663764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090434336 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090270069 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108308955 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091318526 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09069645 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089657561 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108384314 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090544265 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091115218 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10811745 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090961079 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089598894 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090266926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108612904 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090603631 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090471072 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107313367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091300088 seconds)
  done (took 3.652652617 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102517715 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101022623 seconds)
  done (took 0.999328407 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09902188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104835608 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090194431 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109582371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096775854 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090371618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117806042 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096734577 seconds)
  done (took 1.602463833 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.183200462 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.207118168 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.11466507 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10285903 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.207217692 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.18719231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127786851 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095660349 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111049247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083780557 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.201667125 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082720785 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089001402 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107663412 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090202113 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095769581 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111899355 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099935753 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097253219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111883012 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095823009 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095753587 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112838022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101594902 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085974969 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112065368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093645917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102011087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107957793 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092737072 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088732024 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109660662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095169086 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096217193 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092497167 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.204993316 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119388436 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08839944 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092397854 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11770987 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122213097 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092861041 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113161247 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090580583 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095282578 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114912727 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097464978 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092460291 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102627156 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087067147 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091460723 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086672404 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111038702 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092460781 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091328933 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117545115 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094970666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08842109 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106973379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087425083 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090126684 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105141862 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094174546 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094561467 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110485279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09272066 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090957027 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111325051 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092995275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094142558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090748551 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126009949 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091966653 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096090641 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115713318 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0919325 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088374856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115871578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090611662 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091559967 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115166461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118143376 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092046412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106276434 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087594798 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098493181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111317019 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096145397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084972398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118455497 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096107054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094893701 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08487029 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108781641 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088417738 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095040857 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103288484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092122748 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091721999 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115694321 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100047709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088699897 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093686216 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116650798 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096985308 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091617726 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159802863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088584659 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108571628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094067897 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096409397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106660979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091709846 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090293326 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088570271 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107338161 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097220952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090896614 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.112549997 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096419873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09410652 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112558028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093971028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090832571 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106845849 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096555086 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099363963 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111799203 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094546171 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094032558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092314672 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111372263 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096226971 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088911795 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116132645 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089245078 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091069821 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.112674663 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096944311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093277783 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08661695 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110327578 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092114228 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091766558 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11477067 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092228558 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08773497 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104110027 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093042628 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087832188 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111929876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101746179 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087898817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113975737 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089563414 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099986388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108789672 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098151867 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094473745 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097046 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119302601 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084281738 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089384412 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114826892 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094170844 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089598894 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111358505 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092841555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097740781 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08479968 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117256321 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085321115 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088542963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115936461 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09381591 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096770127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106686402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128073479 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10339171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116913959 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091291916 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092913771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116795369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091419097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095804991 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097158095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118026601 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089943212 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091155237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117605947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088743338 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094569777 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109785679 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093890432 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085305959 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11486328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084696665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096713416 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093256552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117499369 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097554305 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094887066 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11035684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101133811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087760043 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116160303 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085459401 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098117645 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122085846 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097680997 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097300432 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114130644 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090359745 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092880456 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100784255 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115689293 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092249999 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094609238 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106199189 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086779052 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097825708 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.115473064 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089104278 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091480069 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093764298 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115153471 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090266856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085832493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.116321147 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096547613 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087761788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114133298 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092614641 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090836481 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120483897 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085323839 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089400265 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114461413 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097011498 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092389682 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111431559 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095525415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098070292 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09516245 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114532302 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090016405 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099967182 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111272181 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092404838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089269802 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116585287 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087548633 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093656183 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093355797 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109586351 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089058393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095531282 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119811674 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098406159 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090941802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117734595 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09831746 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098502749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109717584 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098510432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087908874 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085964283 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108628757 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085736741 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095748 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107681849 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098333663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090994183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111745565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097334095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095194717 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110329533 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097726743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103289392 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107176478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086217319 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091337942 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11142625 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0891649 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089961928 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094657009 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114478455 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096758742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094811778 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109658009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092365168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098745728 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109098441 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098853842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098358318 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118170754 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088362773 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097523365 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090297167 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115472017 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095396488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092669257 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112689121 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091624012 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090460386 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111005177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089109935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086118214 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110329253 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098949734 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09202958 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11730102 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093426964 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091567021 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110290631 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089964443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100829721 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090971066 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.12028904 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093087675 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087034951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10729458 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097475664 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093192089 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118770201 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089019281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09668052 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099336864 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116644721 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09352579 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101176693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121687123 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099546458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098372076 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106830904 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09002297 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097286394 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114091604 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106014738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095427359 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088439668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115464055 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098523073 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09451132 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112305692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087555687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095174324 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119116125 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096528476 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096129822 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094807098 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115349306 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088539332 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096985727 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118759306 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093565529 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10121727 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114048302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096868533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090035472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119695249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094067828 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088218551 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088351948 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111332454 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098701937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087173306 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119310633 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097391296 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089552938 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110476129 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098020077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089500209 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115779108 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09827793 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091180449 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1023707 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114826753 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091053269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098807257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118475192 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087431858 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092306431 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112025489 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099732096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092231491 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11956276 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093652342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098113175 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096255886 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118417293 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097831784 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098282121 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108244491 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099588572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096988381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117088074 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09155424 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091206291 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087767585 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114573927 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099253962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091329002 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12240544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097850292 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091931942 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111947057 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099014826 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092414127 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120497795 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090606424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095276362 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108921323 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096517442 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093255644 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099614064 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109621551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088629287 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099658692 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119401077 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097274661 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095628711 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120810195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087801458 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088335255 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097473988 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113025616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103776814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096891022 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11274213 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09184918 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096662222 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116500849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101499849 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088059662 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110760802 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094248508 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095988045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112610689 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089745351 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098083213 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09257525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115994848 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09206052 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089070195 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112964504 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101128502 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092279402 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110474593 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091220119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101172642 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113484334 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091947516 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088424862 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120565192 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096996832 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101687023 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09157177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115021959 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092209631 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097922578 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121913339 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091736316 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094865694 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113883406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099904813 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100040235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109696282 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091494945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104813957 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119744976 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096401714 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097579797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113769845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103120306 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101118375 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097236667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110264371 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088745364 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092942126 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109362651 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09730148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100576477 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112866029 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092265992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099069581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098662267 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11807996 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097130229 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088360678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121942811 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092209421 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096929085 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10866305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089387485 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097807689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099893289 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114822842 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095812602 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096590216 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118746385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088833364 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092092438 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119601173 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098891067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100191791 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114369432 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093593397 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098326819 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10636178 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.117999991 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093350348 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101920782 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122003923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095141847 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094886997 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121581592 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101276776 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097410502 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120972297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092476844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094181041 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121136704 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102157683 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10275294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113661311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089311637 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099054076 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092485224 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111314015 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099234616 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102571983 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123478481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094809053 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092097396 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123934056 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100036255 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095364082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113590003 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092484247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099182096 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11262766 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099133416 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091258532 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10226482 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.1233117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101860718 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103589989 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.11102592 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100974921 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097285974 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124311619 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096569822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089070823 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089130468 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.118347312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102266077 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10149475 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.120705503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09852901 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099214153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11610869 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095902489 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092555765 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122896843 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100373938 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095748139 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096075485 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114797699 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09444965 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096736812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122245852 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100416192 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095645333 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125783942 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099959709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093699136 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112325876 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095349067 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097300012 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094690952 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120115554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092492977 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090537421 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120968176 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.1021727 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094619435 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123001675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102717252 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094655752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11858191 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103988992 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098125118 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09635527 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116483108 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098622457 seconds)
  done (took 61.485103449 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144458245 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104057017 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119749585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097520083 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115895953 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121777776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096972178 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098809353 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118678429 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106206383 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097796654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117324696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114017711 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118181788 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135140998 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107739259 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096613333 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119308398 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097562895 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09842739 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132587811 seconds)
  done (took 3.2062418 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114608569 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110415298 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128856819 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110248447 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103601023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130072546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109476492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129439365 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111016561 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105700872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131621207 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108084136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105668116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.125581612 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106370579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127775816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111164625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104412928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130284724 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108298269 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106633602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128113009 seconds)
  done (took 3.392420782 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.124772571 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100683614 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096062774 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118731439 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101725715 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097408826 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120931091 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097501435 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105569431 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09241657 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109478028 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092497726 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096644552 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117276227 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091546488 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097933263 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126449181 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100838312 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10153023 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096780743 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109783583 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098178756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099213245 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108215646 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10325035 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101388102 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098252858 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121457554 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088485065 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101377207 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117828741 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09280405 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089033948 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088536818 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109258726 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101031214 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101819163 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118009839 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099001067 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088776932 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098424038 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122145979 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089490849 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098379271 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117457325 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092364678 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102492782 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097652362 seconds)
  done (took 5.788587082 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126216958 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156143179 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101825378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12616311 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135333201 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106444682 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101269792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149495966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100380293 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100346559 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135672699 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112489305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126148304 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105544986 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103780446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125096076 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103858179 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101423232 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127770229 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100835588 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107050484 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125301828 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112009285 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111308218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125950863 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10119136 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101493982 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125694545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11246032 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1066431 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127655479 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105977303 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133433797 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101383144 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101953608 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123627452 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11376293 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103013379 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123013199 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100872954 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104996382 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124149377 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103905392 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115455254 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12532327 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103989411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10299103 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121042278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112408428 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10380028 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130391372 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113372658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104744604 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124537345 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.347601605 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113127654 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123563897 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100995315 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104101995 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132918998 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100260655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104989538 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133078655 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103618414 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128784324 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113737368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104607786 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125051587 seconds)
  done (took 9.002372998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130237511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10617265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134281112 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113322721 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104686427 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12694219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104947004 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105114973 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128021936 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110062809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126769543 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.213351293 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125468189 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110139704 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104336662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127428984 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104769049 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104373328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127715403 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105909208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106043582 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134176769 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106269659 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134376725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116731185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102446128 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126254533 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104423823 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113118086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126002825 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115268988 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128343975 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104869271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112506905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137599202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105889513 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100247524 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126065332 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105821347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104472154 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123577098 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113144626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128502584 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102382503 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106747374 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126563231 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114723597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117131375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131486623 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110685654 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105964872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13399609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10681058 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127023974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115772683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120395826 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134855906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114821165 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126683777 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114644188 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113251692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141966586 seconds)
  done (took 8.214477414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100347956 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099277988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098983746 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119496551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099616788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098684546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098696 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120726526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09958508 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099862629 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120182532 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099786781 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099160445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099058966 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120685179 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098498001 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098579155 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097960712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118812245 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09937842 seconds)
  done (took 2.947303565 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107485735 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115770029 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123811135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107540002 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1015875 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127820165 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10138894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101039595 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100806255 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123736964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109730085 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108760967 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124313783 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106993983 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108185405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129166984 seconds)
  done (took 2.663425985 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11836596 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116899223 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20024376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105158763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124630234 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109285824 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101869099 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126978927 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10038134 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106569068 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104447291 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126248247 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101417645 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102297576 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123134443 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105295303 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101742408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126257187 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102226896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207259666 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104307957 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102858122 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125848126 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105752973 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104174211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128462774 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107236192 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101363239 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123924488 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102465963 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104791748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108376911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123213713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105691443 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103513513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124110615 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10261242 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102139525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126676583 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101983429 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104577474 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124610958 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102793589 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104417119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099879181 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124518907 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10036402 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107764891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124906736 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103130084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101137443 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127797326 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105737189 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11023399 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130877607 seconds)
  done (took 7.160956642 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113092454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102636935 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134782852 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099985201 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103258801 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103394922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125435923 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103654591 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103345405 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121892386 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103908465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104404966 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1246368 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103935144 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103728973 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103999678 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123467167 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10278409 seconds)
  done (took 2.849536733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10689837 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102096991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106219513 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124535879 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101276497 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101646376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122609028 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101029816 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101432521 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101899481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122768754 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10219002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101189474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123617116 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10151654 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103003252 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124206228 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102896325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10202715 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100362135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124679542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100914927 seconds)
  done (took 3.250990087 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112558448 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229293265 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108028402 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.236275088 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099849848 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122398247 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.107741983 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122388678 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115560715 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098328006 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.120405116 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097784362 seconds)
  done (took 2.444359928 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128861358 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139547844 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125492355 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103803563 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112437203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1297892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107131221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107922872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139670903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118690023 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129338095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115449597 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115179591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138352789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11202039 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113029178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129636178 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108081203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102931316 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142284783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108217184 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137250065 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106331119 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107063824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12779167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11434366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115082511 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139788446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107414637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137170935 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11270267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10745731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135980001 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118360093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124083447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115856982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1079279 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143009456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111933717 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135978534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105323659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111311571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136960014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111746892 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115185667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129795276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112872314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107300307 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128268197 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128200451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134791233 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115725331 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112009984 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136494382 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115418518 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149596677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119397725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13726976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111947126 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118585471 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137252649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112078498 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13771423 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119196163 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112125362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137824928 seconds)
  done (took 8.907905817 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141438237 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104523418 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128981695 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118662576 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115737483 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129686185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107350733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129750089 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108175069 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105040662 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171852719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107586656 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116178181 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138270377 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10739166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129338515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108119475 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115900214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124996062 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128962069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108404986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13884063 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116203324 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137849723 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11979149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110801869 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129449003 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107932999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106839424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129485111 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113218797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128520743 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116277356 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104983951 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138243487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107563748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107832637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133780699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106836072 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111304797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136534541 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123258133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131345613 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10815712 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119300995 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129641765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108113679 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1051867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12955195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104902585 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118505503 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14106752 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120157808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137637894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108681488 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110065043 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128596312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108500879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108261533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134533867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117360943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130001517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129268813 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108049634 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132121969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117079483 seconds)
  done (took 8.840736032 seconds)
done (took 167.445581806 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174902199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.214168924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197087982 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155440088 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092705853 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159904692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126235955 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200986731 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093510844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093046679 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116362632 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096423155 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161355365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.115160804 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094283009 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096167815 seconds)
  done (took 3.064803073 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194231753 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.339217787 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133190401 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097626311 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101239061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098131753 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120238823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100623201 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099374229 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127347898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099209543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094904806 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126417473 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095307441 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097956171 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121207941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105566846 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099724413 seconds)
  done (took 3.143721838 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117588836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153352602 seconds)
  done (took 1.165167442 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128474857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210777362 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293764381 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169543907 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118820557 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139734878 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148460499 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133140115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188366691 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13332247 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110561056 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097769486 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146951159 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103860972 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114772277 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118906322 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127380235 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113729546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134943627 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100687664 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144518098 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10275804 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104513081 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136364407 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17808354 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131620857 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103046344 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101859042 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122587237 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113656143 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105529062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136785411 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11167719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179396136 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102611302 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175747279 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105296979 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122372405 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113202245 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098568261 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123823078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103045087 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111906619 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118903389 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102014928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106003912 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124803999 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103394224 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107268739 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127634946 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107200294 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128338108 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150191166 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12776087 seconds)
  done (took 7.858810817 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.905838515 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152202245 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099454058 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.054639839 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143544581 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111785654 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.896639649 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146894309 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251577593 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.918046283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115266124 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106684516 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262373588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257904514 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274727953 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359145112 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.760575419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111246688 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130183524 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164467213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104018674 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139118668 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115110867 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456322973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101110763 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099604426 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125432571 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108497596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17792088 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100363112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103348198 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195982673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293321518 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212152816 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099746413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119874112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098043264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186358475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270189526 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219664386 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166695779 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118311205 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098579435 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103657526 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135341024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097048235 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180725845 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193350844 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169345278 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124777599 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107438313 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106779221 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125303573 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178232931 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098107587 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361299506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359912598 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1215297 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105097233 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111493158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261537798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12350146 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238746841 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121393649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21359895 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121688938 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838846965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162162381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121832672 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104780014 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105167563 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127142775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102918604 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18233003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409214747 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127755492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103994789 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099845378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226842324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121237623 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099029493 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180123674 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100369188 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105324567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128942304 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106149532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188608202 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251703027 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128662241 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10534531 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125694824 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109051927 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101435874 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229596445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23150856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179209381 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228835594 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104820104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183005325 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187344284 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104314871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189509644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104233925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11128112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125903371 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228000292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13587063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125051237 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104877862 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105783913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161673771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102518064 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128390768 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16718362 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491436446 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186639097 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097598166 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126434025 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106533799 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179669845 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107181996 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263177042 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106826853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18643984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127009796 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097199162 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10646752 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181583635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108358053 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126886527 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103607099 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10839451 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278397273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220650615 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130620242 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24675554 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17121451 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126326679 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170502967 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127319403 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186818729 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109290015 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104034389 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122838246 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797682582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110718759 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105817995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126693276 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183107851 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121299364 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103500312 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098452673 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096884946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787726009 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127365638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098072947 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102393049 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125902114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105399647 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106940834 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127450495 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156783205 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270555704 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107286967 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10494882 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1217893 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155413409 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124590914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10040355 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10034649 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122595198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106491684 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104794192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125408056 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164892267 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177838117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230757767 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566522601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122374361 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100145137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242026517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10096661 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351484989 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10666971 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23535842 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182931782 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09753482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357198775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184004055 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204378154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104127417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193054717 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09787306 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107634008 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180256931 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099390991 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128815263 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177483743 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109100187 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107323424 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256977511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122029624 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246946486 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098237772 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190603987 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102626878 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10589538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326188198 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12375184 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111717698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180617242 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104264097 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121953078 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.953192372 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124647205 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109206135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105441481 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25772153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160167923 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129268882 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10659072 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130839194 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159657523 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227483677 seconds)
  done (took 46.520378606 seconds)
done (took 62.638924546 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222759333 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165927455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.349895682 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147575889 seconds)
  done (took 1.891506315 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259513727 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164777309 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.240101552 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096537556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248421953 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096867905 seconds)
  done (took 2.026633973 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170232122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163867067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143335546 seconds)
  done (took 1.397254777 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208647483 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206277768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346066633 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234559297 seconds)
  done (took 1.998642565 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273442733 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116345941 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125854203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.225866642 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.2420122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205419349 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12265205 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17425938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130299181 seconds)
  done (took 2.57692532 seconds)
done (took 10.807621556 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.219690297 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.457711557 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138895037 seconds)
    (4/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.190284323 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.445394278 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154454208 seconds)
    (7/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.381358551 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.25799866 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.370830118 seconds)
    (10/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.177504136 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112224676 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.393413855 seconds)
    (13/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.154228202 seconds)
    (14/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.328368223 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106044979 seconds)
    (16/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.165376127 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.26373696 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126067707 seconds)
    (19/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.214283953 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.229388178 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19579054 seconds)
    (22/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10906345 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198404351 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127554419 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085010601 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.319644139 seconds)
    (27/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.137444852 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112801775 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132302788 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.351342235 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.160489543 seconds)
    (32/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.20062684 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.250677827 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.20120289 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137713182 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083376035 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.264638541 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085629604 seconds)
    (39/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109693908 seconds)
    (40/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.142643837 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.112335794 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105930998 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12234845 seconds)
    (44/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.204102211 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139875259 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109026713 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124406323 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100702819 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120786938 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.266950497 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.159983124 seconds)
    (52/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079230256 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124282075 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116657852 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119988582 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12659047 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.413133471 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10311416 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212646525 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112186193 seconds)
    (61/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085704613 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107975742 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124563186 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.132568673 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084619909 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132554566 seconds)
    (67/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116183978 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.220544875 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079305476 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174124935 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215670233 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099793417 seconds)
    (73/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140854294 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135141627 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123179352 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10203169 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089560691 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.261176788 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121844055 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22189365 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117745001 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19595369 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105746827 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124688133 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084964296 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105357672 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.315860278 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102229411 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08099759 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099764083 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1374503 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.135493836 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079464155 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.219589237 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089247104 seconds)
    (96/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174158948 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.131416642 seconds)
    (98/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111967869 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126249783 seconds)
    (100/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.141347094 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106385176 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079321679 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103401696 seconds)
    (104/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110046536 seconds)
    (105/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079808962 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104612046 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110544155 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.161522146 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081797762 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102184014 seconds)
    (111/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081145934 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156488685 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102214744 seconds)
    (114/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079045457 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.169987608 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080083996 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110659463 seconds)
    (118/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112043578 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.105507062 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.14623787 seconds)
    (121/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079093158 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.137814592 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109087475 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080050962 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11262787 seconds)
    (126/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082992188 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081506104 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106295081 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086748532 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103651938 seconds)
    (131/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103390312 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.110332536 seconds)
    (133/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082622867 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11234145 seconds)
    (135/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087033973 seconds)
    (136/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.142198948 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082695922 seconds)
    (138/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.144879457 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109357412 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14715782 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123464933 seconds)
    (142/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082770512 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08534095 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.102974059 seconds)
    (145/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.142028256 seconds)
    (146/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088779586 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109985704 seconds)
    (148/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125858324 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112029051 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102381316 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134172509 seconds)
    (152/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.136690846 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10361618 seconds)
    (154/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079089177 seconds)
    (155/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.104073709 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080691476 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08608036 seconds)
    (158/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080612625 seconds)
    (159/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084101407 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12674873 seconds)
    (161/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.137361043 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079493419 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082281902 seconds)
    (164/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156639822 seconds)
    (165/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085086588 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086299522 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100733271 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.111116015 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101270909 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109893723 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123908076 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110534098 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103697544 seconds)
    (174/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082975985 seconds)
    (175/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081274581 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.105187119 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086051724 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082658137 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103232611 seconds)
    (180/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084919598 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147334168 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104471665 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081418803 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.127715193 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103123239 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086301128 seconds)
    (187/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084140238 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109488784 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109949247 seconds)
    (190/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084975541 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080268866 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086042017 seconds)
  done (took 27.434514404 seconds)
done (took 28.36034771 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224165098 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131423347 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109676726 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110129717 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23134604 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116679572 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15301003 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112311139 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119877116 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135351499 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101525132 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12267412 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13483209 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.219218939 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139874491 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103188401 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100418286 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145387692 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125407008 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125330533 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.231349112 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12889167 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.120819065 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101190661 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234687316 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103159068 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.134268471 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112095889 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12427991 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135131639 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111977997 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102725633 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126388907 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151257992 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10120868 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112110276 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124363021 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087176659 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112546644 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.135029461 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125083574 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112101197 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13500795 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104547024 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112230613 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110101222 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12519092 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114216061 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10101096 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135695887 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103665837 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127061829 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135103004 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102300928 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101375252 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.124729828 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12124796 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102473506 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122759326 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124779136 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103493329 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100994477 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136902046 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100904172 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110855368 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125417555 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113241216 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113500257 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.132123506 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103957633 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101280268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110257247 seconds)
done (took 10.012629259 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10629124 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145904936 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.246371483 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.250584379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153817046 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119535941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115191184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150487922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115552124 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120655287 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164513169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135380484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253217885 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119525884 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144193266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115167648 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113049082 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135449696 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.251313103 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126997225 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124624856 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144410334 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128655606 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118962404 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131684273 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138797748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134014737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118228303 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105875894 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113706778 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150800601 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106600707 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132960623 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126037186 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123584501 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138885399 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119434741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114250562 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130059207 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107809799 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112863514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145423521 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106820287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118958144 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138151507 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122112875 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113924613 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.14216305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108907774 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114388778 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106549722 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154491364 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11974791 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146846677 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120022944 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118414709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141908758 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120728481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109205646 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142042504 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106976244 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106436719 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1070567 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15193168 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111102815 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144181463 seconds)
  done (took 9.781202135 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124948222 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136233665 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141879075 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117111331 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111570193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.1249668 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100637378 seconds)
  done (took 1.826977718 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102418471 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26628037 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.257913035 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258862806 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24801855 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269451374 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124967917 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101558585 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163853309 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113562067 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.26650037 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322809835 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.138202421 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118893331 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261355023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101541125 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.26088974 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102785696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143526772 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261379258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120163116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133207652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141350447 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103033982 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262215119 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102902471 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32699249 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120890931 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112511375 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115947287 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142276682 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178490854 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262382807 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144221203 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112115445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257579333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.249971243 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117104277 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.329960395 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107983355 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248620372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117936296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117100366 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143239653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118701268 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.246775935 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122305008 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144570828 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116682296 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.270434878 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11320001 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.2639835 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141059697 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116600861 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114039082 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145952429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126078183 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118425884 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.269961424 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147283883 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.257640235 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.232575525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254742659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.259677575 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155420532 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.267258427 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209936962 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144039616 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111672581 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117104137 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.259027352 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144380441 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116147521 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.250673357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120737071 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.260792591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.262145137 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141570726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116276519 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106427361 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114547598 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130149092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252035611 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11789509 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115590956 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148051229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116991204 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118038404 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135175081 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127563358 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11679516 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140846402 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122766869 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141403038 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120040265 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.266405525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115414118 seconds)
  done (took 17.696193909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106203729 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105352643 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108807971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130301696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.1058995 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104708776 seconds)
  done (took 1.664720842 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141455558 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118011655 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152460659 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119745465 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165618058 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.24956302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258727244 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138668332 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138730979 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129213708 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253011364 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255210177 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253879352 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122442386 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258537346 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11934304 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.258888927 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142843444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127129434 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115840499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144529482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12324151 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117336918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243597318 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119618214 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146273559 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112691914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125848127 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152999344 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112030029 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146724314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120094671 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110985761 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136956173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.231174719 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139057208 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11485448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120512392 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148010651 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120077421 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257869733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115794892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152170887 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121669033 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111838942 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137254675 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122844532 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111036536 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.256605117 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.148186232 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123649383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119537058 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146074301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123372811 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111520606 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139605741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122707434 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261137397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123164195 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109775622 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146582467 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120001572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111022707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.14885594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119049636 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.14624632 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112913661 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120012608 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14075491 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119895344 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121963624 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143816053 seconds)
  done (took 11.778531195 seconds)
done (took 43.714329735 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.750751405 seconds)
  done (took 2.750583647 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.079158809 seconds)
  done (took 2.083275603 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.705874889 seconds)
  done (took 18.73825645 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420656775 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.350024189 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.013367971 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171861101 seconds)
  done (took 2.9597981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.072139621 seconds)
  done (took 2.093009803 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337440327 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245778111 seconds)
  done (took 1.593140371 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722583787 seconds)
  done (took 1.741591232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.762628055 seconds)
  done (took 2.771418209 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269204624 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242861331 seconds)
  done (took 1.535240201 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.68637171 seconds)
  done (took 1.703798926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.709801575 seconds)
  done (took 19.737146044 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252778583 seconds)
  done (took 1.281204824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290292013 seconds)
  done (took 1.316273249 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.582834033 seconds)
  done (took 4.608614685 seconds)
done (took 65.921114482 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117737807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123065929 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120403369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14498387 seconds)
  done (took 1.522580141 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122968081 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117481909 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121658697 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142081057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123825104 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117697789 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142120098 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120220595 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115634397 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146077584 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118215801 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115916836 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145953826 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117868201 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115649763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120407909 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.148273674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119239465 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.117571934 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.163429162 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119455833 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119589789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146614524 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121733776 seconds)
  done (took 4.087590259 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114108575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109568751 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110227424 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13279901 seconds)
  done (took 1.497767628 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127510069 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130744071 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153680087 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126655771 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12996967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154531732 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117646874 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115251109 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142007723 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126385415 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133993366 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156857098 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131777163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119823408 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153281294 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113500467 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117848226 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154732945 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126603809 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127118679 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143864314 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125422514 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122516487 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152956741 seconds)
  done (took 4.233669799 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192321384 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129984197 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172115812 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164374883 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173991678 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115858657 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146663692 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148708855 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124481053 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118128011 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144173642 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16481593 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.122010907 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.145093242 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120655288 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122107148 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.152307147 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124011511 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186509681 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123197091 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122835802 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.154228691 seconds)
  done (took 4.200187049 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121210246 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108487679 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105966408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.129675149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120734208 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110048352 seconds)
  done (took 1.729472512 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108278294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104189367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103758306 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127411663 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106100783 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103828078 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100703099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128836984 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.1032639 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10261717 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127484927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102936903 seconds)
  done (took 2.35680459 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202326916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144547991 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245813382 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380681231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185932303 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159394572 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302947533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185342354 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17579945 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163071715 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180414772 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188091307 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153411478 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213974696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138860116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183878062 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170961894 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238245939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167480167 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215493814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182320043 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175527488 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215553249 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148076442 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167005734 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161982609 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144405514 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128173212 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192636089 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162910311 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201524649 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148808308 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167027525 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214080994 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231507652 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202214681 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263824821 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15947454 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172207513 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215760607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254580558 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14169693 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217184322 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152375731 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155084596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191730667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176170168 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209423768 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135401366 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143564555 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209312022 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203804898 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167656934 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163729201 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299807888 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158341644 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140990066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203227939 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213863718 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200500497 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206270015 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123042113 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200431703 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217974367 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215954207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169088332 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162578845 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151301014 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162273778 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231786598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208777876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158354564 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217842576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13132061 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1997423 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164651594 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181399813 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234220777 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171111214 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147019673 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152050829 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159772203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127314724 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189720913 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147691686 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215474049 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157552367 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.182914951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206039609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152281795 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18823972 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15808784 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189689764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146033933 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130270547 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143595704 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185403116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157688907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12647579 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179365406 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139151214 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152514367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151335934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148176524 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170912865 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135622554 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187611008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1967496 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131674775 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208022054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147303578 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160360895 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193885968 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219683033 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130187086 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158382781 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219848837 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197913226 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136417766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197943048 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225614863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153413364 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134570814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196119772 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223085212 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142834783 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227968235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137939748 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163577575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141694276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201894529 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158932641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188826317 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126438076 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193445619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187490323 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153727859 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138754517 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210589908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133590661 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151724113 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136651176 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136560033 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171285748 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150140182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164604102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155164144 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193971454 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16590783 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185120258 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134297943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20102717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13104306 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195509778 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148198315 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117391743 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19885308 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226343168 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128157569 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206683616 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159403651 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208672835 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19755089 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129719359 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181215432 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15617845 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119612347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190756869 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167841106 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191141556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187120163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209136092 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190523809 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188536545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148327731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195167346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18325403 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18429683 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140043297 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200833919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168485392 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149919414 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123646589 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127744457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166013989 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129884045 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135771316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208816079 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192563454 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202331316 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167025778 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137299793 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219275161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124175218 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187631682 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202662364 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139397056 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215758582 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191813428 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20789592 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139520116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192740571 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121346087 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125630082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163185835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158646711 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16491755 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135495024 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169264401 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191144279 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195560692 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147100829 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217276023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192455339 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226494445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120862297 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160342457 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193555479 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167440218 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211360257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134543785 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185510741 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193397289 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168845424 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191021358 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196764547 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178647508 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21909064 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193485918 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130535664 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142921037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186561085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138619792 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189138996 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141442707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158912456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14865389 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136947792 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169827951 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215742938 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143461958 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203538942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154728824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199671621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124728221 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170051723 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173774402 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175408129 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106627665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193024476 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19196226 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178638429 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151775655 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196659296 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129556698 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343723248 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181668353 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197719277 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135237029 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167255696 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172405793 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183495332 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158300437 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213654823 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140397323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235720688 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197771938 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13900797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130528261 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174418129 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147682956 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1678219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154124208 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191182762 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143138314 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216257459 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136294707 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20039783 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176163953 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172606377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149317382 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166760871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227634673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197126255 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201694643 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165103537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190141777 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181853992 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15023335 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126412025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132829111 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213591058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129354788 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207816441 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.164008985 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208293037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202584071 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159654101 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16922096 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126200894 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197293035 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147598728 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210471527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134834744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166854458 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18309975 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156524024 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129262247 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187960703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289139143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173668523 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16747863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.135334807 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281105998 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155587942 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132795937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156404806 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197295899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131576439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.208471622 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175235413 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168014242 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159776882 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161478077 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177629292 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209072257 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194544292 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172807939 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173138637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161316394 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187574621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169649366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173358009 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145962206 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186497668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193667295 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201932802 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130301137 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197423639 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169117385 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197984046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17194931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168375881 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181521267 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156258907 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165026363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16772517 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123823917 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187226742 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.164888985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155829313 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172140885 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199681678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131109899 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15474405 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149226378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193466432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140190243 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129769366 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213622277 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127454197 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212448803 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240354378 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12946367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196394946 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142192872 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130025124 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166918224 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143843222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130429086 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.200885811 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17777086 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.156812748 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172849215 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193711924 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163179829 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182179871 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140392853 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.293270743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127101219 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219862247 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149057013 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225643708 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147393883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204346307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167609652 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178904804 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191995644 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147014924 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219062005 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195808978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194803962 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130514083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141322231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165513436 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133571385 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179045324 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1686139 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169373354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136573163 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16605275 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174860155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144626352 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17009677 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199536128 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179040714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21710631 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185013192 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165663245 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174964777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204783932 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127988482 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194362635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169924681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173106091 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15154462 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163594966 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137032021 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245784468 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125456247 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16024852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203401634 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195339575 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171803202 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132801106 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206918282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139976878 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204919564 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126042984 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179085623 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168307715 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163718934 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126061143 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19878715 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159074419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192483206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142672961 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176764587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219756367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122586748 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162807016 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286387815 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187903294 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222120005 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133766451 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135173544 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175123736 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159533555 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197721442 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169738554 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159502406 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130373422 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144137184 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188478787 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137905177 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196721035 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17978208 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185177808 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213350036 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135089315 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253023307 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170769341 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170900852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.147708238 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129261061 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138971792 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164684419 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142769063 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207938942 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245908156 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1631572 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174635825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135601322 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124358272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158913923 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160276247 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17882749 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170659621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176685597 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104705144 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140114047 seconds)
  done (took 84.8049099 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177347692 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152740233 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168027163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221267453 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19541235 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292710546 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228382045 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246261833 seconds)
  done (took 2.804040724 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118938029 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161128311 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141976853 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144142282 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.10995665 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.495532218 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159733231 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119870131 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160498831 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152203853 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13698411 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.570822728 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116277845 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145561038 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120824583 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13510901 seconds)
  done (took 4.099667284 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.006614249 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536566836 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.997718006 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.305537527 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236314269 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.21453175 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.788933704 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199135798 seconds)
  done (took 12.400311031 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169372865 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.1682267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.459409329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.322508819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.213382092 seconds)
  done (took 2.457254306 seconds)
done (took 127.214184153 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125291352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.633909732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124362253 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154179313 seconds)
  done (took 2.150995179 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195713854 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092990736 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094486247 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.092090272 seconds)
  done (took 1.626893756 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373729998 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09163379 seconds)
  done (took 1.623016516 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144846841 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136665214 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163855544 seconds)
  done (took 1.582468273 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134076897 seconds)
  done (took 1.26310797 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117434626 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116789153 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27739589 seconds)
  done (took 1.647284616 seconds)
done (took 11.021909839 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119996474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.930885484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433650606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133620065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.717377189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428657303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427892402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17630112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171435628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108846733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159972997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693621375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.443726189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881345875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.400280022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911547131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696683077 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113101743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144627958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113817965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.396656027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135201411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112317565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111820085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.691425983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450560577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11113613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918639723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112039667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113252461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398514294 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139438053 seconds)
  done (took 21.018746029 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11308959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167747798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147371883 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113065216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114158581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139719583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123147503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12298205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201046655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110266886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160504908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111279724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116194594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111165463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163288991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111344606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112806104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141206085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120063801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112840327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161085289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110017831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11281246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141235698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111201292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133024597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13987931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123537917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110548974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143432346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11636375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111914231 seconds)
  done (took 5.259548439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160810534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177886308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148069388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149719668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18954205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114391642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198665277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176586911 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203870409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111934695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132518108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137864808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151879649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111666435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164830179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112748765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113410023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142117583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11882789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112759939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161322749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11088065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112962899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14113785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111412911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134474084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139271272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123982876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110135165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143388136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116474728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111050993 seconds)
  done (took 5.586541487 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126439193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12894866 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134452643 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16492153 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123013408 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124184856 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155652684 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121764507 seconds)
  done (took 2.219614101 seconds)
done (took 35.220293936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134619213 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126619733 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132405734 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155616507 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275939559 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118235496 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128682006 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.147895064 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12657245 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132013784 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109084891 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151758056 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130226476 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121988069 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.27381366 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.157159371 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.24874022 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.27625161 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.150757858 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127420673 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119933129 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.279664614 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120839179 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152032602 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27390187 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114554651 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.265493608 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123295916 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121304741 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141694275 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.276691471 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123074519 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119451922 seconds)
  done (took 6.583606267 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.224319307 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152912322 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121904189 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121663586 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121217579 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149274918 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230405068 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153086018 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120725478 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118897312 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151410874 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.212587369 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157242971 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116096257 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121466215 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110386174 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.261328693 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121499529 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143137685 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095679835 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115288823 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118690791 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276554931 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115047172 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152742469 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120870817 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122109313 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156003358 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121574608 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121642354 seconds)
  done (took 5.572982151 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124194075 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133714559 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137333176 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217108754 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148740912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161660292 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137766541 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133717353 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170877736 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113554314 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128991753 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179319172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129987829 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124082469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142204396 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132462026 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128560483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143727425 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12232624 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130838076 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133460128 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.159963918 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137116319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121866265 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.141712574 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120870608 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122183554 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154696348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121469008 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127735587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144514467 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116905579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114896035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176843996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11555834 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125662139 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165317461 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126981371 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12649332 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175423844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116724411 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114380537 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169730243 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168129201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114511349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157011028 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116647654 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127361657 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140433501 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130425105 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156042609 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143770238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13458101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112481902 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140418974 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123289072 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113425178 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116081032 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.15756466 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115473064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133229721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.15069095 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124687993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11548403 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154080906 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112657902 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112482879 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115656327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169918814 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121417954 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150420594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143552053 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125828012 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12573205 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.155392945 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126881428 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111458937 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.15369203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124645529 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119126252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155706323 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11753883 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116513839 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129521429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164325505 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127755002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12534038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156374913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116989178 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114611363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161422902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115749426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118595389 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155586196 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11578714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117752055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155131739 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126926965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111856054 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140004606 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147266073 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113191629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137955392 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147356797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119521973 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123343828 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184959972 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114471121 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125445631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156390697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113950804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121060995 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145950823 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113723609 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129794159 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129794229 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151773979 seconds)
  done (took 16.962168933 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.372504563 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.362825049 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213151127 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409245896 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127541777 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2818797 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.392685341 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.366585862 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114814111 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147673807 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.204741399 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.327215842 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113627159 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.174050345 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.369159863 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.443859307 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.143576289 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184386645 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.150721401 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126767378 seconds)
  done (took 6.185845351 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134279785 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149447286 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16596922 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142241971 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125701949 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16171854 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114721572 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13543929 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155053935 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124201828 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116084385 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159141467 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128378686 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131885067 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158192114 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148370124 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123388107 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149037458 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137149843 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118169846 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133130687 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139610072 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124033789 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166890776 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134086394 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124985726 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142727507 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120155992 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121799358 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122935465 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148774087 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13306322 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120859713 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134690173 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126046546 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128864502 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148923198 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117308493 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120335693 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116439318 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158306583 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129505994 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122369053 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128435746 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135119976 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111090594 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128050012 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156130679 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107651749 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134433925 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155806894 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130170324 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122085009 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135701265 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.151481903 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132544998 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124198475 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.159743149 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120239452 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112318193 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.142067857 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11905697 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123214202 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158458 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127295587 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134154769 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.16108054 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115171768 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118909325 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146194778 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118031071 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127635993 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164668147 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124085542 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122306266 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124757206 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.152300862 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096274673 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123032335 seconds)
  done (took 11.73978772 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140401932 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125116608 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131809778 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179784385 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128322324 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120183929 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155359561 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13581818 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128483098 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163577087 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130301486 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128000844 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167596871 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126490387 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124264615 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161414171 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128090521 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152886271 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15905158 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142628892 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129888934 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150595338 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12793205 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12555605 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173724745 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126829327 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140528485 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15963713 seconds)
  done (took 5.147270054 seconds)
done (took 53.331587978 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.295285734 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.573011624 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.270940669 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.269029742 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.295167702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.290464521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.268906053 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.282371522 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.798650443 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.239946365 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.271271577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.26798303 seconds)
done (took 29.301475139 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.415446127 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.495911037 seconds)
    (2/2) benchmarking "String"...
    done (took 1.66904723 seconds)
  done (took 4.336528339 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.259136654 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.259246864 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.591663018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.259945975 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.258554667 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.261014686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.260324794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.264693646 seconds)
  done (took 16.317615599 seconds)
done (took 26.498791851 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.312060353 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.451246 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.536033039 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244988486 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.264399125 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.260859569 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.26552797 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.295036541 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.270732542 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.246486513 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.756440606 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.526711672 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.284801161 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.646314451 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.245671046 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.269546916 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.277696835 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.531278594 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.265943805 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.302733539 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.242691266 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.243955324 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.26954559 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.273841737 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.273612029 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.272247749 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.289807593 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.274031146 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.463180269 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.286969523 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.302126618 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.268793608 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.290921632 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.271312853 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.266155284 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.262871347 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.515226203 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.276245045 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256651491 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.270458205 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.506931223 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.276541311 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.27404714 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.270511494 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.242724163 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.340900264 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.247640849 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.444278005 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.286223898 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.273702054 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.280780468 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.686968923 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.278672868 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.2764626 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.268514732 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.53194006 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.290634305 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.354652501 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.295168541 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.278749064 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.274445165 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.262207296 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.31931812 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.265960287 seconds)
  done (took 148.120210332 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.264524769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.268523532 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.268344669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.273222524 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.268111748 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.268008103 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.264047265 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.263387544 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.269812314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.294376959 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.269192332 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.265596414 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.2700907 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.277706264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.275526518 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.288786934 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.270549488 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.28294003 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.276928163 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.264298763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274492377 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.271250275 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.266646757 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.266220656 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.27121326 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.358700084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.31117728 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.282015052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.279779922 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.265264877 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.268506002 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.27872469 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.990815453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.229450965 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.268503348 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.301592472 seconds)
  done (took 82.797107441 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.670027103 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265039081 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.266003659 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264835004 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.301772173 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266560503 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.871810934 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880412027 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.273836079 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.414179904 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.782519062 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578089644 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.270968955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361720998 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.28034375 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.269867 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.364698332 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.295944198 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.26769291 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267309342 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873556756 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.284276792 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.285705676 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.452833074 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.284188722 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301486663 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.663677273 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267452656 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268347602 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30196717 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.666953459 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.605841637 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.319597835 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267736491 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.646474876 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386861206 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271651444 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303026174 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.26897778 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.556931996 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268629132 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.268647011 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.273944054 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946085532 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.274511864 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877071309 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272795863 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.302292701 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.272540454 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269229209 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.424712877 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.120514627 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.27340013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.269408351 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.273055882 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.268619075 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269125006 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.304099634 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.395354536 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.207433921 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.275737788 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.274007749 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303416657 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269576948 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.739438864 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.271667088 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.547470248 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.331864059 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.3790093 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877187595 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275250435 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367718549 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390680128 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271693768 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.269921685 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271233025 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.270945139 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.382527066 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271987031 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.991555421 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.459950738 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.294682935 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.805310997 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.374348163 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.270872155 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.666340601 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.274873013 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.270761178 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.079927761 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372505261 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272178467 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.272646263 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271840434 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270606898 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.989469262 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881554002 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.604177738 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277602341 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.108290517 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.276662277 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.166038363 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.860756665 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.985564785 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.278061617 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38630087 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.45334515 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288921726 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.274908353 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272047375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.762488023 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278956493 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331152376 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.277395261 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.272795933 seconds)
  done (took 387.514933019 seconds)
done (took 619.601659906 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.253662983 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.255722533 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.255044793 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.255534032 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.255712475 seconds)
  done (took 12.448380762 seconds)
done (took 13.628284156 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548952349 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551756686 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.3697202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554378389 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33909787 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568876321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.537999141 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.322250197 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.464161399 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.391517734 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.45647802 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359416934 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.340706594 seconds)
  done (took 19.981786581 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669906977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.286841783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407679985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.62301889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351525149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651223805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.712215149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287699784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.534896442 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.329710782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326379773 seconds)
  done (took 19.35947148 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.656896942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.288541022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.426704052 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627290663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352256946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.648631017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.691169596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287866635 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.547732013 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331076808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.328667004 seconds)
  done (took 19.365105787 seconds)
done (took 59.890718298 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.339095635 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409838639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.337386549 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.320917485 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31830144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.318213371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.319132273 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.318991961 seconds)
  done (took 11.861709021 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.31571452 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.314286614 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.314294715 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.316322488 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.316408044 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.317645002 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.316608348 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.316367605 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.314709503 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.315360005 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.317124196 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.317289161 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.319723339 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.315321453 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.318368069 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.317761218 seconds)
  done (took 22.243299655 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.319692609 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.317749136 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.317504412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.31731165 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.318899352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.317595484 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.31777791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.316401199 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.317083409 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.317772603 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.319747155 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.316998621 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.316959441 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.315258386 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.316511688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.318149465 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.315776538 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.318197935 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.320925797 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.316978368 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.317882183 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.316903916 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.316787351 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.317858158 seconds)
  done (took 32.802216051 seconds)
done (took 68.091180592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.279639261 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.299853844 seconds)
  done (took 5.758427591 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.414002577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.416384374 seconds)
  done (took 4.011189412 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.319290672 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.318721536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.319878038 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.31926106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.317855294 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.318793193 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.319266019 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.318930291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.317704716 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.32010572 seconds)
  done (took 14.37023514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.318704075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.319766292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.319584355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.31763257 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.318256602 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.318846272 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.318636259 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.320416165 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.318413047 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.320033993 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.318681238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.319340469 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.319979726 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.320905054 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.317442253 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.318614819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.318739555 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.317334069 seconds)
  done (took 24.9214361 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.340134315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344574194 seconds)
  done (took 3.865226298 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.505004233 seconds)
    (2/7) benchmarking "second"...
    done (took 1.400532289 seconds)
    (3/7) benchmarking "month"...
    done (took 1.485027251 seconds)
    (4/7) benchmarking "year"...
    done (took 1.472070366 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.402297387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.347631428 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.402242073 seconds)
  done (took 11.195774268 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.315113116 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.675206044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.868830597 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.526608657 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.305571679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.338682943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.265980541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.336318955 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.354203981 seconds)
  done (took 15.168413945 seconds)
done (took 80.476668509 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.28361344 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.305066587 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.312983446 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.306467323 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.724189996 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.324220279 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.289176787 seconds)
done (took 16.736345802 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.266276179 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.285080037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.26640776 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.298082878 seconds)
  done (took 10.298352186 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284029415 seconds)
    (2/2) benchmarking "read"...
    done (took 1.698207852 seconds)
  done (took 5.166298383 seconds)
done (took 16.654302898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322302368 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.322235041 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.321986546 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.322648431 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.325436496 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.322781899 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.323098838 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323152476 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323106591 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.32447988 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.322434159 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.321177784 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322787416 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321980609 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322867524 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322308375 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.322466845 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.322495829 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323171124 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324683816 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323379321 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.322409505 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.323540305 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.32271073 seconds)
  done (took 32.933930985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330906046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.325103772 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.322563365 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.32314214 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.32340628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.324823918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.323631867 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.323377854 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.323377924 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.324174324 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323596248 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.323537721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.325607537 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.324311772 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324088978 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.32384153 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.326914477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325388026 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323524102 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.325982934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.325814965 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323767778 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.323856127 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324737245 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.324209734 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325907157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.323902991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.324753238 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326260833 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.326425937 seconds)
  done (took 40.926068742 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.331598104 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.33083802 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.325326565 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.326553327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325771454 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.325718515 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.324599658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.325327334 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.325995715 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.327320534 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.326027702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.327712902 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.326922997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.32701847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.326034407 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.326655925 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.326373347 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.326502274 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.326386407 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.325547613 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32597616 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326362242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.325436426 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.326374674 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.327992966 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.327775271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.32858082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.329495043 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.326593067 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.328167989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.328354884 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328472776 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.328571183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.327342395 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.327320115 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.328382122 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.332853849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.332135951 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327846089 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.328174903 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.327910623 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.327861176 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.328957614 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.328009449 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.32945216 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.329794103 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.328027328 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.328776446 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.328447633 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328984363 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.329198217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.32854995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.328926185 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.330778865 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.328458738 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.329774408 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.329857379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.32921456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.329793055 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.330946973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.3290519 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.328874503 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.32928971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.329290408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.329267151 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.330779773 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329769659 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.330443487 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.330690446 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.330297658 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.330516332 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.330106293 seconds)
  done (took 96.826166933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.330919595 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327040471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.329337341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.329563627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330492027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.329516414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.329367372 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329688433 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33198698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330039107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330685627 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329694998 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330359957 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.330682903 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331418332 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.33161731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331166065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337557171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.331649228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332455684 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330915614 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.333269894 seconds)
  done (took 30.471632112 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330441183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.333171139 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.332106338 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330838998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335428898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332552205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.331359386 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.334545545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333178822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332084688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332998002 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331505354 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335774263 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331905056 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332720243 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335524301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332693145 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.334804377 seconds)
  done (took 25.185775371 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.331908408 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.335986301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.333942117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.334356695 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.335180751 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330857017 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332150059 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334940707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.334518098 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.332623164 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.333535291 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331560738 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.332890097 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336018288 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333463215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.332519659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.334890492 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3347902 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333137615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334282942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33233039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333342739 seconds)
  done (took 30.532725705 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333411462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334854104 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334218618 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.334065875 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.334024808 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.335008523 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.33295058 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.334438967 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.335739133 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.334169869 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332724224 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.335241513 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33709105 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336128637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.334104428 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333906498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.334793482 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336755044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335768885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.335400891 seconds)
  done (took 27.889918404 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337039088 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335509425 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336657196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336123469 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334956002 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334289717 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336715794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.338201387 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334924644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336931324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340945242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337226333 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337661444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335503209 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337480346 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337266911 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337272149 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336509412 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338612333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336869444 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.33625498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336402695 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338392892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.335715037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337527209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34394674 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340922963 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339381286 seconds)
  done (took 38.64106134 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337198466 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335891247 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.338405114 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.33727131 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.337133165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.338100327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.338310829 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.337693432 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337626314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336627584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.336459755 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.336716771 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.339300898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.339263673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.339485908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.340440639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338755019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.338312923 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339474245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338134829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.339978289 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340035489 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.339487165 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340801648 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341001813 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.33902265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338944917 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338818365 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336567799 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340513064 seconds)
  done (took 41.355069805 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.366828351 seconds)
    (2/2) benchmarking "in"...
    done (took 1.366478377 seconds)
  done (took 3.931347555 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.340603439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340479471 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.340575851 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340255839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.340084657 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.34200662 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.340443222 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340976181 seconds)
  done (took 11.924173458 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.333660098 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.341239762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.340870442 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.341840607 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.340895584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.332984733 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.351490577 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.345553579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.334932466 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.334328409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.340230625 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.340934137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.344388487 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.335613837 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.333732313 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339094308 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.345221833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344216886 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.343962665 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.343536912 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344005896 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339017273 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341359819 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.351339091 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.336689114 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.353150635 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.351650654 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.347031561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336030161 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.349258171 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.33639606 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.346281465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.343763896 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.344422989 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.345976468 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.343147268 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356013848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342564232 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.357143531 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.348634767 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346208551 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.346682843 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.340947895 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.346529541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344194049 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.350215625 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.346111401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.345813598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.337101108 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.341172645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.352099524 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336069412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.349173802 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348137986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.344299858 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356216458 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.350995682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.340145699 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.344410067 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.357916324 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.366731342 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.354444794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347852196 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.348757618 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353334946 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.365586015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357854515 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.354082946 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.346309402 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.346520811 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.356337283 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366513298 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.3601759 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.350212132 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346531077 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.345849007 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339753191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349150894 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357697721 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.355214933 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.350586761 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347321052 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355528521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357771404 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.341577445 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.350800196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.347724875 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.348559548 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.339589134 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360776744 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.354919226 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.347865535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.33893933 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.342039655 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.347500335 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.35028386 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.338918936 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343791763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.351583466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.3490293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346077109 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345567757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.356671613 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353229974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348175281 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.357122648 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.356438832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341452709 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.362791176 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.356589969 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348690081 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.341518569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.355644528 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.352225238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344469224 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.352534844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.353647974 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.351690393 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.357327423 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.348742183 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.358562566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.370961279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.354786527 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.349585376 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.350546183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.359135265 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350369554 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.35207473 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.356145149 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.35172273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.349633218 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.350233853 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.355593613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.344914602 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352094145 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345418366 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.35507986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.349990386 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.350686913 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.354150552 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.35345619 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.346962278 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.35533527 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.363016903 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.356995816 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.352672501 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.368190885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.350764647 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.356086064 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.354285416 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.355528451 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352151136 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.347731439 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.355448902 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.34294403 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354531606 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.344477046 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.353829422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35153353 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.351514113 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351738653 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34329994 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34967226 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.355430533 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.359967702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.350565738 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.356710584 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.351089339 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.352249403 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.342768379 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.354377327 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.343270118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.349405465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.35883767 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.353923499 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.351690323 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.359517576 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357908083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353135619 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352914361 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.34840059 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.359246591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.360022249 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.364331176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.362066992 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35363205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.354373765 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.347578278 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.348164735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356099543 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.352031358 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360815366 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36958799 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366822485 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.348863777 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.356277569 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.344531731 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.355037466 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.363155747 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.361872973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.355260331 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353489993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348298411 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358931956 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.358713632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.358915055 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.345719522 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.356446514 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.354915803 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355738185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356728325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.349383465 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.352936222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.358592458 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354398139 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356875969 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.348055503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.357661543 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.344787909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.35110617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35998649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.36270611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.36647265 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.362862764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358152109 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364992154 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.356811994 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.351821834 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.359726471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360543963 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.357881264 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371153343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.358347804 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.353114038 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371860276 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.359910154 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.35012085 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.364447183 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.364532319 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.356607778 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.349532018 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.362053023 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.360845817 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.355908806 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.356587594 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350475504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360946808 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.368537996 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.366968313 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.351583955 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361071754 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.361110586 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.361152421 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.361445754 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.363294453 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.358563753 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367651222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367332536 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.358307785 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353436984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.36169809 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.357626484 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.358506832 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352402705 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.366138599 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.370387603 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361125113 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.367369063 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.356221626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.362008185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.350968653 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.36399524 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.352480018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379822602 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.378449383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371126734 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.36561926 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.363565995 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372675324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.363110211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.353985378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35591181 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358633245 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.356348527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.355287079 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.364336624 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35559466 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.365015971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.365762853 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.364762167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.365591393 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.362080191 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.354212921 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.365054313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.36090651 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.358886629 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.351501403 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.364449627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.365886123 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370433489 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.360377601 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.355873746 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377903783 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367382472 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358530928 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.359576661 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.356146616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.354672825 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.363061532 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.367079152 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.358882998 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.368393425 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358734515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.364979164 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.358920433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.376907287 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.37220187 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.35918541 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.369437831 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.36521404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.352632202 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.355847625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.365945977 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375923154 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.374824061 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.35497447 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.36843966 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361594586 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.363506281 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.363729215 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.361769328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366791196 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.363658954 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.380038272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.369617323 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360799652 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372161153 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.373190892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.363975964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.364319792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.354702089 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375296118 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.373731883 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.364054186 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.363105323 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.359153632 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.366040891 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.363205893 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.365082529 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.363663145 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.363994821 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.379287338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.370184156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368350752 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.364858827 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.37894337 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376397585 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379173776 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.377308176 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.363683189 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.369928746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.365732891 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.36854952 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.35947574 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.361234274 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.369718104 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.356513981 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.370792752 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.36599291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.37093446 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.375336487 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.375611173 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.35730221 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375808963 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386339142 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.359730661 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369776631 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.367248726 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.36439976 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.370100975 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.365071005 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.357976178 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.362903341 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368502936 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.373933514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.361556522 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.372975991 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361110026 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372536829 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.367915222 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.370175496 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.366939958 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.367115539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.360071906 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.369409476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375510182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.377382766 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.365211037 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375174106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.361669595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.382630361 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.379509923 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.36792004 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372851673 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.369347667 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.360909792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.368362555 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.373394829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361927659 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.372541857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.361292382 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367508466 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.365467424 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.378323598 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.370769216 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.372205432 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.362025995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.364228719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372442264 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.370580644 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369733399 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.372625178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.376340036 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.364222783 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.361976757 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.373123635 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.366581323 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375390334 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363645265 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.369600631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366064148 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.372275063 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.371850569 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371745317 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.360928789 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.363747024 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.386254006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376561154 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.371443184 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.368436237 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.375112925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.364288224 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36956571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.369891172 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.364654611 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.366034046 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.373582911 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.365419025 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.366822415 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.366086637 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373808918 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.384721828 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.373888258 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.365671431 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38942459 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.385085212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.378609039 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.365532027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.368335457 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.366112409 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.374645128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.372481305 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.365108929 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390226439 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.378533053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377254259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379157433 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.373019572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.364959679 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376926145 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372740975 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.376588811 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.378954963 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.377893236 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37982812 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372811655 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.37265954 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.36488397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.36656484 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.371670588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.36947359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.376945979 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382424469 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.377264036 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.373282036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379764773 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372852441 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.37385641 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.375591547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.365246865 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376547744 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.365973425 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.380603637 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.375900874 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.367525367 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.377257751 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373535699 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370823762 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.374108328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.380956963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.373146543 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.366788682 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.374994753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.387196793 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389213042 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.374592537 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.370211533 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.371986829 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.379000919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375146518 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.374902423 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.37107994 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395997773 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.392375106 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370350098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.373705623 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386598323 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.387811048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.376044538 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.377956722 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.382082875 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.378696621 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.383055136 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.377182671 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3904852 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384489955 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.372145438 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.38011384 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.373741381 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.375360861 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.386202044 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.389613861 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.37763189 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.380044418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.399248256 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390087595 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.384671612 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.41387784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385986584 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.385574032 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.383265428 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371065343 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.379701147 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.38324685 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.38388045 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.379275325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379433097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.378733147 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.369215177 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388722337 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.391148693 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.38956609 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.378769186 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.370104816 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.379807586 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.381721796 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.379700868 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.38077852 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.378370741 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.37857342 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.37918104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.373640042 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400035297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405717655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.38419753 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.380985739 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.380111466 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.389699276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.387238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381219148 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.386233333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.38168031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.380587154 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.384097936 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389840985 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.381884806 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.372600455 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.375387611 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37801511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.383903568 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.398244497 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.402889991 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.392974554 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.383079231 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.383843015 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.380723974 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375486017 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.385352216 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.380867497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.376181496 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.3786705 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385357733 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.382929422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.38280699 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.379099674 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.386111181 seconds)
  done (took 813.803294141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380706303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380735846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383017771 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381741212 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383102697 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380664329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382225561 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380399212 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.381851561 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.382430405 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381401015 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382545853 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.385308704 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382310139 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384513422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387826553 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381418614 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.383321441 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.383347002 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381585117 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382333326 seconds)
  done (took 30.268466682 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.383166882 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.381947244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.383833866 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382551161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384417948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.383932412 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384395949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382977751 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.382889682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382077916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.383025593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383957974 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.382821237 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.384673637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384592343 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.385195562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383538088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383514831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.385132006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.383705987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384077682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.38450106 seconds)
  done (took 31.676767836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.385527378 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.385786699 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.377620995 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.388922083 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.386726272 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.385937067 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.386632546 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.386295492 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.385844317 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379402855 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.377150614 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.382452545 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.383100183 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.393152998 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.39040642 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.390075023 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.387689733 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.386719778 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.384757866 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.39187162 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.406371579 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.404577845 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.388663391 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.375331178 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.387758736 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.386618788 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.387332286 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.386513048 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.377409934 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.390461944 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.386925181 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.380180468 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.398143087 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.38959654 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.3813281 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.391138846 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.388775277 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.386542661 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.391782921 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.395718408 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.409144627 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.386874616 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.399003812 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.399867958 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.386255403 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.383281421 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.394280446 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.3888924 seconds)
  done (took 67.882608189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.387722489 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.385417796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.387299181 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.387895766 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.388630426 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.389937645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.389071892 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391036528 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.387889619 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.388465461 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.389048706 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.388954908 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.389141804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.388472025 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.389665194 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389584806 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.388307829 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.391146947 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.388240502 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389167156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.390156527 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.389027334 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.390570407 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.38925753 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.391676274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390103798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.388065968 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.389649829 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.389375492 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.390191658 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.390891049 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.389835956 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.391336705 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.390846629 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.389695156 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.389736223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.388109061 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.391630598 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.389034528 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.391452293 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.389438909 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391229918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.392613544 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.398429996 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.391896553 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.391199817 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391894179 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.392611239 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.392189398 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.393768859 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.392184788 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.391258972 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.391738363 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.390259893 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390706039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.391460953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.391240883 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.392843252 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.392767125 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.392055233 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.390939518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396738999 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.392373639 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.392393265 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.392081214 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.392072204 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.392688763 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.392732204 seconds)
  done (took 95.802250833 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393307557 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.395071259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39165127 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392367563 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.392955487 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.394094738 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393393182 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.391183194 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.395609875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392705595 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393460299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.393508909 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.393585106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.393337449 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.394865017 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392456611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.393133722 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.394532572 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393123176 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394762631 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.394994433 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.39516289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.394625183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.394685176 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393692172 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.392370636 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394505404 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.394271925 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39305103 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39602962 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395660859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.394013024 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394725964 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.396844809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.394953018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.394550033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.394829678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395020904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.394398897 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.396216447 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.396631932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.395620142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395866052 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.396518021 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394626928 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.394973202 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396399151 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.39454731 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.395954961 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396273158 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.396104421 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.396110776 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395536891 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395727836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394943449 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.395960268 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398194491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400284561 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395720293 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.397842002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.397834809 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.398086726 seconds)
  done (took 87.729983962 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397329786 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.395754726 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.395631665 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.396506776 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.396204364 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.396403901 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.396657773 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399654104 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.398914415 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.40452295 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3977987 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.400353355 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39949305 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40035985 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.39863065 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398341577 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399208447 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.398908409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397958288 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.39803672 seconds)
  done (took 29.213950183 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.398810003 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.399814948 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.398589095 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39877585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.399018758 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401702549 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398583507 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399428656 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398687222 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399471818 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397843748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.398788562 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397854783 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397938662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400455532 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396407602 seconds)
  done (took 23.631132493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.398782136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.399625469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.398716695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.400726517 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.397733189 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.399272002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.401036962 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.40029825 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.400242237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.400913203 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.400025101 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.400564346 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.400349933 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.401038289 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.399988085 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.40086606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400216256 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.399987736 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.400351958 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.399833456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.401278194 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.407962982 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.402091495 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401130479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.401884206 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.402383851 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.400828136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.401708345 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.400677907 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.399867818 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.400376962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.401872822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.402026473 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.400880308 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.401228117 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.400853628 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.406711635 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.403124029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.403118372 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.40288133 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400978364 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.402179635 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.402614048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401296841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.40185627 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.403235704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.402435812 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.402013762 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.401180555 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.401238314 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.401027812 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.403978118 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.4018518 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.403072626 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.40280206 seconds)
  done (took 78.325629958 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402957736 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.402967165 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.404202518 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.403911768 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.403939216 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.403239965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402171533 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.405293578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.403340118 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.403987546 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.403473654 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.405330803 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405400994 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.404832696 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.405047248 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.402947609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.403975324 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.403081355 seconds)
  done (took 26.521613119 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.405809636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.404795331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.40601015 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.404556963 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.403064734 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405722055 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.403456613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.403230886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403478194 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.404920486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.404466238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.40502881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404726816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.40527521 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.40483046 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404292543 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.404196372 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404696295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.404955197 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.405674632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.405623648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.405756277 seconds)
  done (took 32.157734235 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.395507138 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.394108217 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.396455723 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.419496152 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.413662729 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.396128097 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.395736916 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.397353533 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.425362122 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.450161924 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.444124424 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.413383993 seconds)
  done (took 18.195366744 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407483522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408437693 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.408306811 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404975381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40760763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405976417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40550408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407362417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406873458 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407999649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406104715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406260041 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40784921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407722309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407759604 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407707293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407250811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406281484 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407886226 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40843022 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408886842 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408708188 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408062226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408745832 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408829363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408757985 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409096925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408811064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409792474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407803884 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407841108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408946975 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408489376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40851822 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410474404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409950804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408576957 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409649579 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409426227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407714766 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409794849 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408303877 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408653852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41027424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410275078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409157408 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409025198 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408428334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410125408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410431592 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412333439 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408117052 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411084259 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411117852 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410448354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410557446 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411429833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411764931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413506215 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411256069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410520989 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410368107 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410970697 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412320589 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411325071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411478443 seconds)
  done (took 94.252018433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409917281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411179033 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41100904 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411784907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41297144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411622386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411649554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41200805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410992487 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410724925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412955656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411135941 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411502678 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411710735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41184518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412684952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413566488 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415234996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412542056 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411926126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412404259 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412785802 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412651148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41180544 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413498114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413355847 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413682634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413966818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413025148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414628984 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413054551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413531079 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414246323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.41480645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413918557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415507796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412458456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413616773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413353402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414757841 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414683808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412638996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414564519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413930151 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415842964 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413197306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41493824 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415979713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415450666 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414228583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415826552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414488602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416194267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414658176 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414408494 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413889294 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414884463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413742139 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415796939 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41523765 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415746723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415828437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415800222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416643276 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415949542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416957491 seconds)
  done (took 94.565774044 seconds)
done (took 1905.834658981 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.627665641 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.591539469 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.403907648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.397331951 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.404493336 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.408490354 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.398019049 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.408601471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.405334715 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.406348321 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.405137622 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.665192899 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.427150827 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.405632658 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.406873318 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.559324548 seconds)
  done (took 28.583179608 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.443170392 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.42264362 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.552501194 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.413216932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.443745744 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.663285464 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.482851556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.413124322 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.613316958 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.43863455 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.388286318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.441819592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411135383 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.384058894 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.435283355 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.66278568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.754910663 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.396246199 seconds)
  done (took 31.024514431 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.970965232 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.385399359 seconds)
  done (took 5.621306941 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.435224339 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.411333732 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.415525396 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.408950398 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.381342069 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.380490285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.411414748 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.385907454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.381709225 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.576886279 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.420087359 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.434576701 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.410706348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.413474297 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.426037906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.474591636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.621781723 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.422555549 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.418529269 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.424860103 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.411851046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.565483432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.46529185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.422232394 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.560766352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.394937093 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.420908413 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.426987607 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.604012423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.42332988 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.41279118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.412162678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.415750285 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.383664361 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.04111731 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.391539944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.447237809 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.427465183 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.421567016 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.6194815 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.414127663 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.427185119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.384248374 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.037502884 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.574467326 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.571335992 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.388078051 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.420144419 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.417237834 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.492568294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.413872882 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.417496596 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.519532408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.325696654 seconds)
  done (took 90.403393339 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.398496066 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.389478368 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.648634508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.408391528 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.391037087 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.390835804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.391511798 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.778046147 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.435881896 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.386735213 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.811051392 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.145197305 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.393829341 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.435177406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.410347713 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.432819006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.386110133 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.385586463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.386735981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.387703702 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.064351898 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398791145 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.385863453 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.593306733 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.459238916 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067703093 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.388957422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409352474 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.40968911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.388125473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.106631437 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402292708 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.423618325 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.390858293 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.782865964 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.910281817 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872147708 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.397285996 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400752987 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.390816458 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.390691093 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073884536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901822292 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.39450729 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.388981239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.064505619 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.388520425 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.39870091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.393555144 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.744475537 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.386983428 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.392095042 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.388175899 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410707465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.388136648 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.455892471 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.423366337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065021537 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.388928578 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.387674718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411499046 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.393475246 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.396332383 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.394597036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.390852287 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893811986 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.673743288 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.395018878 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.884253088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.104295456 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.394585722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177562314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.396919888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.412972487 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.508544697 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405348404 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39034063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05954123 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.395374091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.391376585 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869950222 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.39411597 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.807721638 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.409684779 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389768629 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.086988995 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.393888776 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.451251867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.39166922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.396057418 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.391378681 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.393318382 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.809612591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.45988411 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.391380217 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.392774039 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.393017296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39121162 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.393422306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.393448287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.176731342 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.400247755 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.391708471 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.396108332 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391815468 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.398135894 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.394728199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.393493125 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.760795071 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.392684503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.399513025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395743551 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395255221 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.403696866 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.598641489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.404292962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.824353152 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.393166827 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411122532 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.399809641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392388585 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439777153 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404871108 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.395385544 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.407709039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.833888304 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.412048209 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.410645865 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.393524135 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39584112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393187779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.398397799 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.426545233 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.39672517 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.328672522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422622318 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.42490976 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.39424769 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.403529807 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.394096205 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.397695057 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.396547983 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789833051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.788065996 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.579712406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.395457132 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.395191596 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.327943379 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.441153586 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.660719774 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416325358 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395599399 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.788816302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.5715657 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.39852072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.396473113 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.397894732 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.759457749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.395202211 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805847029 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.13998505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.401292092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.40066387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.324167689 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.237920619 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.396234395 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.397667958 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.806863499 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.417130558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.395348389 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.395859138 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.398165647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.395575303 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.401461107 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.404791699 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.398500186 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.396488758 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473696551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.677929715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.416886952 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399863837 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067724115 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403932023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398962466 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.405044664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.40029853 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.397335723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430442656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.397190872 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.426303792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.399354974 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.408484906 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13754263 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399519171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.400156332 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.681759811 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.275492714 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.404340036 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.398775221 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398451228 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.431737863 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097698737 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.461079792 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.828192049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.405507013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.471686239 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.39821712 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421664794 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100343068 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402589253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.397532326 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.263532115 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.404872784 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.191539231 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.398825367 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.400843431 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.191026387 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.404600263 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.402818333 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.400521324 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406295661 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.79129015 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.400416003 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.424525493 seconds)
  done (took 518.109887032 seconds)
done (took 675.011112255 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398766841 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.404602987 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.4062254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.405456379 seconds)
  done (took 10.895714602 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.440151572 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.428730218 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.439255229 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.433048853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.439209344 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.428509799 seconds)
  done (took 9.889772226 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.399046624 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.407347191 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.406641096 seconds)
  done (took 8.494037266 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.718748383 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.427872567 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.902379067 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.421260204 seconds)
  done (took 9.752825412 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.442814341 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.440613852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.439815147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.44153841 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.440807591 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.443040488 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.441453763 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.440870029 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.441556081 seconds)
  done (took 14.251202126 seconds)
done (took 54.571769289 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.55898051 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.906148331 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.603782367 seconds)
    (4/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.624841679 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.784662142 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.783779418 seconds)
    (7/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.38196645 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.542622354 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.38256059 seconds)
    (10/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.712195664 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.472396525 seconds)
    (12/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.069780033 seconds)
    (13/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.544584057 seconds)
    (14/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.764035567 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.61512054 seconds)
    (16/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.400301882 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.396299139 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.608764215 seconds)
    (19/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.567726315 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.779136789 seconds)
    (21/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.382711586 seconds)
    (22/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.479782938 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.382906863 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.560363508 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.904424997 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.488349112 seconds)
    (27/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.473109743 seconds)
    (28/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.466329552 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.561337374 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.382416088 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.663950912 seconds)
    (32/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.384544571 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.641699618 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.964560298 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.53997949 seconds)
    (36/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.656327386 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.011299691 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.382356862 seconds)
    (39/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.703233072 seconds)
    (40/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.497829926 seconds)
    (41/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.703142208 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.593102447 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.751599278 seconds)
    (44/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.39288341 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.591299564 seconds)
    (46/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.467249083 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.598757705 seconds)
    (48/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.688195545 seconds)
    (49/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.434290352 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.384244602 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.830266963 seconds)
    (52/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.391901512 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.606213401 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.592783691 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.651942611 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.590404897 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.645585378 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.445999942 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.400189787 seconds)
    (60/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.543275999 seconds)
    (61/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.659321901 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.823571838 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.569527452 seconds)
    (64/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.819516574 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.012751692 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.559185634 seconds)
    (67/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.45726101 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.404128416 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.55719844 seconds)
    (70/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.92788224 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.883668796 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.565117254 seconds)
    (73/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.548741009 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.472191261 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.408117331 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.65810792 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.391670198 seconds)
    (78/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.742162184 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.569485058 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.407672093 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.598322594 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.666955274 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.59601406 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.574027186 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.986609611 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.387161524 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.426175144 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.654984129 seconds)
    (89/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.613944623 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.604883415 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.472410423 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.681141646 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.398613888 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.179701972 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391850179 seconds)
    (96/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.604614526 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.61193459 seconds)
    (98/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.57731692 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.592162733 seconds)
    (100/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.410382424 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568704442 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.387722908 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.64573854 seconds)
    (104/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.823183171 seconds)
    (105/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.427701386 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.608541981 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.47917525 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.954771204 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.424152262 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.582574851 seconds)
    (111/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.90582755 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.906857988 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.647800534 seconds)
    (114/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.388190425 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.831231402 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.388336743 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.488247772 seconds)
    (118/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.577073593 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.392693093 seconds)
    (120/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.822652308 seconds)
    (121/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.599374055 seconds)
    (122/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.476251554 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.390258426 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.641931701 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.665688632 seconds)
    (126/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.716666903 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.633527908 seconds)
    (128/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.58102221 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.39093868 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.765913459 seconds)
    (131/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.453006419 seconds)
    (132/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.680058407 seconds)
    (133/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.629467127 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.486393976 seconds)
    (135/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.416231701 seconds)
    (136/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.493996548 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.684953164 seconds)
    (138/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.71873225 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.477195948 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.641980381 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.583480134 seconds)
    (142/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.743926166 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.881796491 seconds)
    (144/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.538912874 seconds)
    (145/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.713257531 seconds)
    (146/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.394250274 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.476740653 seconds)
    (148/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.508207154 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.548016406 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.599398499 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.4779297 seconds)
    (152/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.719536472 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.413690317 seconds)
    (154/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.405870188 seconds)
    (155/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.565966943 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.393461976 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.395100941 seconds)
    (158/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.398777875 seconds)
    (159/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.782775938 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.599293737 seconds)
    (161/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.50346549 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.391996915 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.942300763 seconds)
    (164/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.586186973 seconds)
    (165/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.664440918 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.000367854 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.598129693 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.392640573 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.551620147 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.483560095 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.606004087 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.183898106 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.609282508 seconds)
    (174/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.95391893 seconds)
    (175/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.674051428 seconds)
    (176/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.393963297 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.717514567 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.6059545 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.416243784 seconds)
    (180/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.827559566 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.702712195 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.756199025 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.393427475 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.459208535 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.450454698 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.883490212 seconds)
    (187/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.662086709 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.767997941 seconds)
    (189/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.488666751 seconds)
    (190/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.665191083 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.549590489 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.953444359 seconds)
  done (took 356.865929958 seconds)
done (took 358.15454983 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475759941 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.599839197 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.449760895 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.446416126 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456572027 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.414607262 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.477254545 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.447710355 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.470232004 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.469447756 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.418608121 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.457185443 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.471376981 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.462271983 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.489774992 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.446779091 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.44789732 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.458501113 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472547661 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.47273316 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449988927 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457157995 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.484463702 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.449474406 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465499838 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465114732 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.464340961 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.424517531 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.456667849 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.472618341 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.433746707 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.46256804 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.472804817 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.459402205 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453147079 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.459605024 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459215379 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.603762881 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.478736577 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.463939374 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.465555152 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.480526051 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.467872207 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.466652428 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.46010837 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.485843486 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.466274588 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.472717516 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.434220231 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.436497546 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478615402 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.470586867 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.460395348 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.43555448 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.429630682 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.473471173 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.460840725 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481062711 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.458077944 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460602358 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.491652046 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.47898151 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.47074841 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466609407 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.458978338 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.474223642 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.461458262 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.476848347 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.458316103 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461508898 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461457284 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.459149868 seconds)
done (took 114.811279077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.62795192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.418984844 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.666369795 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.459762376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.677679683 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.636154709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.459656707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.462712193 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.459023037 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.324302134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.459714185 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.461013443 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.424121531 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.460252662 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.631763509 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.460811812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.459994808 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221983396 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.461781557 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.64179125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.426937461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.46259877 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.461358459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.323638362 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.423219741 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.430417653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.642615657 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.461961609 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.221315294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.429445252 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.423562312 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.223588977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.643852965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.479916126 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.47192768 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.469904868 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.683849392 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.465114034 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.630194524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.632103496 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.668493389 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.502880429 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.43148406 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.428501837 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.464626542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.46298639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.462041088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.491844389 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.426216141 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.462642561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224986222 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.473277573 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.473699694 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462794606 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.463726987 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.483976349 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.463513551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.464035825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.642019771 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.463779018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.633295338 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.330188077 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.328060992 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.464587781 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.426634211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.464800866 seconds)
  done (took 117.649655032 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.578823886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.593525196 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.631853185 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.456425639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.548930698 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.632397178 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.453482947 seconds)
  done (took 12.196962338 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.4680774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.464446911 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.546624888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.544189174 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.46501025 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.683965399 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46472432 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.472743985 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.463613145 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.548026743 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.463862129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465627019 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.473514474 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.430060065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.547246476 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.473688589 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.630653381 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.459823976 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465660612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.671202811 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465507101 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.474560207 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.549411416 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.475301573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466592156 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.471822988 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.284219383 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467120924 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467014276 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.466351483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465673533 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.576312603 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.466837578 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.432571419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.465762022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.629043749 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.466389267 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467585927 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.468740124 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.435855495 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.467926473 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.465794149 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.478304538 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.467751521 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.46676613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.490426122 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.468550435 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.469008384 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.467411882 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.46780865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.548216711 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.468363121 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.468179019 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.467487032 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.553105112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477552278 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467999876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.470612919 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.471014017 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469639121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.671995789 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.549627645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.467869972 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.550034121 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467229527 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.470963102 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.468112601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.468880435 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.608973251 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.468544848 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.549389835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.468826029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.702914735 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.491687874 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470077375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.465997038 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.465944378 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469137661 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.433212352 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.47411448 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.468890422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.463972828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.476628557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.468864442 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.471424823 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.68867284 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.640272761 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.47255716 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.484274293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.476036024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.468599953 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.556307963 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.469924353 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.470205325 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.554208255 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.636846068 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.552914306 seconds)
  done (took 151.550256849 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.48152066 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.480892018 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.474524938 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.498751343 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.462309907 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.461240498 seconds)
  done (took 10.167648135 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.465763908 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.476325795 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.472633356 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.470797858 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.472451699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.475092119 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.472893725 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466620441 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.475119357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.47161968 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.47410184 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.472952182 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.472639642 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.473034455 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.475033662 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.472161928 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.473959643 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.474041357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.472591661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.474261217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.436383286 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.474138227 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476188697 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.465904218 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.478823041 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.474323166 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.496254377 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.474547496 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.473510423 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.480458862 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.476742258 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.472920823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.467663591 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.472745871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.482435441 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.472531318 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483269346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478909783 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.47506097 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.475521364 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.473647592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.474855706 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.474693884 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.476293389 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.465250504 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.469003286 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.479272958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.498139114 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.475513961 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.476555922 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.477545015 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.476546494 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.475086113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.478508615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.470764054 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470783401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.477848265 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.474491344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.476240239 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.468960892 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.478420406 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.478742234 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.467972847 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.481558235 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.478402736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.477164171 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.468570758 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481920362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477452196 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.476631351 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.477604728 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.477171713 seconds)
  done (took 108.487798206 seconds)
done (took 401.356102906 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.8879926 seconds)
  done (took 4.202905202 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.548038965 seconds)
  done (took 3.863867186 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.910433024 seconds)
  done (took 25.230452909 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.440832525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.446771269 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.442826843 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.445855091 seconds)
  done (took 11.089960253 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.968068984 seconds)
  done (took 4.280932862 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.465791216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.449266488 seconds)
  done (took 6.231135817 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.734676316 seconds)
  done (took 4.048904404 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.266060999 seconds)
  done (took 4.58577009 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.463187463 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.459942636 seconds)
  done (took 6.244433249 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.418941124 seconds)
  done (took 3.734693008 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.518874991 seconds)
  done (took 21.8341368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.466833807 seconds)
  done (took 3.785346027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.478835612 seconds)
  done (took 3.794436918 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.452094222 seconds)
  done (took 6.766011656 seconds)
done (took 111.013891923 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.440061687 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.442882925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.438870124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.443145459 seconds)
  done (took 11.080460721 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.596754238 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.598418137 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.598337261 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.58744677 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.578365028 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.600824518 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.511531389 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.513062241 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.573376824 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.574554558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.602895382 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.589433056 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.594298618 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.531687304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.572996538 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.601718487 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.575456069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.599657261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.513469276 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.58795682 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.48098833 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.587940827 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.573617357 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.481357999 seconds)
  done (took 38.943214568 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.030851479 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.598803521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.682941246 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.56394888 seconds)
  done (took 8.193315016 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.645881016 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.647390216 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.658101215 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.696798105 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.724813679 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.654904091 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.514397048 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.510254132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.496333507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.647399714 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.724326117 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.641617974 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.864690825 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.481821955 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.864363408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.496068949 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.480938952 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.646815772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.695630499 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.725511464 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.48171433 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.645690349 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.656090555 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.64368339 seconds)
  done (took 40.561756842 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.497359406 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.505528601 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.482667594 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.50362361 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.481463739 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.483770806 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.48497892 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.498138555 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.482286959 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.483066178 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.483968807 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.504573103 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.482819987 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.483340025 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.499357076 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.48539741 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.486714407 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.49826001 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.499821032 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.483510788 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.485047016 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.496562028 seconds)
  done (took 34.111342582 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.446673142 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.443836747 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.885001229 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.785612961 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.444953999 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.450443663 seconds)
  done (took 14.775943575 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.569320233 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.769893714 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.479198787 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90048113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.026833091 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.478051085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.475319452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.807415454 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.180720676 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.142251819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.560602923 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.566995565 seconds)
  done (took 22.277319135 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612907549 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456771075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458072218 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508116361 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4591975 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457781817 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495653323 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044358854 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486485398 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820474937 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457046458 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619129709 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.793806741 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47160215 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463126492 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.42809585 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777977563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090242132 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459418059 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458275246 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524854872 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468231889 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465460587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733694557 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460171716 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459438662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.938643105 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457463481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866983294 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824492836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830366068 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466124358 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812209639 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00374936 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635632785 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726236067 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452437702 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483158647 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.445576983 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.486225728 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47553589 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466300288 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822891165 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468807451 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460274732 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459573107 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055467738 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.492150154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.459489017 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461325285 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831989529 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628686931 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.489065334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461070574 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555188897 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460436275 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.489033836 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668358386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192779822 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46319759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4688562 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.467319901 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459804001 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499246657 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2737698 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.492698199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.491131379 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49140816 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461096485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461802859 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535049814 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463969894 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.511482989 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462424726 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412320729 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463948663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463334827 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150506779 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472888766 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.467843222 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775881765 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463459146 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464216713 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.463687317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46252858 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381442012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492770484 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.431279774 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530576758 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051532182 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.734355465 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512369206 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524552039 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768436126 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.434376187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463592053 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.464937336 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464828384 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515023035 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054945046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46507227 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.491625507 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802143904 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.764603306 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464006282 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.438082315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063066679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474080677 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.525874904 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46578081 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757667577 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.253881168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846372782 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474610913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537577929 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465673254 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44705685 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473919833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.498502499 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470980144 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850992644 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444301332 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469075432 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61719301 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468895032 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466975654 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46801161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470518004 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466227444 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.7294246 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47160201 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835646418 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.47543043 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46791872 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.469415839 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480353542 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.469820568 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771109022 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475217624 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825902302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468506854 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470613337 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469282721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.775524597 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.484961182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.499454574 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897427878 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468400905 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475605872 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842133557 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540125528 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664123699 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531989159 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.469262187 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812687633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.497279508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.499075686 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471059064 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476285706 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476392634 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.499960016 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460472243 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28884553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473722531 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480734946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470632404 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.516802381 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624834415 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503537077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.740507504 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.486142058 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461844764 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.501013293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.477402399 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78207103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83524525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.482704749 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724573006 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.062545104 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264110471 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515658451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.470640016 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.47100354 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.472042639 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471182124 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469756734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471614023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742465226 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850803444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485981563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26213955 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474640595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480810165 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.506002544 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837805911 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.509228304 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47243829 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.485264991 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477566247 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492988179 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84449077 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781414872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.519267638 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473419281 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.078048612 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501424797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474020684 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47188815 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52720517 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477454989 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144748156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902574203 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469384829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841025315 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477883675 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.523344903 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.472416779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478736576 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48562174 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.501241673 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50248869 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.745036013 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487116553 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479001205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197741487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465945565 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207233895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474842296 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.486037226 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479680272 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070235048 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474442525 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474135783 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829433967 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065848318 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473196208 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066870585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473864728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.455538096 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846373272 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794600277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47356902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.482725352 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848945735 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778859239 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531598396 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474128658 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480265961 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.442609008 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143422289 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490130483 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734264043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067728584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484889804 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476435377 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.521785487 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489464477 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996748469 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476236259 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476278931 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484163105 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489665411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147798963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48629522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476670462 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287608431 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483491022 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.077557628 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47646038 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.749928744 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848743545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.833717891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.483389054 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.505385148 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.81610783 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849292149 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482606622 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48198252 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220379282 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.429119793 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.505743294 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478423129 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45384647 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489555201 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898616158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.502681731 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484971378 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480555104 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478646132 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4777273 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.477438507 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48894402 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479275751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113296321 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.473488842 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468059591 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514060203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485021245 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.817037418 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.525028497 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27446919 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798426881 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477344709 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545786305 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.506504843 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496519704 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.448871885 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479330647 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47979607 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556374243 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783920288 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479413339 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.449934381 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523692783 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778187366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479224558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492454801 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79259241 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.48132692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.484480254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468793622 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547018025 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494140142 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48090445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477482996 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567000803 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633026798 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751821234 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.854823787 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858629788 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009185455 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493574707 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483840927 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.526128358 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643029117 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480150514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.505882417 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.487895283 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279061604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447531841 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280383281 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861302614 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489371658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483447232 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481624794 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810852903 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482941511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842872617 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482300018 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.482277739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5333218 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5002486 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500502543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78905027 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839110686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482390463 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492020459 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488277524 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.483309295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864702697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.787131101 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122513135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177291051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484772121 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48255934 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088921853 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846037754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485047855 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486524927 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484764927 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.495634536 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.500448765 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.516149085 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484664985 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815149539 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848685228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045683533 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849343551 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.515352336 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.444230722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500421666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827959408 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41488984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756684701 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289011613 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406988696 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82288034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63743511 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762371947 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.489293925 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808862496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.493078135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490117284 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487701823 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484681048 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.48747428 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848439875 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289976051 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828523725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.51216939 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.495242726 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546882114 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.759010905 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796582512 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417881561 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793136404 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869040469 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494806288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483556534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291044972 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866653225 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493291221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.514500972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798868627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49135096 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553374769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.444432284 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.487012349 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180145744 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.78929199 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537782144 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485725733 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41541393 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289607708 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.497202054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127994419 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490277569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501358588 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855542315 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.52196882 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488705652 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884994174 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.516906654 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493518275 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769770095 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.288434235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.460127297 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.503726976 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490791741 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.494872637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4924775 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540974729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48922576 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491691297 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.005169792 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490177627 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490105621 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532769007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.501554632 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488890172 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.49563712 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490113583 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.520700782 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.47696156 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.48267821 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491241728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700949821 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167130261 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49596244 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.193236305 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.917160415 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.82763269 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500456309 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.464078637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.521430693 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49106084 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490065112 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491202827 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493786954 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18804137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.503108391 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.86680492 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526529037 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.791658772 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792000785 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492258548 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766979376 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504101744 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546184609 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.462432758 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492374694 seconds)
  done (took 1048.705286502 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496808358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.533531325 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.501469286 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.563507063 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511536977 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.631605528 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.585909423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.601186925 seconds)
  done (took 21.776689481 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.479784126 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.514248844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.494894427 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.514291727 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.494003742 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.110520898 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.4949591 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.51641574 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.54423904 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.498289762 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.49630613 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.271996879 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.516482089 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.483876965 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.504168791 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.518412432 seconds)
  done (took 34.810791931 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.697230353 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.657462586 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.998980737 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.546200324 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.499052289 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.503169084 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.840004933 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.507690049 seconds)
  done (took 28.602489954 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.527317266 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.528146701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.531012009 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.531360936 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.529760594 seconds)
  done (took 9.001332712 seconds)
done (took 1314.161525811 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.52117221 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.523180706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.523710871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.523656185 seconds)
  done (took 7.444059611 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.464478758 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.464600212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.465482378 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.508291872 seconds)
  done (took 10.255910965 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.987322689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.207831108 seconds)
  done (took 5.548637086 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.495854047 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.343631477 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.325539303 seconds)
  done (took 8.518231124 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.885144612 seconds)
  done (took 3.238180079 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.050386436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.095876857 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.504762372 seconds)
  done (took 8.005046522 seconds)
done (took 44.369776772 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.489385347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.262156452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.646144039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.48621595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.655155171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.648053569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.767598798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.486425404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502115388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.494056751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.485508108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.708576489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.757817038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.258678915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.758290143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.263242134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.65483851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.486448801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.488350928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.491229297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.771016482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.486875461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.501539616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.495633069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.653935183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.637367154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.488581544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.263078217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.486888522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.501040251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.635484093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.489799227 seconds)
  done (took 86.557364594 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.498390333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.505144614 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.488967417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506763884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.506374309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.489912998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.508781669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.490041646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502649673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.48887809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.488348414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.488104667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.488751538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.490047513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.48962155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.490026281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.509340818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497591698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.488747486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509615992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.491635284 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.503925953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506902379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.498773063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.489083982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.489239169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.491380782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.490594858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.490818839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.490220509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.49204176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.510024075 seconds)
  done (took 81.22915519 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.490149132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.510441237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.490763735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509432729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490852923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.4923235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.512514685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507652614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.491307798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.509407167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497046308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.490930586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.492999145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.490566433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.492011589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.491251716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.491177684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.491568655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509160766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511569662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.495286237 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.495880587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.492486789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.49034336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492320427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.4932123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.506417751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.495443939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492970021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505812786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.492224326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.492488675 seconds)
  done (took 81.268251432 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.820681666 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.531032264 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.535123566 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.503343896 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.533362029 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.531150504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.50271721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.823316778 seconds)
  done (took 16.140835997 seconds)
done (took 266.557475088 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.502800461 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.504541115 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.559809875 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.502899356 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.57053156 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.558375405 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.812981106 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.55857117 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.798993782 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.51734407 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.549148813 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.520214686 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.515867206 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.727734721 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.496414943 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.504476931 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.496368289 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.494766199 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.506019375 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.836221981 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.561395762 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.509478056 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.505186239 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.509033586 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.473568462 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.606226602 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.608883225 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.753504478 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.705912672 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.606058843 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.496602676 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.506752499 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.517606115 seconds)
  done (took 71.256475145 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.524109596 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.538900093 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.535920105 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.533750346 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.535096746 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.534731267 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.524509088 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.534269127 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.535468092 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.536410671 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.534940442 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.535092906 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.537883135 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.535518797 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.534258092 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.508480024 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.524593804 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.536226429 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.523721766 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.507599256 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.542379935 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.536618937 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.535849915 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.538074011 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.536317991 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.536214557 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.537028696 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.535936519 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.535973465 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.535616226 seconds)
  done (took 47.345631105 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.535867724 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.513579765 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.497928124 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.540342944 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.525334541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.531808131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.918070727 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.542141637 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.532409813 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.533708721 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.499461908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.539710183 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.596735381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.500414822 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.532633584 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.537382861 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.538728284 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.529333094 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.499051869 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.553248217 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.924834087 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.537996068 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.913099843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.552345448 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.5333526 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.530099952 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.541792081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.510421053 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.532254835 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.500401762 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.480597847 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.90717409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.502283217 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.502463966 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.482131352 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.54781261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.539327313 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.505236594 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.53280707 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.527446612 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.910290687 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.532796454 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.505679737 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.521005569 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.530377571 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.540433948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.499808669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.504629814 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.826372893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.543261193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.502941471 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.534879401 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.542217206 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.535006721 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.829016036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.53487514 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.532959534 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.502804023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.544314748 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.902846165 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.541772666 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.533270048 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.504064169 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.55290816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.522607309 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.535641439 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.554397525 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.533747274 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.508394119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.534833026 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.503846613 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.532870137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.542063974 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.505308183 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.522439551 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.505140144 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.535562588 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.504361204 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.504902544 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.903420959 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.54008544 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.504175426 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.928254354 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.539230931 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.546173714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.54904873 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.542244163 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.691676574 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904218267 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.509575554 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.50522982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.526495094 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.91322898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.549310705 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.536147718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.5064313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.544215644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.542565085 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.507489115 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.506389185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.536989097 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.556393449 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.506821084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.560561158 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.911159583 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.548816298 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.505460157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.536831534 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.66311987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.544869148 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.556635449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.542869383 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.927317643 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.539798811 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.545755923 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.525380288 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.523383596 seconds)
  done (took 223.654681303 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.526473443 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.509275655 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.508752336 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.527613812 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.507159255 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.539198315 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.508794729 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.513180692 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.53683356 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.508694297 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.510903795 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.540443516 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.539621763 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.506429973 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.514688774 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.510146087 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.508863522 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.517688388 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.511571827 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.509801211 seconds)
  done (took 47.729651935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.545583835 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.253278996 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.224399904 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.547562229 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.548235498 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.538159287 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.611915872 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.550294559 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.548827334 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.940184153 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.758822404 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.548828102 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.548025765 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.548337397 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.224266717 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.520616344 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.937265765 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.256479543 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.548963314 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.256583257 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.51997534 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.548671867 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.537063547 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.254880666 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.946769348 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.908094528 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615916033 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.260714788 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.54948419 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.550616737 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.255999383 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.550913283 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.538705586 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.242263489 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.549446197 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.571960234 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.550143213 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.617390591 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.617164026 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.940079741 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.263165239 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.927498392 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.575669434 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780789582 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.550623721 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.521614097 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.283315078 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.553679347 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.524233773 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.551045772 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.563106593 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.239590802 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.542328323 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.25293817 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.556122605 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.553384128 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.259531467 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.240897952 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.240575635 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.770118323 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.543644272 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.913360351 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.554589099 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.274628988 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.550346521 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.550695448 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.551666661 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.763702982 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.26289649 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914054504 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.940992846 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.942741881 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.550828286 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626687374 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.552633264 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.941189379 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.626931749 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.039707075 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.944915411 seconds)
  done (took 142.757858877 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.910133614 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.683065633 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.066296419 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.279714551 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.196658667 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.742788521 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.684956795 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.865570195 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.530954949 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.708559098 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.413894323 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.657988282 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.421298896 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.634342049 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.672768025 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.735245313 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.075578815 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.527433971 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.347098329 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.382666818 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.526959957 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.717995703 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.400485146 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.009419773 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.517144743 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.406159401 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.526378739 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.218965135 seconds)
  done (took 60.23918363 seconds)
done (took 594.350491163 seconds)
SAVING RESULT...
DONE!
