cset: moving following pidspec: 15652
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.308449698 seconds)
loading group "string"... done (took 0.560122764 seconds)
loading group "linalg"... done (took 8.879419024 seconds)
loading group "parallel"... done (took 0.180556271 seconds)
loading group "find"... done (took 2.512901186 seconds)
loading group "tuple"... done (took 1.960093599 seconds)
loading group "dates"... done (took 1.383358177 seconds)
loading group "micro"... done (took 0.644005778 seconds)
loading group "io"... done (took 0.709235092 seconds)
loading group "scalar"... done (took 47.888328329 seconds)
loading group "sparse"... done (took 13.561086434 seconds)
loading group "broadcast"... done (took 1.300850688 seconds)
loading group "union"... done (took 2.581793816 seconds)
loading group "simd"... done (took 3.035579036 seconds)
loading group "random"... done (took 11.666996062 seconds)
loading group "problem"... done (took 2.277631185 seconds)
loading group "array"... done (took 23.525481907 seconds)
loading group "misc"... done (took 1.693299477 seconds)
loading group "sort"... done (took 3.739655511 seconds)
loading group "collection"... done (took 17.900923714 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.887588778 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.18116368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241885648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.682858065 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.290783905 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.207349063 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.205293075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.178719235 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.700422938 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214816214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.19680715 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408871686 seconds)
done (took 7.26283503 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.490516078 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093397352 seconds)
    (2/2) benchmarking "String"...
    done (took 0.209668911 seconds)
  done (took 1.02854525 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.106399005 seconds)
    (2/2) benchmarking "String"...
    done (took 0.143957063 seconds)
  done (took 0.970690267 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.136530909 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188403777 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150292297 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133311366 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.151349693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.150458309 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135024713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149256271 seconds)
  done (took 1.778364413 seconds)
done (took 5.125554933 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522331087 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.984945293 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.604298773 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.200648561 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.349674355 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.345493934 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320135054 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.275665851 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134782293 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113090359 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.208463451 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.489886319 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.467432975 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.995908069 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098902661 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.215505477 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.170143634 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.893331896 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.125124431 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15551398 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535906766 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.238246847 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.161492184 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135970084 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.246933356 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.171559317 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170175341 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.149596886 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.797210456 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180536156 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236801691 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126727218 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168640509 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.208361553 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.281943815 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15587038 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.804917301 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246639046 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125350647 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.145896277 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.807675683 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.169716764 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.238250688 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.150100512 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114826403 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19561887 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.141876701 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.121775192 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15576024 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.146282918 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223098971 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.526151335 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.152198195 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.230541887 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.154892183 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.823076314 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.142524478 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.33355345 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1830649 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151077941 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124237167 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.148028391 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.212359616 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.141834726 seconds)
  done (took 23.498770619 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.206117202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.225630229 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.141984675 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.186644825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.188275408 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.1426298 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.134336217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.1395491 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157721384 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.243512461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.187045085 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.232058839 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.125179536 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.153744761 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.19696981 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.280563611 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.169339551 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150195845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.152406042 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.139433513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.188111212 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.15583937 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.14103686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.15690878 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.215919915 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.25055784 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155334418 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169829837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.14951161 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.143126371 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189000221 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.208877679 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.121668475 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.150165464 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.236910643 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.153116608 seconds)
  done (took 7.084644284 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.265173246 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147497876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.272611273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233753399 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.191702171 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.228334553 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224733397 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319445231 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.314460659 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.208337177 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.174010606 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.159862578 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125557866 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.142747482 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.124287733 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.892570906 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.221184272 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.186774589 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.217310595 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161405581 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.142948206 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.771936781 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.131771785 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.145671108 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138834554 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.111384555 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.251956552 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13742823 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.526527989 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.146836829 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140010472 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177809483 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.255555612 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.167928757 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.182847274 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155837904 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.130625479 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.253867478 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163550616 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.123405987 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.141136942 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175671431 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.162301226 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.153156836 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166726229 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178145559 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.13185734 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170499125 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.238946098 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.243151381 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.20027477 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148867674 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325688204 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.173838167 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144893915 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.155125173 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 3.007676674 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168337608 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.208720327 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146196664 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125232266 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159505269 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.125236387 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.867736253 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152192468 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.238887152 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.129251562 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.207870079 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130256159 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158876139 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.163546845 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14708281 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132384362 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.169603272 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.130670946 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141962606 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.130615912 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.144483946 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.133460058 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.161935466 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.130655093 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148332341 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.141593006 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.195066566 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.145816448 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.168022484 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171590186 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.135655868 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.147636092 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174544263 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129805683 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.151897947 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.222140888 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141155031 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.164826127 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160117778 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.19105572 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.133449443 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.146583305 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.350061066 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.128581225 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.184479465 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146075139 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160422356 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.163043219 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12659927 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150016143 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.141217469 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12890473 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206089685 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.132956153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.142448352 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.135322725 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.156170558 seconds)
  done (took 33.560445293 seconds)
done (took 64.865365003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.467348885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110239437 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129498521 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110737895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130107397 seconds)
  done (took 1.746904407 seconds)
done (took 2.527402682 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.236805881 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.339388898 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.250262132 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.151649102 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217129077 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216493242 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.203282065 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21520509 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.22151553 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.237044599 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.128906406 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.240100714 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.230626674 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.217684456 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.128616774 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.251017116 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.213161394 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.200396154 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.254043269 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152620944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.163777391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153513377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167468364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134122991 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166976541 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150789357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.170714446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.150233629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.160017346 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134153862 seconds)
  done (took 2.496751507 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.193919282 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14794933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.160166597 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.141437469 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164408686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13444929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145663006 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165481798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.171361735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149709471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.160950845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135808331 seconds)
  done (took 2.467927101 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.123698342 seconds)
done (took 10.253376286 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.187120304 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.068064941 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198516515 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.281714176 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.379609935 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.310571338 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.667527414 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.24471876 seconds)
  done (took 16.264087424 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.163128147 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.208242193 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143277786 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.159591663 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144511114 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.161119581 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.1424978 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158648386 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.144947623 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.159033073 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.144481921 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.159725829 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.143393653 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.161879105 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.138921856 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.163436985 seconds)
  done (took 3.345087039 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.186484329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.185114741 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147137216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.168614668 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143508542 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.167838033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.151809179 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.166437576 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.142684275 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.162271264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.151139052 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.165626788 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.163577575 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.1469374 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.164888566 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.167506636 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161162254 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.147314543 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.183599675 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148478309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.166565175 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.145871693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.164553677 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.148203762 seconds)
  done (took 4.708017758 seconds)
done (took 25.110922905 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195622292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152140087 seconds)
  done (took 1.148707178 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.201074871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.220642653 seconds)
  done (took 1.230585258 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162300457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.156992031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.171506586 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.172981703 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.140582053 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.158920838 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.183677617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142017501 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.157925809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.141546701 seconds)
  done (took 2.401407888 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.144519007 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.161559861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.156392863 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.208337038 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.149172112 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.162992654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.143657026 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.16189 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.162495385 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.141021285 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.162918413 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.160742088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162839144 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.159268578 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.164378584 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.144425768 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.167923099 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.144330085 seconds)
  done (took 3.673163046 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.140844517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.140826637 seconds)
  done (took 1.095996286 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145250943 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156860799 seconds)
    (3/7) benchmarking "month"...
    done (took 0.142968809 seconds)
    (4/7) benchmarking "year"...
    done (took 0.159999047 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141561367 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.158851904 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.140797304 seconds)
  done (took 1.861993344 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.59616373 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276978797 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.405771712 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10577211 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.158026171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373974582 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158471828 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107785564 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106692199 seconds)
  done (took 3.13530715 seconds)
done (took 15.354928934 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141950872 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.288095016 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.693303247 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.182780017 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.139748148 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.219705872 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.349799789 seconds)
done (took 2.838483512 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361748306 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183309204 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122002805 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14500594 seconds)
  done (took 1.630358511 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133587937 seconds)
    (2/2) benchmarking "read"...
    done (took 0.164448915 seconds)
  done (took 1.122429117 seconds)
done (took 3.578995695 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.160737689 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.158377123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145369044 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.161829657 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.145914574 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.162789346 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.142712701 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.159643974 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.144639692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.160390438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143096479 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162406756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.141606066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.163312458 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140586523 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.162358146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.143755152 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160515593 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140971139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.163101397 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.143009038 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161257168 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.144298866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162526463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.142465253 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.165169886 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.159389961 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.267049742 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161776508 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.143854257 seconds)
  done (took 5.536681516 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.14622907 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.135944732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.15945694 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.147764111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.155457828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.139725589 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.156724957 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.14050404 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.160761924 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.138021462 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.16136193 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139927989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.158870552 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.140924904 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160137752 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.143761927 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167239912 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.139193469 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.159786241 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142200206 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.163176337 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.139266034 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.158274108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.142044739 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.15910459 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.137979068 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.158836539 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.141296459 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.159954419 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140743037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.141277602 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.162862191 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.140710631 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.169034275 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.143211228 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.159708368 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.145681514 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.156409834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.140773767 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.157870565 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.13700185 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.159836457 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.139514878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165430045 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.140148968 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.159232329 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.14065825 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.161096324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.141476581 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.160824641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.139243754 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.158282977 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.143162688 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.159921803 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.145070403 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.156214069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.141714459 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.156353612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.143596193 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.139836776 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.157511999 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.136479926 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.164658439 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.140857019 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.174788638 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.164678623 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.141058161 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.141161456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.162584432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.144690466 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.163690788 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.150306125 seconds)
  done (took 11.679185251 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.143033901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139736345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159938495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141707266 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161061403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140927418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.161751085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141858682 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159455124 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14130526 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160109397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140763082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15981718 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141712225 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160110584 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142274726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.159383327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142304479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.160699626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143295108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161356482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1418026 seconds)
  done (took 4.148802162 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.290223848 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.148764169 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.211531229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.173411787 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.160433809 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.174293113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.146157203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.167301302 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.145804994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170250491 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150452931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1665943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.178274416 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153111789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.17081411 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.153261948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165389747 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.151418347 seconds)
  done (took 3.926023274 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143367673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.140053914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.162115448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141446479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.163118299 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142223602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161860737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142214384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161310947 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.14198258 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160410692 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142175063 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160774355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14189486 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160747187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142047602 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.159622813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.142850079 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140555654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161680197 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.140840815 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160745791 seconds)
  done (took 4.165364744 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159045574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163353594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163943892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166557563 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144282174 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.162969258 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.149490868 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162894178 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.149825896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.162288584 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.143902168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161926248 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.160441213 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163461918 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.149284696 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163609912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143835679 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164443816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.144391267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.16304322 seconds)
  done (took 3.996284933 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234406763 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181188614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.180849953 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169949685 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180882499 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160678254 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187848678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.159215917 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179301292 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192028818 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161348521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179506137 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168677665 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.184835795 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159300844 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188053872 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187484735 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169177519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.182049198 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160089282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191243244 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178309685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.169906662 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179673826 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161759816 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181399464 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159411194 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185665649 seconds)
  done (took 5.832782227 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.156079973 seconds)
    (2/2) benchmarking "in"...
    done (took 0.172173361 seconds)
  done (took 1.185778164 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.1461586 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145761343 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.164897226 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.144216873 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.167252204 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143517133 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165500794 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.144368428 seconds)
  done (took 2.077963267 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.203810484 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.22906195 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.169028757 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.155180278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227503162 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.219071853 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.201914154 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.149957547 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.165958465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.137184275 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222084247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.134052521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.163919029 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139485964 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.165578388 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168883208 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.147806924 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.172419761 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.152166138 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.163977067 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14909829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167164414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146837178 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.183484226 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.138837628 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.165794687 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.146917565 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.17509559 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140547831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.165213328 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.142200555 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.165385347 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.147550747 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.170040897 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.146282778 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.2285072 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171546885 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141112428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.165249086 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149079782 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.19243767 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.145232296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.165495976 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.143842803 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168395087 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.149812626 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.169922237 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.145150372 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.15746325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.13935117 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.167730827 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13912244 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.164223677 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.145109934 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.164317963 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.150946151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.166996515 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.141233323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.160967746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.13944832 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.164825011 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.139068802 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166879531 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.147049705 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166398674 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.14341314 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164281505 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.144556022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.168002509 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.145158194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.16412534 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.178744448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.146799044 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.168757983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150292576 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.166436458 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142576721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169998643 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14575366 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.164629385 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.150280354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.187454634 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147734429 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160585505 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.141368536 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.171678675 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.147892201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.168494611 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.138452732 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172717006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.147592511 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.16696788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.139299628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.16366795 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.141317412 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.168181094 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13926345 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166252915 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.14614987 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.170324103 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150424296 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164434458 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.146469254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.170383539 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15270217 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.165972851 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210886663 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143335615 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.161285454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.148107661 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169626039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.14195639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.164358261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.145950333 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.161731181 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.14418698 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.169530357 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.146878664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.167449925 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.151728931 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166978985 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.147555845 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.178186136 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.14678815 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.159932768 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.151596652 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.173887964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.147502766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.167280769 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.148594804 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.166036408 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.147063464 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.169527912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.143373469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170700688 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.143379476 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.164680579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.147435998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.171073151 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.146405699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.161438267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.144712816 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.1671399 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.147003889 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.168199811 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.146486575 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.163040635 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.138028935 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166742992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.142779679 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.168045741 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156070266 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.162562013 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.148679591 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.16392727 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.154113732 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.165215772 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.151514588 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169964631 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.15234542 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1738418 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.138572231 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.164247074 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.149722182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.168181023 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.142573927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.168422395 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.146750086 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.174110828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138943297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.172158066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.138611551 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.163536928 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.152468271 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.169168789 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.149657789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.162991537 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179650499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17859799 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151483929 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.166364521 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145430854 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.172369824 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.144356137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.172158135 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152541535 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.173178377 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.143865082 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.166211639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151627103 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.165104794 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.14835888 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166189359 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.147752448 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.160818775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.148562328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.161827632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.15027763 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.169766002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.15067761 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.173319666 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148921662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.166058128 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15443612 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.165589772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.14968768 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.161694584 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.151422887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17845272 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.153004932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.175781571 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.168517799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145069216 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.167227201 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157187447 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.16988117 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.149396721 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.167915627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.141394168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.13990571 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.174067177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.149675248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.164829759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.146796251 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169974547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168494821 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.145482118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.159349453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.153860906 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169640846 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.144349222 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166692008 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.144489603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.163843741 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154890298 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.159955606 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.144630543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.169479513 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.151843541 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.168405004 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.148771502 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.170737285 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.153498081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.170316141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.15068641 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164744065 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155886723 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.16521689 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.147492708 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.163893188 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.151565922 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.160595283 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.150719026 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.1662423 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.144903622 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.163074299 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152685408 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.173162104 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.153587967 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165849721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.153147478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.173291031 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.155607427 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164513169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.155110577 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.163635055 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.14224225 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.165956719 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139952783 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.169792052 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.143498137 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.172707996 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.146914842 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166103035 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.151567458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1702463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.145939857 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.174126892 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157036589 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.163138343 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.140952142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167012719 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146664111 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.16525628 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.143523139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.171002332 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149997775 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.173918136 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14900547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.167066078 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.147428664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.177877717 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.144663438 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.175254828 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.152208671 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1760682 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.142920129 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.174428885 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.14487799 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172520192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.141135615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.170420764 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146817343 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169201684 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.163798692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.14765474 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163660826 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.143344905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.163332712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.157872939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.16585915 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.153188335 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166659741 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.147385642 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.163928807 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145412416 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.173612231 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.146776905 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.174907717 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.151339007 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.162354165 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.143296644 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.17209863 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148540398 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.174035469 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.144214149 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.170329551 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.156148348 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.170116535 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.150304938 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.175753076 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158353308 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.174594898 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.154213395 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.161511739 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.146995928 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174103285 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.149174906 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.170482294 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.152225852 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.16254546 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.151768462 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.175292403 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.151641699 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.166875271 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.142534396 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.169448573 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.156817498 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.171527329 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.152104817 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.170319424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.150591566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.164101035 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153356932 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.174780955 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.149170645 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.173686193 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.149802569 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.172432193 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.14684095 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.174182345 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.150881477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.162480648 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.143718555 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.165899029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.155413688 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.162006147 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.154971243 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.153331999 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.168177531 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.145924702 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.154986259 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144674403 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172859063 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172645907 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.149638652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178456353 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.153466722 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.166985131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.154559319 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.173158472 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.14318825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.167478071 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1488345 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.175432225 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.148663877 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.173521018 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150118182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174889069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.151687236 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.173554472 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.155159046 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.17522731 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.144815343 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.175999406 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.152369795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.171566091 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.147596493 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167960395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.145366809 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.168032052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.15689111 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.16739475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159550596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.175453596 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.148709414 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.168256243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.156523815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168405703 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158628692 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.167011951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152267058 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.164268096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.152201757 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.169363227 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.156427434 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.167731386 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.145615793 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175023863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.154485986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175028124 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.152540207 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.178567959 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.144308434 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.164619537 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.153081617 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.168684649 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.159281778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173671806 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.147409527 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170075608 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.15280323 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.174560397 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157763218 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.166481716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.147185477 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.171696554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.151054823 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.170399742 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.144804727 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.174598041 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.150166023 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172738377 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.149645426 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.166512096 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.149372626 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.179299197 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147303788 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.167480655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.147462817 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.179054683 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.148729737 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.169034135 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.143674835 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17897241 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.152490062 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.179979311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.14629919 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.173052732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.146608867 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.175661653 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.156707358 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.169968122 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149736709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.170293443 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155608196 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177440441 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.142345546 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.170923761 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.179507673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157427701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.172095698 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.154469643 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.17011011 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158377054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177912638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.154131192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.163341232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.147246798 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.16863548 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146091832 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.152740792 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179491819 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.170214662 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.149070354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175320967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155865211 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.152840315 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.175210339 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.144164003 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180303026 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.14689801 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.177966975 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.144409635 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.167575499 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152548868 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178291108 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148361604 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.173882517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.153173738 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.175532587 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.145196536 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.170759913 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.153151598 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178453629 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.155122379 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172223646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148362093 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.176400504 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16188092 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.174590498 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.149956359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180065356 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.179410874 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.151827338 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.172194104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154970545 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.178555178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.155106875 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.178867298 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.150744448 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.170912167 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.159256983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.179550696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.161391264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.173182568 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.145606645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.176388981 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.150234677 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.16698115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.154627764 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.18045954 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.158816216 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.174376504 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.149964671 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181863559 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155851173 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174619482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.149840773 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.171905869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.155375554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.171247266 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.155069999 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.172253469 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.158198958 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.181838068 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157053422 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.183270163 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.146353318 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.180849673 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.152887808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.182207947 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.152267478 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.169013183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.14604434 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.177489679 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.158288564 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.180366651 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.155870799 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.17766966 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.156479326 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.174073463 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.153201465 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.171287844 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.158817053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.18059175 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.153609338 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.176142231 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.150830633 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175162358 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.155081173 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.180803509 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.159083986 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.174338231 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.162022419 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.182229388 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.151240112 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.172256752 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.152084144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.178244105 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.153142868 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.179445166 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149029147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.169554871 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158379707 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.181817604 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151902068 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.182722607 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.159514768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.172726294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.15568146 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.182763186 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.15642904 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.17687347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153576303 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.178901311 seconds)
  done (took 96.775562524 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.201071519 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18390488 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.155068462 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17842199 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171938135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179594067 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.155140538 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.180081978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.156118526 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188841542 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1552541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178201781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169781716 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198795601 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194662115 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.166214782 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177932543 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155747599 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.178125864 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156104697 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.19406546 seconds)
  done (took 4.628742873 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.157364983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.153752583 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.179280829 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154549751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178464174 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.155435757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17922335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15506064 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.177717502 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15465151 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178289851 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156409904 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.177845311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154719814 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177474174 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157047276 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.177034105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157622349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.155067275 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.178528429 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155210729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.179226143 seconds)
  done (took 4.605685821 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181314258 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.159361536 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.177431642 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15648638 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.180619966 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.154688666 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.183800957 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.154573707 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.18803278 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.150953763 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.170839113 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.151106995 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.177248588 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.156331542 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.173058948 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.156399707 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.189785377 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157970647 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.184671529 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.156156589 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.170779958 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.155791808 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.179374067 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.147116404 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.183442532 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.160875137 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.181385985 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.15921459 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.169284446 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.159300774 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.179281038 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.150893629 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.169428948 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.149583337 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.168683182 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.160615187 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.180537623 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.157764545 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.155758634 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.171981717 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.156832374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.183155414 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.147134493 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.180747217 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.156032132 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.174042663 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.159860762 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.18076307 seconds)
  done (took 8.970258578 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186151396 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.218057408 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.159539562 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.211476263 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.195135708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.167897119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.184778036 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.186610322 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.183578233 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.160235879 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.196329784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.193775689 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163744845 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.186424684 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.160189435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183869681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.163649163 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183676988 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.165624205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.183468582 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.164826686 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.186713827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.169047404 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.193391562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.184740462 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.161481707 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181624982 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.164997379 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.19243753 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.165534737 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.186892132 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.16519447 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.194710235 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.162025981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183817509 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.161421155 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.196884115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.183609801 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163404298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.180405203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.163426159 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185866164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.164162775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.195181733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.162075917 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.186886265 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.161516908 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.183109947 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.169501443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.186243376 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.190088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.173259742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187217523 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.163842204 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.186970354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.171332821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.185567592 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.161382743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.187516025 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.167998458 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.184053223 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162923302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.193760115 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183600164 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.168321335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193877308 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.163660407 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.187716119 seconds)
  done (took 13.20249251 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.192749092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.188608831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17324745 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.196649239 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165330312 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.189431212 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.164799728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.189707783 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.186282418 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.172192777 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18841104 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297213353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.168214059 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.194441137 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164545924 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.19211165 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165259842 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190094914 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.164898623 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189554691 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.187648234 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.430947748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.188141034 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.17340578 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.201050706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.161685854 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.189707364 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.164962946 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.198037055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.18941431 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.178070968 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.189248856 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.166006026 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.198220807 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.198607938 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.166701925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.183464182 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16611847 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.189171751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.165410141 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.183673077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174610472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.189597993 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.162647848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190123828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164923766 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.197501162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.20023503 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.171664637 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194038502 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166728045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197302953 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165593543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.191620456 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.195635912 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.181909585 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.197201055 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.174256098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192645028 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.196089321 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174358275 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.204888974 seconds)
  done (took 12.669292024 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163830051 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159975092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.186277459 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15996713 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.187258729 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161135016 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.18573109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.16089539 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.186037414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.16159527 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.185727738 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.162076616 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184394119 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161651841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.183947484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161403974 seconds)
  done (took 3.73713899 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.181042925 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.201059856 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.261368293 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.164108299 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.187221224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16891303 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.18619756 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.164262369 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.183395947 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.167278325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.188862843 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165483055 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.20241771 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.163291924 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.185254773 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.16479889 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183207655 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166737614 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.185195896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.262135779 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.168386496 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.187948062 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.165034604 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.190753587 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.163543353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.190297733 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.170034681 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.18463109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.163679613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185992087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.163366864 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.191300584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.161072159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.189579834 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.164413855 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.18627257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.163054743 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.186680234 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.165624064 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.186243795 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.16486482 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.187377599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.162754984 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.188416627 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.16108473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1868005 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.161202273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.191717746 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.163414985 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.188061973 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.162646731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.191323352 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.165898192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.193655213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.169369373 seconds)
  done (took 10.891256563 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174521355 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187084964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.175272917 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.184796265 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164716965 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.187058704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.164986833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.187388424 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16578009 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.183418087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16559976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.18719657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165360413 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.18735057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165833728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.18749144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161381974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.186720882 seconds)
  done (took 4.179318194 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162287397 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.159419853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.185961288 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.160342457 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.186038741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.160936317 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.185290811 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.160075872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.185141839 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162482743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184490221 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.161217917 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.185403465 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.161509016 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.183643744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162032546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.185685065 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.162494267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.160278273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.185866093 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.16277014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.186170811 seconds)
  done (took 4.784816492 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.175352536 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.261194877 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.191516463 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.269257215 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.162194159 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.182752919 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.170438434 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.185585611 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.176460219 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.185346684 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.159249721 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.184021306 seconds)
  done (took 3.303724657 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190740597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.223644711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.163860014 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190057409 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172899222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192315377 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16765463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193217447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174596784 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203481183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191841085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176120092 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199791607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176927248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197806998 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195450273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170468745 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19246393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165078744 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206812263 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167740744 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200674332 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166669519 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193326051 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191565631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176921031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199858586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179276988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192391993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176116251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198433963 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19091967 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17774928 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203346738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164301341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202399621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168390618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208018352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195929035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177271216 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189100932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172564263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201257506 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197513175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177323107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192163403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174275793 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192033358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16826176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214119128 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196101613 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177853552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197281163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177167362 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201305767 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212844036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.180842689 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20121644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172900269 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203275081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.2009567 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173344669 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201239836 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203014853 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17553091 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199704725 seconds)
  done (took 13.441993637 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203359101 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189251161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168815811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205657787 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176281425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193679796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19342746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170823748 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19194033 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166450286 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.236345907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169318319 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202566821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200608192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170200764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193700051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170122332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201883843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165738814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214499204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193502191 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180214188 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20161684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177102898 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.205144732 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197338293 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170416783 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193689575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170864745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19389833 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174768174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193927874 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.177474803 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.190974494 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177116518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195395587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192509886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176096067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192944927 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175889267 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20216202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183978004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195074388 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193548984 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182945401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193319206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170680434 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191746101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171181754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192208102 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180837941 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.205739571 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206785933 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179929445 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195587093 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170491234 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194665885 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169801831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195463474 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197475112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180536505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193998972 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190772444 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195185855 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169282491 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204766751 seconds)
  done (took 13.444963148 seconds)
done (took 238.006199258 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.311616722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.342603972 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156861218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.581925048 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.156263097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.89520923 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.775802076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.246669077 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.182753966 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.156166786 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.181906791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.176377876 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.07547545 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.155187472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.182321579 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.173223564 seconds)
  done (took 32.763173725 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.347233332 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.395534586 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.171939742 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.186700417 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.162451803 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188724627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158939764 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.189867301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.161587797 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.193068057 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.161158552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.183264925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.190739689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.160438838 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.186056271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.16391868 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.190717689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.162671733 seconds)
  done (took 4.583922509 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.182453998 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.319989574 seconds)
  done (took 1.535359908 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.194397974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.284212888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387071987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.236652301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.183204721 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.204729875 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.236443406 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.17555333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.27711862 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.200743264 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.176284219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.184620894 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.188464189 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.192651244 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177549463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.186499554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.190346691 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.20368058 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.176037679 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.189538 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.211421718 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.16442908 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.19150878 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178304098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.269383558 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.197883264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.167649741 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.18699417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.165716254 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.200245017 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.171770237 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.203670453 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.173899069 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242224587 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.19103372 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.241073394 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.166967043 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.189358228 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.176087616 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.189485548 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.164653061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.191807631 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.196991182 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161981213 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.184756106 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.168150502 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.184738507 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.164892268 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.195889715 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.165536134 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.196215804 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.169368675 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.240593793 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.191387186 seconds)
  done (took 11.731537509 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.008115557 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.20907114 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188752774 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.144280289 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.209492981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176425927 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.02858897 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187938983 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319548876 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.088808431 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.20790039 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.171538992 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.336844021 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.350487237 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.350356355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.42422762 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.857435851 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.202971901 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192914057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.234461938 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.19365633 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180384181 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.205039761 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.513019498 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.162157422 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.187846514 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.168094141 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196280826 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246463813 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.162824825 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.193112406 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26847164 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.366124561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.279088353 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189998672 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.162214133 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.188207103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.254835618 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.338376339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28677257 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.260565118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184392024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163941658 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192528184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.179484696 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.185606773 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250304735 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.260752432 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25984694 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167361995 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.198447722 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169965678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.192819841 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.247467363 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.160640469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.456590115 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.432546834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.188128183 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169815938 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.202072065 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.339086206 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.19126706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30737107 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209422371 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283636348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.162575353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.893814989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.255523416 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163654959 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.193633841 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.168981125 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195294946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166778192 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.2499637 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.492012427 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16879842 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195375893 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187367193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.304764035 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.165111849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.186605992 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248921388 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.165163531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.194541778 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171912713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195961441 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.261299499 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.344026989 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.17020712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195798363 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169720604 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201368764 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.163558928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298510167 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.327088242 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.247004943 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.299078186 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169043354 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.252315954 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.254955745 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195163784 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.258568426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.169067449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201982528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168157487 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.322924654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.226744197 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167310103 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.194385892 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.170948345 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.229903467 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.187337859 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.197358197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.258093785 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553452852 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.256019987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.185715097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.170129037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195705194 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.221892672 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19604141 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329630814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197053619 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.257122571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169619335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.189205136 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.169751754 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.25172831 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199036204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.195692832 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170231774 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199897976 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.348238557 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.292389346 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.172531926 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.346720767 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.263444604 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.172303755 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26417696 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.194859696 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254360279 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.175424822 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192626102 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167098204 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.878731436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201688078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.194676153 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.172230701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.276362309 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164559264 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.19412287 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164185194 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188887916 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.900241993 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192930191 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.163180179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.192466654 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.172103659 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.19496774 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.170235335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19661341 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.252659922 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.318108609 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199879259 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.170236592 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.191301562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.250220437 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.166648985 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.191411142 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16484303 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.192186451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.171595844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.197964699 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.168211544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.258529454 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.247941935 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.328911658 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653473322 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.165088662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192924044 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31312655 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.192864889 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396347678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197721582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.308018569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253914901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187569802 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.432788136 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.257420933 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.276170733 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.170452752 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.261413829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189027389 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.171655977 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250978634 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.190520596 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.17311971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.2467121 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.20078489 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.172275259 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.369242346 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.165532293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316529916 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.190358635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.259497454 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1675931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19712381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.401630473 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192064019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177888682 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.250227002 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.195276229 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.168151271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.953942816 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.193240774 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174007812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.197896115 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.307588137 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.25355857 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.19802595 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173427291 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.201491056 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.252472539 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.298877322 seconds)
  done (took 63.137010371 seconds)
done (took 114.772544123 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327213328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25934052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.402607063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242348626 seconds)
  done (took 2.35873221 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.341577375 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.216577262 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.30077079 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190090304 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.308206302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.163207207 seconds)
  done (took 2.600501362 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236493621 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236109355 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23447891 seconds)
  done (took 1.789549146 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275064168 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276738823 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420176197 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.333620008 seconds)
  done (took 2.449158793 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340522423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182078881 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.222943574 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292807766 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.31031935 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276600607 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.188077828 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.242459463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.223565091 seconds)
  done (took 3.396735088 seconds)
done (took 13.678110325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.214783598 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.222960895 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.185888234 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.206705196 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.197803436 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.226831918 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.193534737 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.221996666 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.192734495 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.207616136 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.191435587 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.203367761 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.284402367 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.194018596 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.205019437 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.192008495 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.205202072 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.201589113 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.222910749 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.202211608 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.198364471 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.202588751 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179083806 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.208332219 seconds)
  done (took 6.040321049 seconds)
done (took 7.127015524 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.266556941 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.182098017 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176303845 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.204012675 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.277627204 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182641941 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219010252 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176018193 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.237241132 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176945057 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.192328787 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188709402 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.202816294 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.274311698 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.179635623 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.195023264 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166950979 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.214831998 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.190614533 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.219400316 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.27783121 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168408566 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214726397 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.168165519 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.279843128 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19414033 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.177253127 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.20338585 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.191554597 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.202408491 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.178715044 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.19355101 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.193195447 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219550055 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16779962 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.204721355 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166982407 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.135218452 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.204057164 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.177156955 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.216829808 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176180853 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.20410312 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.167576128 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.205532351 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175404079 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195188648 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178916746 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.192978241 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.203304554 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170837087 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.217646741 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.177876461 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.192395136 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.166706884 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.193593893 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.188833929 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191823346 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.191548241 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.193346095 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.170107176 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194503365 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.180539299 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191607187 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.177655413 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.19314579 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.177944835 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.203873132 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.177268631 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195012578 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167984001 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.2011679 seconds)
done (took 15.168787735 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.172775183 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237163259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.278409496 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254206768 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.224625003 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.212382664 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.181761801 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.218457947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.18030568 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.211453705 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.201239278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.227045562 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.285331675 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.183600931 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.212672715 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178520257 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20641745 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.201377703 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.257168806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.220628755 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.217016424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.185206163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.220526367 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.185977212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.19936411 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.20372891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.203102713 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178742282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.200314858 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.180062702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.220861536 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.171721488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.201541761 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.215971877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.19071671 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.208122485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.184938183 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.207891729 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173009501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.199329537 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.178965007 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.215106893 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.17166352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.212289845 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.179945159 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.214447521 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177443794 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.211640809 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.171310192 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.20725359 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.171722675 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.223558038 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.21018406 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.190551396 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.210149908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.184831744 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.212794728 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.185751973 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.203017926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.191439708 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.20021268 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.172204091 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.200236357 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1917424 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.204381158 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.183916754 seconds)
  done (took 14.467953572 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192022603 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229967233 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182900982 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210742232 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.177455387 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195137245 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.165630489 seconds)
  done (took 2.472934442 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.169079951 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.291894381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288623434 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.288796012 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284273091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.297789056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191370286 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196632896 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20436684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208418264 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292420775 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.318263516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179424004 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.213667604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.293486134 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168103011 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.293321727 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.272690333 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21190006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.289866959 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.186759224 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.230108592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.183871077 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.198887722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283708144 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.171428503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340311362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216751306 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.178813731 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.212036251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183950626 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.277503305 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.286822368 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211766594 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179876994 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.288273181 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.286742329 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.18282709 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.298796865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.203158796 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.287378723 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.184034576 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214010455 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1831969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.213500963 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.276840372 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.190586875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.215619039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.183400906 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.296177678 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.210318785 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28690925 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.181992207 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.2116186 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.181004023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214037135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190546717 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.21364316 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.297489576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.187379275 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.288142787 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290299486 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.28925019 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.291664463 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193070571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.290847111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.280771877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.212471921 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.288793917 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.186959668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292357429 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.212681934 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.182093897 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.281410017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215229884 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.294184826 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.264811119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211433102 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181506321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.203058853 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181420976 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.200656871 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.284327009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183703109 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211797464 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18870619 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.21462883 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.210348048 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.257553352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.223654978 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.214576728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.183465649 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.218261554 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.184488126 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215743915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.297185696 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.181327458 seconds)
  done (took 23.706919993 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174056631 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.170061919 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203998498 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.197691271 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.173452504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.197512407 seconds)
  done (took 2.265071068 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208644688 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.212739343 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1948268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.213881178 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.232913976 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.297991176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.306063432 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209514911 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.204011278 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.228502521 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.299910973 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.303253647 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.302128154 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.188937504 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304878784 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.217653166 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.307931197 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.183669865 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.223925752 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183086201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.214798823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.188169948 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212298715 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.292908756 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.185806659 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.217686969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.178844391 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.227854883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.220140145 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.181543966 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.216703604 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.187467764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.205966904 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.180502493 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.304152225 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.207431965 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181351414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.217659173 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.188179027 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.217236843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.305528587 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.183768202 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.222238247 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.187792736 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.210324092 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.177698086 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.218029192 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.205616929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.278295655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.218578005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.217998811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.188301599 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.216538849 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.190779987 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.206127679 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180711528 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.217702963 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.307046936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.189767009 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.209000041 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.18711737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.21873843 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.179752607 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.219480214 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186524628 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218156373 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.205283717 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18979271 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210592212 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.188060925 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.218423726 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.187344704 seconds)
  done (took 16.936903988 seconds)
done (took 60.948811649 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.644204546 seconds)
  done (took 2.791720861 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.287486488 seconds)
  done (took 2.437730455 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.620311913 seconds)
  done (took 20.803389454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504445782 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.420164604 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.101665023 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.247009344 seconds)
  done (took 3.425161398 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.180668715 seconds)
  done (took 2.342672068 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.477797282 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.34997558 seconds)
  done (took 1.980877526 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.842671963 seconds)
  done (took 2.010336021 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 4.495921793 seconds)
  done (took 5.654241227 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364684643 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287324875 seconds)
  done (took 1.821519622 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.684981379 seconds)
  done (took 1.8591001 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 98.189720357 seconds)
  done (took 99.363673064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322034737 seconds)
  done (took 1.489105354 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359892483 seconds)
  done (took 1.535596391 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.9593801 seconds)
  done (took 5.13879237 seconds)
done (took 153.81788767 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.189007904 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.21710156 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190751352 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.215176245 seconds)
  done (took 1.977159176 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.193315365 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.213321261 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.191920425 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.212511591 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.193585162 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.214266842 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.186107605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.216771211 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186943256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.21594436 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187197478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.213477217 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.18901398 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.213183744 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.185639249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.217531294 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.191918749 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.215335274 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.189265758 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.21547377 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.188488075 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.216649198 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.189623835 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.219859313 seconds)
  done (took 6.031886248 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182871788 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.176979559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.209552416 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17531133 seconds)
  done (took 1.925548633 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199440167 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.228675309 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.200943989 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224230609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.202322586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.230111734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.186439351 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.213016753 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.18671243 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.22862181 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.203915107 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.231165988 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.200650795 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.223290755 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.225536222 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183569922 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.189382393 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.238114358 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.222926254 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.199424592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.220161377 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.195974363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.214887522 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.199826668 seconds)
  done (took 6.234363602 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263129061 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.230067594 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214099921 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.263623677 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.245453629 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.186049916 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.24444973 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.19319873 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.221494577 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.18713071 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.217947058 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.234533037 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.221695091 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.18883812 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.217673141 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.220756913 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.196672426 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.220697827 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.228972414 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220796374 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191911626 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.228829658 seconds)
  done (took 6.027579136 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.276930467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.209554581 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.17621305 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.207604752 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.22068784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.18251008 seconds)
  done (took 2.462522014 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.178159038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.171818637 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.202787031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.172628586 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.206539114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.17429905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.202915259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.171241329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.202274256 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.172357044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.202464085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.171943304 seconds)
  done (took 3.422766611 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274468143 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221102698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35488207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.473639839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266005614 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259693429 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.383826812 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227901048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.276647889 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237383888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282885973 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231729398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25463245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288631327 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211154365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245289293 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272888193 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.3097206 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211841674 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3142445 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255820171 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277576988 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2906364 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217706456 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240125647 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261622166 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.193508127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227156959 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263264274 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23347564 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275284727 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251283002 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240031291 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257029403 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330385728 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279364087 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.395478433 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203275151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.259647963 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.296665449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.332651938 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239721755 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289743549 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222533256 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229095404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293333042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218730119 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.287691124 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.233973957 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213905484 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281802386 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280458011 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.272346924 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207171457 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.433660524 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204770453 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.242476156 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277026918 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257376304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30368771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283699065 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.222289301 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269207558 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293793226 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316313758 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.212638563 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263281245 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193275625 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265856294 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310834988 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283012944 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260786864 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.292008293 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201707214 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273826162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265720522 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253021561 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279943979 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2730834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.220147199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220220323 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234400687 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224009142 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.261411106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221133847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321549689 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20058689 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273161902 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276635807 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220286532 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261898388 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26359602 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26246054 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218062926 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.186458278 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21413561 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.260538159 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257961155 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199582014 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250712817 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207616136 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.226560864 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252798558 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.192814672 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273935743 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.193050038 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259199371 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272554632 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200588287 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283172671 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248103408 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.264595519 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237383888 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299386395 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233856345 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20172691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35403273 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242567927 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.237679666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270870408 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.300120567 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210389813 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235291374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234745703 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293900503 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245157782 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305413209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207893965 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.237240923 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.224877969 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245324004 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260653956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.262687734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197404014 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.268135913 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291764756 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.225355892 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21029001 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285386151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233704021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193835613 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23784051 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205610294 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.243878429 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.250199414 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.208654467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255883726 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26706364 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237874244 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258520934 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235057685 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273357457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202873145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.27362481 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21736577 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.220199929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.276151388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301382878 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199194953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282631122 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.259861327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277903915 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276095165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200677963 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.284630119 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196411569 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.223315689 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263617462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240565158 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263968344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292631346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277001984 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.267033888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.266373957 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219147072 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27142006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.288275275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258724731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.210946448 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276151877 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27213712 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190374768 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224960381 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.198105639 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2398606 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230587563 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209422301 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284127821 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267085012 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273308499 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272356841 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210789864 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.300523691 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.224100565 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230505849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.278979401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239277635 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.261529627 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295319119 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282391637 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24316046 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265887652 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.191481333 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226415314 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.205780009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260252369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206660149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237504085 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243317953 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294636979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239492187 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25062384 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289758984 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268582548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.307266308 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.190712171 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.264407226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268090167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24056446 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.288958184 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205555958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.261255429 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296535614 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243947572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292618705 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242503673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284796621 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296492731 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.269125565 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201460325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246352766 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262489944 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210860823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263003417 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24327493 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202994599 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252341097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.207354231 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242627222 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291287111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246292703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244928912 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.257313168 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271545984 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227084673 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213311832 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278065039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2472929 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163234096 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267418713 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292108305 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220611853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254178901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272827851 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201621938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.424539461 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285124247 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272214783 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207510327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242464772 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276181699 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228469626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261795162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.287492494 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212844036 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31346556 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276397508 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.241470791 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20172237 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252289624 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252024158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197249595 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.254429631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.266984719 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.216150671 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290985537 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239226511 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245759604 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282415452 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.249620919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.219091897 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242180447 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.333601989 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276567851 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274945787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.238662612 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.268390973 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286406812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194281969 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230298141 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.201991189 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288420197 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232482357 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24956784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268354237 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283332469 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281253154 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26633715 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244203471 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.200228534 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.271406022 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221146069 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285786133 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238581247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.24039719 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289415365 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.18647036 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233012662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232167722 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398907919 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253950589 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271686015 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.16585475 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.388730578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200902084 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236372725 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260535575 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242064231 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.236700211 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.261406496 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277391629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245619922 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260628534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209173108 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278391617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284776717 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269970295 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276916708 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.217089548 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265994719 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261835043 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242921185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250275611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.249206621 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231423842 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300819609 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.279063489 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.235084783 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244473057 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275985305 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277339178 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276139445 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211247604 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288383321 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198916636 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270968885 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241802676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196869518 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264226617 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.26683917 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235973094 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24574801 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277203407 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235290815 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201447685 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251590653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273164276 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213223064 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.236195888 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29156934 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.201746255 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289019156 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317797885 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201960808 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273331686 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246822588 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201988256 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244099686 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248162493 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20402364 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.281828367 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249964747 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.234956834 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278849566 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2696199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236788281 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2584696 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246570392 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.33926067 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.233632363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301081862 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222452939 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301312548 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25609779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283013014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243542562 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257146387 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271475374 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218825173 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.327209067 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271849444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.274222092 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204584605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249095852 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210091032 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.240074454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256957047 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242454714 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248611014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.240741578 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.242331375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250050652 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.250919478 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215243922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308483013 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255587739 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294524464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258452349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245135223 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283137541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279458233 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202638688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.270062694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278809407 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216386455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259141892 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.240014949 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.209846866 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32213887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.229969258 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234352078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283757453 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277304816 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24586702 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.240414441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286274463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212764626 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285799612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234208763 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.222745643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.278167217 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240203939 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.200312973 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279268684 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266523208 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.238402873 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.247764538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.282257192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271795457 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.230023524 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205663444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395456084 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267188586 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300598281 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190736545 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245580252 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251925122 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231211734 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272745438 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280723757 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203217881 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236737088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.249793636 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223162806 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229287886 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248568341 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289783428 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2643003 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291711536 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.210429971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.363060694 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215361535 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280735979 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.208243381 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.203990605 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24730184 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20941427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248882347 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283397561 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328148363 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268352351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.223507821 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242500461 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.200357811 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237516656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233345875 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25674061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279534849 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251740393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164174299 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212836284 seconds)
  done (took 123.436219651 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290950826 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.275098181 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.266887081 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.332894148 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292228572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.392679684 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.345943783 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.344397845 seconds)
  done (took 3.856615495 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.194586756 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.243664296 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.250301243 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.222045974 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.187091389 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.55609369 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.242776193 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.195211975 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.270794561 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228673353 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.217650303 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.654434548 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223879586 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.193696698 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.227995124 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.215027623 seconds)
  done (took 5.631326721 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.59977648 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.778615842 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.808405595 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.432194485 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.387473785 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.300285043 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.004931912 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.296974845 seconds)
  done (took 14.924142519 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248673941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.283292728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46321058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.381700145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.295410122 seconds)
  done (took 2.993479409 seconds)
done (took 180.090047209 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.201359125 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.230986357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.202105449 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.232912509 seconds)
  done (took 2.170850846 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.238246497 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.152042728 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.188338684 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.15279415 seconds)
  done (took 2.045298917 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47379782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.152155522 seconds)
  done (took 1.968729333 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.221453581 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.242815724 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.211713795 seconds)
  done (took 2.006478757 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213165166 seconds)
  done (took 1.539417198 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.196792972 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.193668343 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.31867537 seconds)
  done (took 2.036207747 seconds)
done (took 13.089357104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219278932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.0426351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.659620961 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207864422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.829372087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.473909775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.551381709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.257802336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31146817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188268634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.251524094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.768060379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.532797502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.956926366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.518116864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.960040519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.804718393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186450177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228068876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188126088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.530312339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184444824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222559656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187646139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.802582367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.492295493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221056113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.00311988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.189030533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.228464807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.478753199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.218240462 seconds)
  done (took 24.204960003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189759117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27828462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242093775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.223497974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195185365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.223747378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198894915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.233552465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.32381499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187494583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245349077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185451027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228179226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187894075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.246346899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186081903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.224870356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187479847 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229499086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189170284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.243039216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.218185706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.192973003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219878101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.188786926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.2385406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.188420678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232219614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.189497142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231048306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.195053505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220500945 seconds)
  done (took 8.291834737 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230722077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.288059117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244017344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.2614843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27485227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190415555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.312143046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.258532039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.295330643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222220368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208205038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.222175111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.263097633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190865892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.245680963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188071262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223689199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190357587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228705899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189509923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.244381217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187846164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.224980076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188584875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.221936742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206663222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.223582133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199484376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.222350203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229439442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.195019003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219864831 seconds)
  done (took 8.629559317 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204471253 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.234497627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.213666417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.243570848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199379963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.234344675 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.205439952 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.230331943 seconds)
  done (took 3.103163398 seconds)
done (took 45.557321432 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212713572 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.236460307 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.212024308 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.23593517 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279425966 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.231641677 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.20585879 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.231045442 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.202117602 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.24488994 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187884647 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.231234293 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.20816865 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.23462851 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.313788436 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.204786587 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.319655524 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.315905535 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.196213289 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.239117069 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196976166 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.319541472 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.238265913 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.196555092 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.294987023 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.191301492 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.304253076 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.235320986 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19954842 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.224022691 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.316774361 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.199574541 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.233006376 seconds)
  done (took 9.224069975 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.29710042 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.234117411 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.197545093 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.234388744 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198458966 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.766628214 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.339978848 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.196584775 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.231267956 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.196636877 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.231433132 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.318593377 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.204349729 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192992838 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.236543348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174263641 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.33698985 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.233633411 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190761758 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.156923307 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.230284661 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196906394 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.348076246 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.230105588 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.198643207 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.23246343 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.199593398 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.238099621 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201064116 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.23288129 seconds)
  done (took 8.83675906 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.20420879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.243322492 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.219919307 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.300199906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.228021245 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.246054683 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.215409027 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.245789845 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218616417 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.228040032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.208535038 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.262682287 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241530923 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.20416877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.190943415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.210550867 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.239196548 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.193629791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.232285335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.21139874 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.243175197 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.20893914 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.248670728 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.204801393 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.223392444 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200547569 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.235392224 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.203229335 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.234077532 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.207312326 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.227455251 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194873385 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.228148985 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.227524254 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.227772051 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205643818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.247614658 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.204957209 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.241200016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.224485321 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.229964997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.193051295 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.254146634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.282709903 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.195210788 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.201970516 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.229272871 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.206124257 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.225736457 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208915672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.270237647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.225253435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214582036 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.22645673 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.190115656 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.235157767 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.193043822 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228405441 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.20707773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226569454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.213555648 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.234743608 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204010231 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228951252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.205027469 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224471632 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.192620584 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228908089 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.220325644 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23410931 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.230174033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.227154794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.204855031 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239651634 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.205171342 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238546816 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.19234967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.239256124 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202878522 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.230948642 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.205166802 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.229780966 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195327353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.243116182 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.213039311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.242462606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.203691824 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.238360898 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.194064901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.228959981 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209785755 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.229689404 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195928197 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.241297724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.192687771 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.231686864 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202894935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.236659564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.190556914 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.253113542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.196017036 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.227660096 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.217851655 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.231223258 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.196561099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.237590688 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.234955017 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.22852061 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.201003703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.240794308 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.192683441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.237177996 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.195278673 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.228078445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.209733585 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.244539826 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.200486948 seconds)
  done (took 27.325638337 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.416237986 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407516697 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.297105379 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.452713435 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.24392229 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.329199195 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.406239369 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.408628569 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.193038095 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.265267741 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.286213002 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.371412594 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193987727 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.260499048 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.411353497 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.490854249 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.223578222 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.270479158 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.266631043 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205380517 seconds)
  done (took 7.788223559 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204324377 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262131589 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217072087 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.247779553 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.20497432 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242449616 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.196012706 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.251417726 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20534818 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236367628 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.1975291 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235508649 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207745971 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.243610448 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.209883394 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.245781045 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201876719 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.233609037 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217283288 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.233406497 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.167961233 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.253031688 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.203278643 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.251170976 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.212765184 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.239314302 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.19254739 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.233292237 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.202148612 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.237718847 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.198085734 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.235892148 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.20183223 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.169465614 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.241428118 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.208472949 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.23567578 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.196901017 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.23695157 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.196803099 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.244782105 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.206785164 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.238385971 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.163469601 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.247168722 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177290632 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.207394041 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.242712568 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172446649 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.249875351 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.206709177 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.24449813 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.201746745 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.251440424 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.200596669 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.247738976 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.205182936 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.24443248 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.199725468 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.228972274 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.193177289 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.232818852 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.203716548 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.243694467 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.207504949 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.238894974 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.203906517 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.230410236 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.199084324 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.233615811 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.19671887 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.243902105 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.214634207 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.240198492 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.20148002 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.240896276 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.202942567 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.160645079 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.240232015 seconds)
  done (took 18.722489711 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.22143144 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.239259476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.213720823 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262122299 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.209174923 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.235375322 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.205568459 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.250189078 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.209972301 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.249248945 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.210139781 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243762981 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.21707125 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.241354784 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.205427869 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.247175776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206207577 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.269767196 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.207015502 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.257850527 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209503597 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.236122415 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206746892 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.243823953 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.256904945 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.209041667 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.256148215 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.209464137 seconds)
  done (took 7.836800057 seconds)
done (took 81.072974436 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.630452797 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.856679889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.499811464 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.504489991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.505295121 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.52962545 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.500281984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.504989636 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.20837985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.474298093 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.500331712 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.498869584 seconds)
done (took 32.659412556 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.677916724 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.269430002 seconds)
    (2/2) benchmarking "String"...
    done (took 2.27699514 seconds)
  done (took 5.956469814 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.238962092 seconds)
    (2/2) benchmarking "String"...
    done (took 2.262221404 seconds)
  done (took 5.891472023 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.492538053 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.487359811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.98100352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.489798737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.498551178 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488776051 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.514858 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.50471083 seconds)
  done (took 18.354440883 seconds)
done (took 36.762450799 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.496201298 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 3.103187773 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 3.033845435 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.472184626 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.491069779 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.507991135 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.49039595 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.500872632 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.503157 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.473584805 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.030723111 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 3.032090883 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.489310827 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 3.21887029 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.473888893 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.50302074 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.490590179 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 3.184957179 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.490377093 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.490116306 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.486319385 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.472531668 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.517418661 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.521301417 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.5085961 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.48982877 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.475270494 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.48937082 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 3.336149869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.526666135 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.497010479 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.51264012 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.476346608 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.49358651 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.49603326 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.502852004 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 3.159710742 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.511807682 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.482510591 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.492005443 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 3.144500568 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.524953627 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.494229468 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.510684843 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.492620046 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.588281653 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.480107421 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.684438014 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.519316109 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.492836904 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.569897681 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 3.216601357 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.495367113 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.500455819 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.506956506 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 3.168455361 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.509257288 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.52539251 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.546448889 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.498325032 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.491000427 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.491580179 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.575449434 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.494765919 seconds)
  done (took 166.841814316 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.492198065 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.496159393 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.493408206 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.501826594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.493771519 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.498054257 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.493162574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.493764396 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.49650399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.525756313 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.492724948 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.493936275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.496252422 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.504626322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.503526741 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.512200399 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494521545 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.493666478 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.504228925 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.494419228 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.518068534 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.494094675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.493997875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.495010224 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.51257412 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.594459184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.531820981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.520672776 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.505214735 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.493827532 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.516263975 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.499052638 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.309669757 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.452354102 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.514738432 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.50688415 seconds)
  done (took 91.330788436 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.496550714 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.498382301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.497567533 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.537843115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.497305838 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.152783395 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.154328634 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.667006259 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.759056023 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.18820033 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882341882 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.495311729 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.593304777 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.511754602 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.496569221 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.595689508 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.523517551 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.496203114 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.497113913 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.154408811 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.51110885 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.235913031 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.692672022 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.498931324 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.535143959 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.90386033 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.495444707 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.535482759 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.849916459 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.536915483 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.497143806 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961782011 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.295873728 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.61585101 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.500333038 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.536659794 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.49976453 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.794943198 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.498747012 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.498980352 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.502118321 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.265940173 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.501246562 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.158278228 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.497539945 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.75356559 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.496788174 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.499247146 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.870281549 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.596915572 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.498893819 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.499954358 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.505209705 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.499813629 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.500246296 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.539813268 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.768727085 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.602107643 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.501195648 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.50053914 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.503831668 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.538360081 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.502081725 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.364048879 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.50105848 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 23.091861891 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.563120283 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.641451751 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.501755356 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.161509784 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.500350429 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.603921351 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.627316924 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.503045254 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.502526823 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.504370284 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.502802207 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.618744115 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.502420245 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.537225649 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.499902257 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696816823 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.504654817 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.230446553 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.608109662 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.501756334 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.951278511 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.503001674 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.501179724 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.405491578 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.604100773 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.502768544 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.503268398 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.501710308 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.49690865 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.192096565 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.910576548 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.503132905 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.502139832 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 23.431443552 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.501818493 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.590698441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.210093896 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.260325283 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.504055928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.622819634 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700982018 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.505053261 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.50423535 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.193329752 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.503857928 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.564270638 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.502793896 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.916664472 seconds)
  done (took 422.561419658 seconds)
done (took 682.12550641 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.488511981 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.489236585 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489525658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.488094959 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.491660287 seconds)
  done (took 13.851551444 seconds)
done (took 15.255461956 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.505875223 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.508583599 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.507383027 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.336394454 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.514543853 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.506771008 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.507837833 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.508821757 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.506665548 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.509319307 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.301418497 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.517719816 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.524210865 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.499842403 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.321447022 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.510702653 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.416636222 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.511128336 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.508912621 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.909666655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.516304832 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.635483814 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.890540549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.57924433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.899473111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.944456973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.516397511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.758940156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.568655693 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.552462643 seconds)
  done (took 22.179704347 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.433554924 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.944053639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.518298801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.638342348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89568471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.581610413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.925428506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947216542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.517715626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.740629517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.555640351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.551833582 seconds)
  done (took 22.225469035 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.287609968 seconds)
done (took 97.556470696 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.573067217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.650955125 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.567220943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.547121041 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.543211885 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.542123338 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.549838635 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.543532665 seconds)
  done (took 13.923954297 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.540643192 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.540924932 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.543545726 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.539425929 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.541973878 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.540995541 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.539269414 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.542113212 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.5402085 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.54245264 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.543357085 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.541204855 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.540228893 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.542419884 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.539873681 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.541109173 seconds)
  done (took 26.070280167 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.548497263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.542823568 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.541720773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.541872329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.542333072 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.541622297 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.543782069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.542740176 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.542863027 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.543620456 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.548798419 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.544018622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.544289606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.543907784 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.543578482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.548605518 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.541889999 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.543793662 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.54920287 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 2.038246344 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.652605544 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.545421524 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.543634773 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.542111186 seconds)
  done (took 39.070550942 seconds)
done (took 80.471300577 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.521585671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.524252281 seconds)
  done (took 6.456158636 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.646167365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.665634017 seconds)
  done (took 4.723872917 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.545464405 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.545857543 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.548147149 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.546235175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.545242659 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.543752526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.545346094 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.545257117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.546947695 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.545711853 seconds)
  done (took 16.869219264 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.544687771 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.546525155 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.544668634 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.550778839 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.548497403 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.543836895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.550909511 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.546048837 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.546249771 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.544238622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.5487584 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.546838533 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.544838768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.548027861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.546431568 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.54490386 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.548000342 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.546022298 seconds)
  done (took 29.252184374 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.569727337 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.57675805 seconds)
  done (took 4.559602168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.731720702 seconds)
    (2/7) benchmarking "second"...
    done (took 1.628806708 seconds)
    (3/7) benchmarking "month"...
    done (took 1.716772712 seconds)
    (4/7) benchmarking "year"...
    done (took 1.701221294 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.630202696 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.578970272 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.631571934 seconds)
  done (took 13.03126012 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.55301355 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.911842211 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.097009752 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.762135045 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.541701078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.8384576 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.49847994 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.836934501 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774304889 seconds)
  done (took 18.226526851 seconds)
done (took 94.530347821 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.516843517 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.529635437 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.548160489 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.538503605 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.91184717 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.530891882 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.521134356 seconds)
done (took 18.510366787 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.501610994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.504854423 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.506955807 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.532519324 seconds)
  done (took 11.459717189 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.515350521 seconds)
    (2/2) benchmarking "read"...
    done (took 1.92602118 seconds)
  done (took 5.856428042 seconds)
done (took 18.731139833 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.550462458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.548752184 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.54974414 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.548932025 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.548671867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.554172078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.548489651 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.552018662 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.54972626 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.550612477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.548910933 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.549755244 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.550731766 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.548608242 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.549442077 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.548896616 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.552754299 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.54974002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.549793169 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.550108571 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.552235379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.549469454 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.550152781 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.552577531 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.549724235 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.551639073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.551028801 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.556346446 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.550476635 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.554921334 seconds)
  done (took 47.936517068 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.557040459 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.552442668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.549226127 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.548469537 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.551219747 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.551364249 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.550054864 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.556740909 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.551404756 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.551955385 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.551305372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.552080121 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.552295372 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.555836535 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.551625106 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.551141454 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.555461976 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.553156166 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.551745791 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.557643887 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.551084883 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.551857328 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.552057004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.550515397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.551473689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.559634015 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.551333518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.557574675 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.554270414 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.553574794 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.5515311 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.553440909 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.554663829 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.552652262 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.553954591 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.55293882 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.561422022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.55541204 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.552647373 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.5535375 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.556178687 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.552065175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.552566706 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.561601374 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.557019716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.554216706 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.555022395 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.55812684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.555218858 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.555649849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.555717805 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.555533773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.552858502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.555560103 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.557033544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.554032115 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.556419151 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.554272718 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.553986649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.551549119 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.555902815 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.553814979 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.554264897 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.556020357 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.554917633 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.559308694 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.555998846 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.554165722 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.5537927 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.553062928 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.553957874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.556134128 seconds)
  done (took 113.316720656 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.555388503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.555589087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.555333818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.556683011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.554310223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.555695316 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.554609913 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.555644192 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.556461893 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.558123558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.555431665 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.558099602 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.558862548 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.560465476 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.558279792 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.556972713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.557929957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.561067856 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.558273018 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.559004256 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.562140269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.555786529 seconds)
  done (took 35.683460656 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.561448491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.563699337 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.5567055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.561025114 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.56601674 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.562613863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.558695698 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.564414581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.557822472 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.556970059 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.556995272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.557231126 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.565592384 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563522079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.558028224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.563922409 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.559629615 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.564487565 seconds)
  done (took 29.521300859 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.558748008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.559788224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.557132999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.558237539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.559565641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.558522561 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.557626497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.559453755 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.560184574 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.561469863 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.561397926 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.562052758 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.565608657 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560239818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.558739208 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.557876109 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.558973596 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559314002 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.55784105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560302955 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.562365228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.558091221 seconds)
  done (took 35.738894451 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.561868587 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.561744828 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.559768739 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.562953082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.56157679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.561758587 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.561353298 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.561843654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.562587602 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.562182034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.563277006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.561093628 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.568651223 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.561648587 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.559841862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.562158149 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.561514142 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.561060733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.562381222 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.561399253 seconds)
  done (took 32.666528685 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.563286226 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.563783774 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.561725482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.565006626 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568952868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.564530168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.56317853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.5635614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.564744581 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.567038169 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.564211343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.564038207 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.565326848 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.563276936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.564239768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.5633942 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.562868365 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.562406574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.563701641 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.564220353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.568636905 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.565492582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.564971635 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.565129896 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.563598904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.563946016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.567920613 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.565952486 seconds)
  done (took 45.238535851 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.591341119 seconds)
    (2/2) benchmarking "in"...
    done (took 1.594151323 seconds)
  done (took 4.612672882 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.564278949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.561726739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.564739762 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.564045819 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.563203323 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.561558702 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.563497705 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.56340754 seconds)
  done (took 13.935302178 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.55568896 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.564990981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.565276841 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.563032142 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.566773261 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.555590065 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.568739293 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.568714011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.558862198 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.562353146 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.563783635 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.560994942 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.564086537 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.560506472 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.556912161 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.561583076 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.567845045 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.565967572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.566583502 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.566440187 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.569491205 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.559937964 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.563535349 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.5679445 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.562217444 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.572541802 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.57252916 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.572438297 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.55868983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.570701903 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.562141736 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.572008004 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.566635813 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.571148258 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.565961844 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.568248588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.573052202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.566502835 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.574269954 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.576891727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.571687224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.567525102 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.563415222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.565668511 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.566401845 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.572629383 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.571410443 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.567208302 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.559686117 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.567848537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.570357446 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.561731418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.569190398 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.569367306 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.569381763 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.576766151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.580365283 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.566006543 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.567910486 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.580642762 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.591221971 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.575836913 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.574983592 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.573653745 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.577173187 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.574955935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.577989142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.577074012 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.574463135 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.570247375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.581363244 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.591967247 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.581375327 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.578418108 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.578026647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.568116309 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.5654666 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.577918673 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.579402101 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.579925561 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.579954197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.572720177 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.57880887 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.570688354 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.568074753 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.580918007 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.576135415 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.573512036 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.565824746 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.583703137 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.581327416 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.574982196 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.565582187 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.567593756 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.570602099 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.578096418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.566314893 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.57048316 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.578938495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.571696722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.579201378 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.570563827 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.576925808 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.579164432 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.57724666 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.579431993 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.579908171 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.567495769 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.584513016 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.586168954 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.575446501 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.56976624 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.578196501 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.579708146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.570374137 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.580968432 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.579601638 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.575147371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.581931892 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.575641917 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.581783549 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.584803836 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.582218591 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.575044145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.574573275 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.579671898 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.577622126 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.577016113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.581088978 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.574623282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.578001714 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.575826298 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.582127727 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.571782068 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.582155524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.571734366 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.580865625 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.576870705 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.576816577 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.578444997 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.581946699 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.574907884 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.581811975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.585425354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.583616394 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.578424673 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.591486669 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.589792459 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.582912604 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.584792242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.587756516 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.581837397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.574367243 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.585429823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.570422188 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.586877144 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.57625205 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.584719887 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.577904983 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.578689301 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.580241175 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.571040354 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.576138558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.585016084 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.583247911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.579617492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.582621784 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.580627955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.577553752 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.571221592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.580167492 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.577070032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.578392686 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.58404536 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.577953803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.58334527 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.584935277 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.583513867 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.582507664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.581662864 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.578075327 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.584614635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.587505855 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.589877455 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.59034637 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.580964101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.577408622 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.57494965 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.576827892 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.582124933 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.575076062 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.58789522 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.595694257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.58995037 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.579026425 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.587103848 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.574027605 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.584183575 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.587304712 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.587940617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.579088724 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.58303727 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.573723656 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.587255126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.580622648 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.588165716 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.57406518 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.581445867 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.58548842 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.580567753 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.579691384 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.579306698 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.582596014 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.584817664 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.582426648 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.584029575 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.576751206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.586247106 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.574207237 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.578762006 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.583250984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.582174171 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.593225507 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.597492809 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.586103233 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.592696739 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.589254262 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.578374387 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.585768274 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.587646795 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.586152681 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.593543145 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.588149443 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.583221233 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.592650155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.590358663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.579214996 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.590516993 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.595114156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.585331207 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.581069073 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.58596376 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.589365239 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.585278617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.583114096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.578743847 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.587355976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.594119545 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.593873914 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.579901746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.588528821 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.583255385 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.592143596 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.592204149 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.594991863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.590870739 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.594251196 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.593547126 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.583969023 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.581582127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.591255075 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.586956833 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.587202535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.5820428 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.592289076 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.599932506 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.589638738 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.594854346 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.593161044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.591806751 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.580723847 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.595560441 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.584261938 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.608646951 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.603791656 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.601538436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.595614987 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.597638429 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.599730454 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.591361863 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.584599481 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.584420896 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.587923366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.587031214 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.584458959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.590772961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.584722471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.594908194 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.591235101 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.590887221 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.589429563 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.59178957 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.581957036 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.593025412 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.590928498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.586613773 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.580070692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.590281627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.590312986 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.598355908 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.590280021 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.586929316 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.604914494 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.593032536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.590466986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.588842897 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.587339843 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.584874236 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.595198034 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.594124644 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.589047881 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.593219081 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.590147812 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.591306129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.588450529 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.602999586 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.597974784 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.587442509 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.593861971 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.588091125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.585718617 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.588970916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.596570905 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.601123998 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.602221693 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.586376941 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.594712638 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.594213901 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.593415965 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.597424994 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.590925704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.592548465 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.595897705 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.603202684 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.598480365 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.595332828 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.600515261 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.597912765 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.592130605 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.589714865 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.585736985 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.602723852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.599222289 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.595395476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.593405838 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.590141666 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.59247171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.590890085 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.58860397 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.594610111 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.591980307 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.60449817 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.599928454 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.598946626 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.59105924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.605970913 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.602163236 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.605335916 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.604961777 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.592252408 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.602611547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.591762681 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.592548466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.589806078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.591465158 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.595785121 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.589704529 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.60224062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.593119348 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.598260854 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.604002785 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.603922887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.585380516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.605165434 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.602639134 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.588407436 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.595230302 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.592384548 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.588226268 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.598172854 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.595967546 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.588442915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.593364212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.59591705 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.604195897 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.591183068 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.600935427 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.592974847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.603558735 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.593147145 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.594442562 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.594170949 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.591871355 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.590844339 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.599926988 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.603922607 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.601441147 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.594489634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.598709515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.593816923 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.61231327 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.604219294 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.596865845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.601403572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.597627115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.592827901 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.60062994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.601163808 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.591731462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.59754512 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.589944993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.596603031 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.592549234 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.605300088 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.599690855 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.602338258 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.590206967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.592888524 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.601014487 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.597815755 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.598292073 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.60323963 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.603874627 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.592333704 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.591530669 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.598251705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.597522143 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.603358779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.59454418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.597033044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.596079222 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.598647147 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.597273508 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.597282797 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.589520217 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.593083241 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.613676991 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.60571264 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.599596569 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.597767426 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.603154842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.594860632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.601146137 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.599412537 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.594990048 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.599029039 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.602815693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.597549451 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.597395242 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.594264466 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.601088938 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.608345726 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.600148874 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.594225285 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.612988426 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.612261727 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.609487701 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.596718549 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.59803848 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.59599227 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.602926741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.598887679 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.596419139 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.614973734 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.608696329 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.605040627 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.606478868 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.599558226 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.59534121 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.603661402 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.601722956 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.605133935 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.608237682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.605884659 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.609006145 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.601907058 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.600485299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.593400041 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.596250543 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.600530277 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.597764283 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.602940639 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.607056386 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.604327199 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.60781584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.609917086 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.604638411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.599831865 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.599885572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.595315578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.605521065 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.597737464 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.609175441 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.605612278 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.599827883 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.604827192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.605392069 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.601356639 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.602732861 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.606054373 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.602706321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.59952163 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.607359218 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.615325245 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.612871511 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.604779071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.600593204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.603375471 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.607632996 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.604046017 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.604215662 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.602457617 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.624526135 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.614642826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.601571192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.603791306 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.616855118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.612057372 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.608443854 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.603924144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.610945568 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.607870317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.60978327 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.606357345 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.614400337 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.608416266 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.601415865 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.610194984 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.603165459 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.605939904 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.613885606 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.616411905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.60647398 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.606827377 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.620408294 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.612014698 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.613679924 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.626524295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.614027035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.613516565 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.612458191 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.599721096 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.609698761 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.610372031 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.610562838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.607135866 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.608358157 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.605893808 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.599217959 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.61761108 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.621632123 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.619861786 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.611203771 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.59846989 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.603362062 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.606899802 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.608341745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.612140971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.611078475 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.608060494 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.606401066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.603215744 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.628866212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.629455883 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.613504622 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.60791718 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.607658278 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.614874629 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.614147302 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.608872539 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.613594577 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.608239568 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.607892945 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.615726203 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.617419855 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.61374781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.604414011 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.605662913 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.611533772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.610840457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.626269024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.629642708 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.620161334 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.612127282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.611932634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.608112386 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.610934743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.613736077 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.61721515 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.609260856 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.609145828 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.616322509 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.612249993 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.607883027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.607459719 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.614167975 seconds)
  done (took 949.531201514 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.607344482 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.607722113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.606717377 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.60982273 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.608026272 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.60819005 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.610260145 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.610780603 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.6080357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.609742202 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.609057549 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.615975677 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.60910532 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.610768172 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.608848653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.610346539 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.610971689 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.610031066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.610468343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.612224711 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.608547009 seconds)
  done (took 35.270285839 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.609223002 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.610434959 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.610122418 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.609545809 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.614005944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.610562978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.612218705 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.610537764 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.61095339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.613086971 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.616424896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.609786692 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.611780869 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.611493403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.612993454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.615159092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.612512527 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.612508057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.610431536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.612848045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.613044438 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.611504996 seconds)
  done (took 36.929052292 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.614642057 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.614487219 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.608553155 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.617242947 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.617955747 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.611905397 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.614791937 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.614457398 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.615624375 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.607899441 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.607139078 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.610103771 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.613747042 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.616769842 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.619572433 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.619508528 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.615056775 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.615977772 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.613559309 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.613394692 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.62290051 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.622044535 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.612243848 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.607016506 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.617853849 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.61397668 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.614087658 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.61647162 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.61022753 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.619576833 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.615900737 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.610336761 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.62595397 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.617307131 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.614117898 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.619157017 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.616703702 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.615405003 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.613223931 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.622967487 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.625565863 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.616412883 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.629599476 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.625303609 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.616816845 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.616295899 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.623229043 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.620321271 seconds)
  done (took 79.055235867 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.615966737 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.615017943 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.614788375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.616430553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.615486997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.615417924 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.616106071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.615197226 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.616233531 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.616607531 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.617450166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.618483119 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.621174313 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.617982356 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.617723664 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.625877704 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.618899862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.618201658 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.622819634 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.615483157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.618632998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.619103868 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.618116102 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.618089213 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.619237754 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.619595481 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.617436477 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.620776427 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.620104694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.618196001 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.617497099 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.619096675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.61951209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.619634103 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.6215407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.618879468 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.624261297 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.618178121 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.61903242 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.622948352 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.617881157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.619488693 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.618980528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.619392801 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.616628274 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.618867316 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.624195507 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.618461258 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.624453571 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.620869875 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.618096477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.620304649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.623090059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.621032535 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.619721195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.621416662 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.620542109 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.619662319 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.621891024 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.619483735 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.622215926 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.62027818 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.621775507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.621112154 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.619999303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.621959817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.620635696 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.622540618 seconds)
  done (took 111.597408724 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.623474884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.62306373 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.623312713 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.624565806 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.623065754 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.623826466 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.62471764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.62458613 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.626090232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.624344897 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.622866009 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.623033697 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.624866752 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.622529164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.633083439 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.623227925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.624792371 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.624830504 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.624331418 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.623998694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.625833145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.624797609 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.625209812 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.624362567 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.623109196 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.626074796 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.624620421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.6235075 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.625230695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.625463894 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.624832809 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.626731653 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.624995539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.624504834 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.62664512 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.623831913 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.625563349 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.62505225 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.627210485 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.630035635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.625476466 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.626174389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.625816733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.625887901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.625828745 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.62441865 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.626350181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.627746726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.623914605 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.626314143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.628453241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.627261679 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.625475697 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.628266695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.630533883 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.625756739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.627421755 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.627258397 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.627261818 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.62647792 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.626787736 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.625968428 seconds)
  done (took 102.266595706 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.628287299 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.63341749 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.625767914 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.626960942 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.626660485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.625533037 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.627365673 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.629611978 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.624960827 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.626276847 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.626685279 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.626681298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.632149451 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.630010632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.626685139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.624228472 seconds)
  done (took 27.524080681 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.62610846 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.628685603 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.628919152 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.629358594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.632844163 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.627087634 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.6270766 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.631486379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.631830766 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.628193222 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.629001844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.633147553 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.628096772 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.629218073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.629059533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.634811731 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.63050853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.629919 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.633671013 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.628627984 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.628166473 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.62819008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.63146794 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.631744093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.627907432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.628340377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.628658016 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.62896001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.628026581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.62927213 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.63315817 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.628578537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.62870027 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.630730975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.631198563 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.628235615 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.63038142 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.635368855 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.628451146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.630507623 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.6354549 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.63161328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.63219394 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.630988619 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.638107891 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.634072741 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.636851586 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.632963731 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.636620691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.631068448 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.635993655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.63226022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.635319058 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.632731579 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.635986951 seconds)
  done (took 91.191637012 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.633094055 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.634497097 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.633786392 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.634175058 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.630188797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.631639331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.633130791 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.638379294 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.632211052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.634653401 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.632403115 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.637256037 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.630434987 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.630983731 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.669797465 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.631891108 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.632625141 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.634293439 seconds)
  done (took 30.919488436 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.633067027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.632407026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.63355403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.637121174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.63210161 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.633336055 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.631549445 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.635746697 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.635248519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.633439071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.633745255 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.633950449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.632863578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.63222488 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.636981072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.633080785 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.638211256 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.632899896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.634029858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.632552086 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.63258596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.634173172 seconds)
  done (took 37.431786963 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.622531329 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.624227145 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.623771011 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.648975404 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.631997826 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.630274701 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.623385348 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.624565876 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.653394681 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.655741977 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.657542206 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.633956525 seconds)
  done (took 21.114550881 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.635850481 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.63523036 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.634841345 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.634950646 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635332677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.635149903 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.633343388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.63338697 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636151007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636776227 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.633893667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641098913 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.642531708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635199071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637553979 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.643160069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.643312603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636330081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.636350963 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636498328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.638788215 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636300049 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.641163307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640370329 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.635924303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.634938424 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.638104399 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641092698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.63501036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635864938 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.634399668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635756754 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.63496622 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.638558646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637447821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.635378493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640938627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.635680557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638087078 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6367089 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.636922055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.636776646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.636072296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640981231 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.637152881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.638453884 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.635729237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.637112513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637287326 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.641513632 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638642456 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636948176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637961783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638793452 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.641014545 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.63821356 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63766349 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.63791024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640338761 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.63898349 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.639083085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.639213967 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639297777 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639257479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.638478399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.64254379 seconds)
  done (took 109.583061019 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638207764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.647707854 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.638364348 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640110171 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639720596 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.638652932 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639059269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.638189535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.639462253 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.639952888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.640565326 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.641705765 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640812006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639575326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.639893872 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.641520685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.638520304 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640008132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639332069 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.645729949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.639226469 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.639578678 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.641762266 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63939353 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.641010285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.64083617 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.639395764 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639311396 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.640756971 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641407403 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.641837206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641325478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.644275504 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.640524748 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.639771999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.642250456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.641121053 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.64056351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.642642616 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.642420869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.642075713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641486323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646431226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.643119631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.641297961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.642692901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.64313793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.644938788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.642629276 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.640893999 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.647619645 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.643445651 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.64796082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.643438457 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.647075372 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.649439709 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.641025581 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.64498621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.644722558 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.648601124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.642976876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.64239447 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.645982356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.642138152 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.641793066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.644373701 seconds)
  done (took 109.874864328 seconds)
done (took 2102.355180347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.613366406 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.61262986 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.636567681 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.781406351 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.634439756 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.304630638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.347725434 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.635480322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.633603128 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.636014119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.637024024 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.614713575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.98043606 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.633268728 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.636166722 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.611948628 seconds)
  done (took 59.447040439 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.68004367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.657228408 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.800832005 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.6391069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.681001753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.921986238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.719926256 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.642284121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.868707117 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.647436731 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.6292678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.679121835 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.640011345 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.621071088 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.672336475 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.922501248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.012670257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.631777966 seconds)
  done (took 35.564009014 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.264791842 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.651924941 seconds)
  done (took 6.413501954 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.674331212 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.640946799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.645075816 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.64604675 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.626798631 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.614448038 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.641270793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.622903094 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.616109492 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.811127938 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.64753409 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.665715032 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.638448158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.643494539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.650320616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.707565397 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.842468725 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.650765436 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.648558451 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.651825068 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.638800577 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.898005465 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.705615637 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.647873169 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.810743182 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.618472503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.656164237 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.662887578 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.861768246 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.653325608 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.645846933 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.641376812 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.647484223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.63252429 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.301794313 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.618718064 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.686583399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.654484624 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.650946884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.854981908 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.643592248 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.656212079 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.618294547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.29164882 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.83280765 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.947435145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.620797589 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.64283894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.6482464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.866977707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.647156736 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.64899922 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.754716365 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.619573201 seconds)
  done (took 103.729821023 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.616637563 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.618677417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88862194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.640976203 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.616867899 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.618774496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.620547347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040558859 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.680458109 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.617977747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041774097 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.42564875 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.622003888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.67082951 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.670010761 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.671845212 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.62136023 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.625094225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.619884903 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.620539945 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.33783081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.624696339 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.622810833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.777788363 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.6910362 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.333989539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.619966757 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.618960484 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.623641665 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.621644694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.383740139 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.623389539 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.687355983 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.623052345 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027916958 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.175106346 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137721564 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.626413038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.670352354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.623936117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.621163767 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333803831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.154451554 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.622310701 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.622944161 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.354331023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.6207267 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.631071172 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.624718758 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985190784 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.620646104 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.624577259 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.622620027 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.620303461 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.623278491 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.689024282 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.676789276 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.336027228 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.623547449 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.624408174 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.671598602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.625009019 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.636438056 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.627061165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.625251368 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.160841822 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.80100151 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.632981331 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.158183454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.382428589 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.623681126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.465417774 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.622907634 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.626767622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.701251046 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.624305577 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.623489761 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330238713 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.656226256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.625702962 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.141591819 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.625096041 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.049327851 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.643895568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.626599514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.363271614 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.637529396 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.687815329 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.624131253 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.623414821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.625221406 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.626298218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.031985911 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.69693716 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.624538498 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.624902091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.648148763 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.623929691 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.627263914 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.62451985 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.467816962 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.62690933 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.624700599 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.629460003 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.626583799 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.624727697 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.625561463 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.626019761 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002417067 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.627087914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.629639635 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.629159616 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.627808955 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.635811859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.779273258 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.63236149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.09205584 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.629104302 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.628747552 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.633644823 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.62446272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.638075415 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.646008686 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.629193978 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.62626644 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.038465297 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.65022689 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.64749833 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.626458435 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.628207749 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.632254283 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.629457699 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.65971853 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.634584747 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.629166111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.64138645 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.645185397 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.628734492 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.643086247 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.636011535 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.627150841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.629652206 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.051693654 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037323951 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837704921 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.631816099 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.629165204 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.61523096 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.63113808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900688349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.656804891 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.629461401 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021581725 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.814700668 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.630509927 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.628817044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.631506911 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016404041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.631936924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.052990957 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.416374806 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.631961858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.633244563 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.623729247 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.485282801 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.632417991 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.632707064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.051483153 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.652042345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.685317595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.630586753 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.632712232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.631797312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.635508048 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.638990056 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.629599616 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.631130886 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.750086027 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.917945222 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.654340402 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.642883009 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.341608734 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.639373206 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.631491547 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.655283189 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.635608551 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.631718111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.669192151 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.636079001 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.681298229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.633457229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.632954931 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.377754462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.639239809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.633599636 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.917252955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.572679459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.632388588 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.63196123 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.632193591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.665441045 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.369398092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.690518466 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.104789442 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.636116227 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.705424272 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.63220316 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.664423737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.37203509 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.648046235 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.633598518 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.536374353 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.634083985 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.33477644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.631795077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.634609541 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.474962005 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.635628944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.638910157 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.633933617 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.656150409 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059206901 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.634035516 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.651905804 seconds)
  done (took 571.945880005 seconds)
done (took 778.594948721 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.635675249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.635835256 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.638642317 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.639654316 seconds)
  done (took 12.063556197 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.675523123 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.662916353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.669779237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.657596542 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.671094488 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.659483235 seconds)
  done (took 11.513126285 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.635689426 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.636070411 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.638952691 seconds)
  done (took 9.427952744 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.972574305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.646066026 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.162529257 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.652090255 seconds)
  done (took 10.950444536 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.669170011 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.672204824 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.669025928 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.673255097 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.678048864 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.674807948 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.674353002 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.671465834 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.675373733 seconds)
  done (took 16.570992163 seconds)
done (took 62.041858048 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.789228575 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.798887274 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.635685655 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.739878234 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.847292313 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.793726213 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.795842613 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.807173035 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.795956176 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.708219879 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.795860982 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.691959013 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.791166531 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.922398582 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.70597064 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.798650024 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.694768378 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.893763586 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.793414931 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.706400584 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.825859629 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.703802278 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.707670228 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.639314818 seconds)
  done (took 45.902741823 seconds)
done (took 47.418389239 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.70621285 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.825289654 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.670534361 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.666264195 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.679693975 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.647884902 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.699104544 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.666346468 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.693025838 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.694215934 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.64953623 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.679790636 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.693911565 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.682906814 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.713019512 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.667241135 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.672564437 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.680117842 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.696368022 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.698154213 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.673274164 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.680425004 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.705947244 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.667961687 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.690532784 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.689978174 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.687155539 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.647629702 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.675906761 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.694553826 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.658751019 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.686633265 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.694706359 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.684502128 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.674711848 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.68390729 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.683460026 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.829903299 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.705291364 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.68242861 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.681585836 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.697446442 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.686592966 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.686438408 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.683759716 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.709045612 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.690564003 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.697576836 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.656003113 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.643847168 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.703312971 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.694753083 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.681832655 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.643821746 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.653283912 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.698600639 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.686979539 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.704295637 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.683998712 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.68349411 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.718817386 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.704431409 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.694872302 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.692336645 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.679746146 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.698840405 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.684188611 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.70029443 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.678726045 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.680069441 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.678555143 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.685501557 seconds)
done (took 131.078039816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.850848142 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.642182361 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.888553146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.676073333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.900934889 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.847734339 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.67614059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.67680946 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.675629492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.541579624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.678522597 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.676937969 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.645240781 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.677980419 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.848455869 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.676559918 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.676672292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.438407496 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.681604134 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.86169149 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.649649582 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.676904584 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.681047359 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.542896761 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.648674109 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.64884976 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.865473396 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.676837188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.442113345 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.645226813 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.647239568 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.443696856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.865517046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.697624467 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.689316707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.689006402 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.903646127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.681785582 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.857481109 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.854491692 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.892611344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.719935964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.650864331 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.655226898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.679993734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.682994813 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.679561137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.71031854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.646822756 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.678866216 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.441897534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.690678613 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.680496172 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.680449937 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.67917254 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.71323609 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.685371862 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.682229772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.863133294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.682749322 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856493762 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.544688329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.544700761 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.6814164 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.650932286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.681748496 seconds)
  done (took 132.333298812 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.797449313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.813712204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.854761908 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.67469285 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.769223936 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.859223159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.675173777 seconds)
  done (took 13.972773633 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.686971996 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.681455581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.766925738 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.770862063 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.68509124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.910263938 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.685362712 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.694748124 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.683920351 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.773773816 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.686311646 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.689072054 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.692329171 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.657470479 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.768643205 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.695625471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.850130244 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.677740095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.685409785 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892006938 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.682279081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.693515914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.770090736 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.697098074 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.688200295 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.69018686 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.501160657 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.688225018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.687065443 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.688816295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.684488509 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.799691567 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.689708237 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.655820758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.685672459 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.852503101 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.690051367 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.689985507 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.689540479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.657782878 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.690447507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.69042411 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.688240103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.689972657 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.688685901 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.712253982 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.689967139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.690561977 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.68859839 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.689928237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.772402413 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.687321272 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.690234422 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.686202973 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.77535621 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.69820848 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.69112846 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.687205475 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.689684771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.692680124 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895203503 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.772655307 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.689210968 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.770585911 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.690965241 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.689556333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.689402822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.692586257 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830390582 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.688226485 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.771993422 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.688585329 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.926890773 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.716384046 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.693543013 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.684806078 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.686143119 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.693280688 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.656444231 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.692745565 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.692201851 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.686464668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.698532544 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.692374009 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.68932013 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900480362 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854183553 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.690170307 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.702990723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.699575903 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.689528746 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.77692296 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.693114676 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.690580275 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777133182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861131363 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.777608591 seconds)
  done (took 173.2352244 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.701443459 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.702174487 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.686789151 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.718949386 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.681247245 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.68378395 seconds)
  done (took 11.709118318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.686963684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.698283071 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.691206892 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.693524156 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.69677415 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.694469108 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.697563287 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.6877267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.7010513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.692871978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.697332601 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.697155134 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.697402582 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.695737845 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.694182829 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.698082766 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.694897725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.69647509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.696248105 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.697481991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.665497687 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.696175051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.696324162 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.688819717 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.706994164 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.696340715 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.717550954 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.69691474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.699363375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.695821514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.699662156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.697723573 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.69068385 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.694573172 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.702986043 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.6885539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.701069389 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.699393757 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.692940142 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.697685858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.698241515 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.697291464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.697387077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.699048461 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.690180853 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.692453209 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.703367167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.718366072 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.697949439 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.697296214 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.698485889 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.698125439 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.69963429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.701558627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.695858531 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.693056568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.70329118 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.696653953 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.698650227 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.689354072 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.698864919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.6966858 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.69180166 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.699600068 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.697267159 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.696956575 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.690862644 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.701686227 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.702792513 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.697471376 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.700170112 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.694226549 seconds)
  done (took 124.708495616 seconds)
done (took 457.479928849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.138161774 seconds)
  done (took 4.67709539 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.912888084 seconds)
  done (took 4.45267174 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.549990959 seconds)
  done (took 28.096060331 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.758981991 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.670732221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.674550724 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.664929947 seconds)
  done (took 12.306320797 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.343994722 seconds)
  done (took 4.882846764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.685517551 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.67701626 seconds)
  done (took 6.902709975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.180605788 seconds)
  done (took 4.719805361 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.378506722 seconds)
  done (took 6.925905034 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.683646224 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.686027043 seconds)
  done (took 6.915796555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.648423797 seconds)
  done (took 4.189798158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 105.06381119 seconds)
  done (took 106.605699722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.690064638 seconds)
  done (took 4.233464605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.708028723 seconds)
  done (took 4.248877319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.992337993 seconds)
  done (took 7.532442568 seconds)
done (took 208.228432545 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.663623635 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.671200647 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.669386589 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.670837053 seconds)
  done (took 12.216355447 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.812019671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.820910396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.82320161 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.813127005 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.808893506 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.823417978 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.734633504 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.734468189 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.799050564 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.796251884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.827794582 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.807759562 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.822214053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.733938303 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.794536233 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.824888277 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.798460126 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.823536568 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.733537764 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.801594951 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.703141231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.812202236 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.800107542 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.701347008 seconds)
  done (took 44.494156626 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.255421028 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.819259 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.907785899 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.786756403 seconds)
  done (took 9.311945325 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.869736996 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.869787492 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.882742631 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.923458703 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.952747972 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.879176186 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.74027647 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.734011986 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.722247292 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.870582146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.944324694 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.866412481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.089682284 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.705411003 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.090336208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.699615083 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.702561827 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.871142972 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.921451673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.950167266 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.705415542 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.867025478 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.879012269 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.866828038 seconds)
  done (took 46.149973891 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.719815697 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.727970296 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.705474558 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.724207527 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.709842362 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.708889238 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.706649917 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.716984053 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.703802977 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.703456424 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.708029002 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.72537241 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.702184894 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.706174158 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.718498909 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.703615523 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.708465302 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.71769783 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.72262199 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.708275682 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.703359485 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.719752282 seconds)
  done (took 39.218598469 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.671663275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.671330621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.108685819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.01140145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.671987898 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.674330444 seconds)
  done (took 16.3540152 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803168964 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.001147632 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.698268124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.171572866 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.295503011 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.698164061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.699755256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.050889502 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.445739294 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.448365466 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.77294494 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.799485186 seconds)
  done (took 25.432746302 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838184451 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682528134 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.696875699 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756552562 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682811551 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682306389 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764640113 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33873281 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.705138272 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035366019 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693054892 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843949709 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01897448 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700786741 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.686765614 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.658169241 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022300252 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395795932 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684103404 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681367652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743674388 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698635351 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.692246689 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988770639 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682402141 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682221252 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.028239066 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683034973 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121134468 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073999634 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078643241 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688037424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037450642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273023965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859157509 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981545209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681362693 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.684958192 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.671930977 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.716511296 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697989947 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685489265 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070934789 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689889545 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.684007512 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690347355 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352382869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.714963613 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.685155424 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687034085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0860805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851928936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.708418438 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.684891913 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69379961 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686363748 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.711847924 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885412873 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410371947 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686738935 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690343513 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.690280936 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.675525568 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689242186 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.548114114 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.712118909 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.707628044 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713732382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688098745 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.697690328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73558104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688400459 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.732814836 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68737938 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687426523 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.700306373 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692553292 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462575653 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689501927 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.693425051 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000709308 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687452853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689971749 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.695387591 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.688336904 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.703582418 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716240872 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.672725561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749351925 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345971509 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990569821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733281865 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74555675 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993194176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.663764784 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689163546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.696638308 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69688415 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735728614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349983822 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68961891 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.712020642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023953465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.986278003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708839441 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.669014195 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357577874 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689995216 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.773982851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711084 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998746349 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.526598739 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093801035 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698175724 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75398827 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.692169304 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.695118772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709215956 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.716900173 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693358143 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098866553 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.674595841 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691558473 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842150737 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.692745565 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.693941597 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691840002 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693957661 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.692575571 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.00595383 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710659924 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080195673 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.696748029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693764829 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.693922251 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70445271 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.694580645 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996965536 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711723887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049417248 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695219972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692165254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696093896 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.001159296 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.69723608 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.719104782 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123180749 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705895631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.702906145 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092018615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762688817 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893906341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761017096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.699852125 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037700116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.722989913 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.724036555 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700071916 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.699318398 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701521541 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.725555254 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701830799 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540953707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701221573 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.707540742 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698683261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.742075302 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849736339 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726712524 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000698832 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.712737143 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69533947 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.722160269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.699637503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000980082 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081805515 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.713261372 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94761785 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.359490826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539754601 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741848667 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.698625293 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.69881149 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.699305757 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702430525 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699816995 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700349465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002455689 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102548585 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700021351 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543778367 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703925688 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.71825223 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.725088714 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084937757 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.733188208 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701437801 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.710643023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701931789 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705274253 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095719994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005855494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.74013106 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.701665135 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.304169266 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731353896 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702975358 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.70073897 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756440956 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.718840503 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452183549 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133288807 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695259153 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089652602 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.711948356 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.752363901 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.698879795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705026666 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721353253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.716920776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734100335 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.003694464 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721634225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703788659 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430060554 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702228545 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.479755561 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718333874 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.724496111 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.707949104 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366808377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70392925 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704148761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081850282 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363165107 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702633834 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365186313 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.703113922 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.707208158 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100409696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020603528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720045265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.709069708 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096289549 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000772096 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759983933 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.704170761 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710162165 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.679800483 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455554509 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720299069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957840589 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366325006 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71317442 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.708202209 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.701978583 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.706856158 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272668961 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.705009136 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705786819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.715694712 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.718514693 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457552598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713509448 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705781581 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.566895902 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.7182567 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.375041896 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709159314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009564275 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098500165 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.087408043 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.722142879 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.721504181 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.037643893 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102446617 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70920967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.717175557 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495014555 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.653813868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.736740824 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707063028 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.708811784 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705741701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145215115 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.723678968 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.71059113 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713964814 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709633955 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708070419 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.709199962 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718497303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709436444 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.423307181 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.709210368 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7147939 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711213695 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715702115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046382156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.748598757 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.553431131 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019897014 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72798161 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771871129 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.734668005 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7256142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.685003031 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.710117328 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.708793835 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742610425 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010333157 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.724633908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.685807672 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.731637871 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0088667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.710175225 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.718750618 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057309174 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.710121727 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.723875152 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711878375 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767650621 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.720690529 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711433416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.729881363 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769647034 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862108093 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014290923 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.103345963 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102754547 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280687439 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72496265 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712675823 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.75155465 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871882801 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712126451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.72306639 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.712034819 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582190305 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719897132 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.590888129 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122857383 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718141532 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71349555 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712030141 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040965964 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713419493 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066148077 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712670654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.714157017 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76170196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729063382 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7213191 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015226308 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062958705 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714936656 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711412045 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718798808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.715689614 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131942826 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.016178524 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43141317 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479791809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715879583 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.730278271 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379946849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066044013 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71477609 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714014121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715743252 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.737485193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.717985506 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.742778044 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715350045 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027711345 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11878794 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31713984 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113977343 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.754227824 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.670790957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714073347 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074643291 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647127893 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020214722 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56492987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.688751551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051938378 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871214838 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020692645 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.715303112 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038114553 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715796052 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.71875872 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716990827 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716388166 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.715531703 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116372969 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570067535 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055857872 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.738378952 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725747946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776972966 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.019206772 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01932236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.737753663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022385458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119506747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.729485433 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.717836535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.573182106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11774982 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719215621 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.744299537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063510241 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.719673082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782759316 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.682350109 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.718271856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497770283 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.015482346 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768221923 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720148282 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.697009934 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570099801 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.720971012 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.444486691 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719931424 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741222469 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07252277 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.746825836 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.739360222 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087165135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.744860991 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.722506892 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049003508 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.564519413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.733642385 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.744163277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730199071 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.72199258 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721126199 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718099557 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720235095 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731590518 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.285455783 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.722022821 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721308764 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758123572 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.736634945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737291034 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.726125298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721918409 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.746426833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.735084469 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.71307287 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733214468 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921586048 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475594278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725944968 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.421892267 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.146052372 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056814208 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.735807046 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.701419992 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.744988312 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722468618 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722574987 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723258035 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.721224676 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492924973 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.732629687 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.121029706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745806363 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.021751369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020574753 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.73646139 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031575175 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732805826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771355282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.697417108 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724446523 seconds)
  done (took 1162.955743494 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.74981197 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.768603326 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.765750939 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.837928832 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.740579302 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.881650872 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.803819256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.732808831 seconds)
  done (took 23.865998044 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.719824916 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.744736883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.718238192 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.74575489 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.713317245 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.385170139 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.716324611 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.747922833 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.770772177 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.715275106 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.718066662 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.554503265 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.746759207 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.724809489 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.721791507 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.748539322 seconds)
  done (took 38.784389203 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.287020437 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.724163038 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.742624813 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.797011757 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.728701324 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.730544226 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.325601741 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.722165088 seconds)
  done (took 31.642621455 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.756734498 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.757392472 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.758162473 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.760132765 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.759038841 seconds)
  done (took 10.376388297 seconds)
done (took 1462.344471077 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.749277964 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.752814168 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.746140134 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.749934681 seconds)
  done (took 8.583530909 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.698817287 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.700436278 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.703430583 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.737117967 seconds)
  done (took 11.425202814 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.259118635 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.469565648 seconds)
  done (took 6.312274138 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.727090924 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.576534907 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.562946238 seconds)
  done (took 9.45041894 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.119701814 seconds)
  done (took 3.70321617 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.229206522 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.312587446 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.719355653 seconds)
  done (took 8.844296751 seconds)
done (took 49.903529074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.715278598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.486944255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.87612077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.731705966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.881219951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.972185011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.003554572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.724068194 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.719241672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.737926311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.728661655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.881011615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.990576944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.487204972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.99254144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.491426459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.883863584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.719348738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.719932332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.718378154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.00729143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.734977961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.720587024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.729574271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.883751139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.91622105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.728242537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.491970173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.718132103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.727584213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.86946699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.71955903 seconds)
  done (took 94.298080785 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.72039105 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.73917214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.723502758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.719706186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.729857407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.720930155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.721285856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.728366855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.721255755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.721692612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.719252078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.729486619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.723080707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.72142924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.722887945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.72006999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.725731045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.71968712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.720046383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.722134987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.722290663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.721586174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.722332567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.721177672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.719978148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.722851279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.722927405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.72752401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.720747939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.72372639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.724745584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.725672378 seconds)
  done (took 88.737590655 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.730316894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.729023363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.723263761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.724007152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.723306504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.723359444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.727883273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.731720563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.742280216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.73770652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.723488301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.724602898 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.723090345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741906844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.724875698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.742030464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.72070785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.734618069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.726000492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.743744788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.728114518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.734548437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.723955819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.758254734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.722000054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.7208395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.729465598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.72615547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.738384679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.733640919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.725263806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.724897978 seconds)
  done (took 88.95839981 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.053003039 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.761537134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.76660824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.734721783 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.765240259 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.757256422 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.733293109 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056134931 seconds)
  done (took 18.220374323 seconds)
done (took 291.801529378 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.735047872 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.735442405 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.791733432 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.743619213 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.778646223 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.79436554 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.05045446 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.793718391 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.048068473 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.737795009 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.779200763 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.736428774 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.73674718 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.968853022 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.73309497 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.73992398 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.736601771 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.728437185 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.737100228 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.084276778 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.794448232 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72852735 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.738968622 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.757096905 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.730192297 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.847550935 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.849365412 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.979838358 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.94838785 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.845760414 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.729245947 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.738182209 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.744320978 seconds)
  done (took 79.215888768 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.751298541 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.760826988 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.768828494 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.767372304 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.761809375 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.759028086 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.752599685 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.761567585 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.763948404 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.764407262 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.763825274 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.764695706 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.765172234 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.761233813 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.760230403 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.7453459 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.750654326 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.763414258 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.751308599 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.749193176 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.764002182 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.766067319 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.777811131 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.761847648 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.76927897 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.765089821 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.761690366 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.767968748 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.76202735 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.762493261 seconds)
  done (took 54.442236685 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.760502924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.73240417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.736018037 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.774452114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.756178072 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.760505997 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.188437371 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.766683389 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.763392537 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.761097344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.731271554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.772903803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.829097401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.736563847 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.762831014 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.764432055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.764963059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.756134143 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.732084157 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.807890096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.205016504 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.769528514 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.17854568 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.784696922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.762179115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.758081457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.76800779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.735140621 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.762266836 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.733531408 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.750011995 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.178023476 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.747511049 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.730641935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.75226298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.775965924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.766609916 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.734620303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.760373368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.758449172 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.174898288 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.759283565 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.75303312 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.734350995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.760100359 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.773733657 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.733471274 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.737142342 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.09016838 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.774717651 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.739324812 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.766516748 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.767580361 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.760499013 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.088494214 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.764093605 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.758253755 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.731675865 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.771915409 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.170783868 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.76784485 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.763173236 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.756139869 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.757510574 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.75057331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.763640055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.78612385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.762777097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.752686427 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.765186132 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.7354973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.768875288 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.772318464 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.737671809 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.7495567 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.7357041 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.763000518 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.739327536 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.758965718 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.17394237 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.770347752 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.737745422 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.197282141 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.769088094 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.777015359 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.775505949 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.77274659 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.896653967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.172518586 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.739656698 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.738766292 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.739179333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.183273515 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.779670096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.762785966 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.739925797 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.773672825 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.778308401 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.755122073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.740014215 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.764291605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.787749895 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.739748749 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.767487751 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.181587407 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.777090857 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.758349648 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.766836621 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.901747841 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.77266327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.785420828 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.771925396 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.199577265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.771887822 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.774569168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.740491372 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.74821016 seconds)
  done (took 251.457389735 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.741470476 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.740457498 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.742772807 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.744736883 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.741603384 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.767480278 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.742911232 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.743442794 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.766804703 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.742202064 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.747582077 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.770154501 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.770510133 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.739311542 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.747872478 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.74660849 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.742298095 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.746057582 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.74679287 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.741654158 seconds)
  done (took 52.580447068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.816513678 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.548710279 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.518244813 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.775269537 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.773861397 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.768555206 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.848584027 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.775213664 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.775894546 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.205614345 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.015408943 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.779329829 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.772733948 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.775704578 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.517503867 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.757545775 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.206987774 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.551733988 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.77992809 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.550238477 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.759862689 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.776992522 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.769293288 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.549711245 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.217702335 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.182331217 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.854164276 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.553460604 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.776149187 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.775360819 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.549801061 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.779038731 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.770089548 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.541844183 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.77822061 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.80317106 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.774664153 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.85498086 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.855806175 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.210098016 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.558786421 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.195531429 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.800369936 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.029946615 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.788909958 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.759248296 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.564725794 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.779862998 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.760525972 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.782278808 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.790530904 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.531154625 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.773937384 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.53505163 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.780703189 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.780246845 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.597816734 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.535695077 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.523400008 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.017007121 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.770976533 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.18563038 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.78139762 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.56783429 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.781987779 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.779254261 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.781428071 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.020198448 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.556175684 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.187632869 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.212258696 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.211554067 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.781212611 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.87010485 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.782963672 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.216669522 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.867375524 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.30247352 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.215526779 seconds)
  done (took 163.021793348 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.165209975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.908411398 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.3330383 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.552619645 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.475450754 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.986636359 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.928766081 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.110763945 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.766918474 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.947522516 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.698057065 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.905084439 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.693054473 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.874396528 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.912888364 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.974618909 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.364882085 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.750833468 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.607711288 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.677449765 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.775256686 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.940014718 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.672767954 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.269551735 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.751780935 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.65991667 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.761373985 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.495109888 seconds)
  done (took 67.574363613 seconds)
done (took 669.884845709 seconds)
SAVING RESULT...
DONE!
