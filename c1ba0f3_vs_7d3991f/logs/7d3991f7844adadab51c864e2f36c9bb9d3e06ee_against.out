cset: moving following pidspec: 19059
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.198709556 seconds)
loading group "string"... done (took 0.528245876 seconds)
loading group "linalg"... done (took 9.697742709 seconds)
loading group "parallel"... done (took 0.171024541 seconds)
loading group "find"... done (took 2.683371049 seconds)
loading group "tuple"... done (took 2.166934496 seconds)
loading group "dates"... done (took 1.433758651 seconds)
loading group "micro"... done (took 0.670163574 seconds)
loading group "io"... done (took 0.68830345 seconds)
loading group "scalar"... done (took 54.191292833 seconds)
loading group "sparse"... done (took 13.407260728 seconds)
loading group "broadcast"... done (took 1.327788191 seconds)
loading group "union"... done (took 2.562338689 seconds)
loading group "simd"... done (took 3.526679056 seconds)
loading group "random"... done (took 13.544211244 seconds)
loading group "problem"... done (took 2.235602517 seconds)
loading group "array"... done (took 23.352724394 seconds)
loading group "misc"... done (took 1.706809505 seconds)
loading group "sort"... done (took 3.726044493 seconds)
loading group "collection"... done (took 20.43477107 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760047349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157572482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.236618427 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.684314186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.26932978 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.201966954 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.199609531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.175713266 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.644140571 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.22039779 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191951993 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402003705 seconds)
done (took 6.94506124 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.279722163 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.113159851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.20541432 seconds)
  done (took 0.95859243 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.094339092 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140564034 seconds)
  done (took 0.876170147 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131477124 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18382561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.144792854 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130456184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146313228 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.145363108 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.130914553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144677895 seconds)
  done (took 1.668636004 seconds)
done (took 4.557085088 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519822598 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.924141052 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.528684339 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.199079575 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.343395973 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.342321185 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316557713 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.267776301 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133899011 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.116653242 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.205503926 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.508680119 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.458661049 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962824673 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099185309 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.148084683 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.166840629 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.880063799 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.12056603 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153708233 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527844987 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.235663488 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.155946856 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134915341 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.240022841 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166075868 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168630732 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.141440752 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.728621077 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171105697 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.23354576 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122583186 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169669411 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199989189 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27551681 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148805375 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725681038 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242574841 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12450005 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.13965065 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721653012 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.157705111 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.232628674 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144633895 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112369108 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177538639 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140775024 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116411103 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148641109 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.138521386 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201432109 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.48477687 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.147672968 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.222585637 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148196429 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.732711262 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137609608 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.315774303 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.167052458 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.14626427 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.129887048 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.127427098 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199550026 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.133625722 seconds)
  done (took 22.502570614 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.201828389 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.220468539 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.135018357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.184471712 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.183697661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.137674631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.127406006 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.134177188 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.15383744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236267266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180662499 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.225895137 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.116130899 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.145518365 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.173889641 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.291472679 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.164999753 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.14595173 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.145473528 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.13512717 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.182424524 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.140470097 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.150336646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134270986 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21162335 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.262461658 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.150706455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167320789 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.145891248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138133976 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182094245 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.208753921 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119235274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143655907 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.214559198 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162414159 seconds)
  done (took 6.822576321 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.257354864 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142498777 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.269824606 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.228796344 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.185716843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.220561917 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.220379561 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.313389084 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300621818 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205276104 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171338617 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.15527624 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119463306 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.135455424 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118543217 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.876534439 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.212750797 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.180416169 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21048801 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154107586 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136631969 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.408825173 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12403826 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140616834 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133614757 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10973211 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.246178023 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133834477 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.517125886 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.140556073 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136551583 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170197201 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.244460137 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166097449 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.177217857 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133996439 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.142784708 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.249283934 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.226415035 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157938171 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.119805737 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117967375 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175483838 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.171446103 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.14599559 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144519984 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174861412 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.139497767 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126010577 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166762337 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.164024769 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.250019503 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.176508898 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.146814689 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316749916 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.14493086 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156691224 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.149482347 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.863575389 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178229578 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.137513926 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.119227173 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151509001 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122971364 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.138310535 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.482650273 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161363886 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.124082539 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.138886237 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198768432 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.198660947 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139568447 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156288869 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143049964 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126464545 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.163069271 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.127313537 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136777449 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126460006 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.138371577 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.127758355 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.160718762 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126217797 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.135890884 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187319002 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.155542615 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.147854696 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166790903 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.146771806 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.125593554 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170486344 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136219207 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129416457 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.214656906 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15562824 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.143637679 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154325211 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.185613688 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143608486 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.311301598 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.140119773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.163349613 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.141125907 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168647843 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.159015542 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121408595 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141829627 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120421249 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139457189 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187731554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.144157438 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122478424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.145698416 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133108407 seconds)
  done (took 31.852585585 seconds)
done (took 61.821004264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.454913017 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109482289 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128301511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108960853 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12678372 seconds)
  done (took 1.648889988 seconds)
done (took 2.354039015 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229501322 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.328220369 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.241379508 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.145143806 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210193419 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.208414841 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193616171 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205628803 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213405629 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.212235648 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.140542453 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.230957513 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.220394577 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.19211633 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.14121691 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.241758327 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.207158536 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196004045 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.24569542 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145196606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138927094 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.161795645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.143140269 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144754581 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143148511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161444552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146874194 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162753657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138852573 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147907007 seconds)
  done (took 2.35062678 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167532058 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142082104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137595081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152142182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141059767 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144822677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140405355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158273479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148439407 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15829953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137629792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148005692 seconds)
  done (took 2.325212655 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.119424264 seconds)
done (took 9.693721737 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.19629703 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.721533165 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191008019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.273812124 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.368251997 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.303094339 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.654526599 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.237449609 seconds)
  done (took 15.791305515 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.206744377 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.149258156 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.138130624 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.155007141 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.133267925 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.157775859 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.141185971 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.150605464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.140335094 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.154398335 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.136760547 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.15761739 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.141584835 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.155809478 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.137665202 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.154855516 seconds)
  done (took 3.182072106 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.179114118 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176007089 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140917011 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.158888781 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.136989138 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.159111085 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144934492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.157426373 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.136978173 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.152941306 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144812689 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156253948 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139226154 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.152526449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141182478 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.175423076 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.140742758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.162381962 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16351821 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.161836292 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1586736 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.139242497 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156260514 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.140367151 seconds)
  done (took 4.45646049 seconds)
done (took 24.147415814 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.186691897 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14370759 seconds)
  done (took 1.052986347 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.193818152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.212446429 seconds)
  done (took 1.136159004 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154926335 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.149939528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164192876 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161595549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13384202 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.14951643 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157539028 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150657496 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134003632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.149603033 seconds)
  done (took 2.23903305 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.137231417 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152699516 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.148400575 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.199326814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.142255171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.153788412 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.138506649 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.154086074 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.138233709 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.149521109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139378129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.166934356 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.154320672 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.154306633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.153952468 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.140212313 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.158478323 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.138201373 seconds)
  done (took 3.454508426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13394301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.135753226 seconds)
  done (took 1.00611216 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137135595 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133699823 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152180107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153124919 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133181182 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132115055 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151200932 seconds)
  done (took 1.729448416 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.58242127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270079107 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.398562904 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105309969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.154091034 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.365640421 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155851453 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10547291 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104746141 seconds)
  done (took 3.006757912 seconds)
done (took 14.354518756 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.135519748 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.277702213 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.675632216 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.171966491 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.133407328 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.208662498 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344704798 seconds)
done (took 2.692840898 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351847885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179282366 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118062709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137090966 seconds)
  done (took 1.524458452 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.124755459 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142349387 seconds)
  done (took 1.013573444 seconds)
done (took 3.286013536 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15283829 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.151274335 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.137390446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.15603758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.136368319 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.154263681 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136449056 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.151838792 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137877589 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.152564862 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136503183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.153262925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.13497261 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155110646 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136345201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.152719071 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137889392 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151620607 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134733963 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.152900588 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.137794269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150534157 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.136876344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.152871954 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.138072097 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155775465 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.13455056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.152335433 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138750396 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.154882963 seconds)
  done (took 5.104946516 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.257161194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.129962546 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150734531 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140735354 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146188562 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13506494 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149538709 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138711284 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.157781028 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.136468541 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.152958766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136658859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.153647262 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135676681 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.151645331 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.137998135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.158873346 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.133778395 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.149470334 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.134741017 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.136349602 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.149708982 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.133527874 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149722741 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133826725 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.146276213 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.133665531 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.149721833 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135448021 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.14959989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.137426414 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152465128 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134238788 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.159596622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.138070701 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.151378956 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139502795 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.129334324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.153619675 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.131383327 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.14862309 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132818356 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.150309267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.138869545 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.15037415 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133555182 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149639559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134461094 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.150412633 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.13627529 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.146791013 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133401042 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.153036989 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.136751608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.136868662 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.148195801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133540515 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.148264944 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136048935 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.150944963 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133688928 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.149085788 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.139293482 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.1513557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.149734543 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.156493714 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135530224 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.151204144 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.135017588 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.155460971 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.1371863 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.159540888 seconds)
  done (took 11.186776824 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133441759 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134015366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.150740817 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135045664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152096715 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134620262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153499408 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134978408 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14943276 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135577995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151250449 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135005646 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150455934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134592325 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134019766 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.152261472 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.13480995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153527484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.134989861 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152628068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135586096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151986715 seconds)
  done (took 3.894168595 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.280775509 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142040758 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20050776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.164956661 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.155082221 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.163874401 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.13969465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.158040628 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139075646 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162709867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143464263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158171511 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153536843 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164354489 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161580953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.145602315 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156361085 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147131699 seconds)
  done (took 3.698664474 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136591672 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.134640515 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152472252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13572075 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153375999 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137192796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152051878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.135891443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.152483496 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.134782852 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.15166349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136005005 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134888173 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153736659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13568143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152368189 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.135582326 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152453605 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135881874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152955693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13577369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152406113 seconds)
  done (took 3.922832017 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151067465 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154414678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155648634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15748504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13711164 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.154279814 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.143109679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.153759497 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.144409705 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.155454056 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138789437 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153065275 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151868265 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15395212 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142632383 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.154184411 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137610376 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154846577 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137986262 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136244071 seconds)
  done (took 3.736475916 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.224697358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170819697 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171985907 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161222806 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.171363062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.152799179 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177580403 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15220944 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.170671773 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.162820914 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170960986 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.171579989 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161460825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.175398352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.153311745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177045838 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160518597 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179467724 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.169833957 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153605287 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18140128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152772151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178118251 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152928316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170877875 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.153137211 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171809977 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175869222 seconds)
  done (took 5.500653051 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.149247192 seconds)
    (2/2) benchmarking "in"...
    done (took 0.163353175 seconds)
  done (took 1.086492074 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.138401259 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137539138 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.156036881 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138268072 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.155385542 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137796643 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.155801307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137503659 seconds)
  done (took 1.931260742 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.195574661 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.218895294 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.160401193 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.149835953 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.220772348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.208958696 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.192435295 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.140940548 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.157796044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.129680527 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.213018848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128657003 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.154986887 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133005321 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.155664488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142604867 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.157155809 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145017742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.161264572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138882046 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160286095 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141298346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159270393 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.147336124 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.151169293 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.139218681 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.159899594 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.148538721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.153891636 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.138280992 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.15348963 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.137707386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.16909343 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.140609011 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158442145 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.223022075 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145428061 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.153973141 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.138005399 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.163415333 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.163913093 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.157550342 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1386691 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.156013904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142666885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.162097638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.142461552 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.157515561 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.131260965 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.152093782 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138335888 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.151612925 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.138085647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156937206 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.138886936 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.163382159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139866739 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.153373414 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.135366306 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.153729395 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138813463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.15399549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141018631 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.160078387 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138579564 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.157073675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137524262 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.157780608 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140101475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.157927066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138221767 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171444498 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139394821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.161923314 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144834688 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.159143561 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137552129 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162759873 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136616884 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.158063955 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.142732676 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.18068869 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140670682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153255523 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.133810451 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.163864483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140197297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.161212121 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.131886045 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165864668 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141079323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.158190228 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.132207734 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.154895745 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.134989163 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.160353492 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13175635 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157813015 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.13772296 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.161271556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145018791 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.15609038 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.141553127 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16293273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.145422473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.156243123 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.183042201 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15603744 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.133760166 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.159760399 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14433651 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.153008982 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138820027 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.157338583 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135263709 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.153502272 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.143082301 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.158995708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.139509221 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.161395664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141268523 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.161999581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.141007107 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.158467218 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.13585296 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.16146299 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148013096 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.159963429 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.141088193 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.160563435 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.139228878 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.157385517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.143180428 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.165291899 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144504409 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.154557992 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.139456421 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.159267321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144131107 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.157841161 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.13550997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.156996571 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.141533152 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.157600907 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.142755025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.159301752 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.134934338 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.151076055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139393145 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.153788761 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.139904942 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166862978 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.136080572 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.160502044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.136683723 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167656515 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.137253627 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.165235817 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143728892 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.144368638 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.165699213 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.132461817 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15728725 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.141827882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.160841194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.13612115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.161354737 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.141847856 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.166241671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13350762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.164252242 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.13250847 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.156553009 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.144385819 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.160780781 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.144807381 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156398729 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.17077437 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17220451 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145488264 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.159018616 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.141857704 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166648287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.138703393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.164597467 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145383502 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.165674351 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.139120345 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.157963803 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145084022 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.15629725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.142171152 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.158470012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141015209 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.152477001 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.141849044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.152264265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.145596587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.161704851 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.144481292 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.164321874 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14185484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159032025 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148281077 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.157971206 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144865489 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.151925256 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.14537519 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.169490617 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147719484 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167475277 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142236174 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.15925866 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.142508485 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170300567 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143721768 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.160445193 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.142636714 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.134071728 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.154181058 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.14578886 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.164102083 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.136930681 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.160001282 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141016256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161821416 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.138653386 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.153500246 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.14639187 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165817874 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.136789531 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.161241873 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.136560871 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.159331854 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148495349 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.153222766 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.136956173 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.162898508 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.14423126 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.161867023 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.140110485 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.162708051 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.148584398 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.16346101 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.142869984 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.158614583 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148630982 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159365727 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.141727241 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157584704 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144083476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.155591923 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.143348326 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161761772 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139343558 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.156083466 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145669152 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165694535 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.146475889 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159319352 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.144801095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.166503087 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.146781654 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157982032 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145853324 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.157281593 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134605455 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.156793892 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135028414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163970712 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.138354185 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.166082363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139220777 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159344006 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147182474 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163400457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.138800891 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.166095004 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15166363 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.1546513 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134580383 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160131816 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140423373 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.15818492 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137601017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.162106368 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.141901844 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.165293226 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143998269 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.1571153 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.142446606 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.171198516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138899018 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.166456712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.148620366 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.166645703 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.137434586 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.144356137 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.158903028 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.164119893 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.136001094 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.160487447 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140701831 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.159396387 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138422491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.160769047 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138088091 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.134042953 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.157607472 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.148133851 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.160286235 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.14732467 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.160642565 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.139031227 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.15894207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137537252 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.168538261 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.139724263 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.167527309 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.141640288 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.155886094 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.135549081 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167723913 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142048581 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168594903 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.136841284 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.164394229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147934733 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.165296719 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.143344346 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.170991576 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1512413 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.168690585 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148034956 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.155322755 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140243603 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.166324083 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.142841488 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.166408732 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146610962 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159206348 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144511603 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.168877341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143354263 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.161504476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.137422783 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.16400682 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.150692347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.165312642 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.146299401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.14464074 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1642572 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139223221 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168276078 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.147307909 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.163641549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.150082563 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163544052 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147315032 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.160514336 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.149228125 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.165124979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138652129 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.156734386 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.142151177 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.169134916 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.138015386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.168809595 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.147839052 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.160408038 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.141722422 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.167894255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.14140157 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166455245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148655845 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.162114121 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15427304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.1652875 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.14191693 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.169286053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.149055058 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.156815681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141976504 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161510902 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149937014 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.163048597 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.148698867 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163001175 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148584816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.167416261 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.14856575 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.16832308 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.150370868 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.157301358 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150982398 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167339646 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.147459464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.140836554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.16327181 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.140488116 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.165832261 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.149916969 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.161220501 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151379655 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.168267627 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.142746155 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.163466457 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.148953369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164030356 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150283845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.1622332 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145395934 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.159525873 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.145786766 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.162827759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.150525357 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.164423353 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138334979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170136021 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149190411 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169355405 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147044886 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.170384726 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.138391831 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.15888906 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148410144 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.162630667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154409091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16724934 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.145469756 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165751664 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.14654622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.16588541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151610621 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.159295466 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.141493202 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.165791264 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146751763 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.163150356 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139840898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.168929512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144590035 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165464338 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143656257 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.16056546 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143891343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172670421 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143613444 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.16032374 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142208237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17139058 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144738727 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.161655334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139326027 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170445906 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.14670895 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17216938 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.142707463 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.165452743 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.142522523 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.167594147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.152916093 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.164580985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145197864 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.163334527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150596874 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170308599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137836382 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.164149855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155819676 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169400104 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.146390333 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.167278884 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.143972219 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.170746294 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153268653 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.169270688 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.140346618 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.160523904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144091159 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.139300814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.168114325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15160175 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.168164331 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.142703552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17215157 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149964601 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168877201 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.149885122 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.16266433 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152737719 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.16351416 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148339395 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161608959 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139935672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170493328 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155323802 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165103816 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145896416 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.1690055 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149119452 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160459999 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143903285 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.170610942 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149757731 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.174667393 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146743661 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.164117378 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.149112746 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.178529197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.147613324 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16552468 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15323436 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.174019196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146235984 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.166736915 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149360684 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.173519551 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149083064 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.172855501 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.144478359 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.164771721 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153383542 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.172020618 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155123078 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.165324655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.140455221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.170780097 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.143555476 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.160285187 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.149869268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173043513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.15213024 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.166034871 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143359222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.175769628 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152256094 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168047278 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.145148625 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165827372 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.1514305 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165064915 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149891058 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.164258947 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.152755528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.17523646 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152480703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.153570995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.160876813 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172165888 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148261871 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176131755 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.14798062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.140607685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.161655752 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.148496747 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.17613385 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152296322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.171284421 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.151169154 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.170832408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.147590417 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167435887 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.144464321 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.175213692 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.153426214 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.169048383 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.148274023 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.167262261 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147621705 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.167883221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152357992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.17394265 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.148348823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.176305381 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154848672 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.166007074 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.144349781 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.169005919 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.150541559 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.170193989 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151865472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.164994585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.142399603 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.173292009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.153003255 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16632569 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154245872 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173957247 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.145499927 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.171290287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154664709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.171967049 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.149311864 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.149062391 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.171610021 seconds)
  done (took 92.634774368 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196950604 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177014619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149488004 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171063722 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167707848 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173021863 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.14953822 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171151025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.150292925 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17928481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.148792036 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169799037 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.165506382 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191553968 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187732672 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160434788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170371456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.15226196 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170575881 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151262182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186094405 seconds)
  done (took 4.415671364 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.150318417 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149270239 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170168846 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149943997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.170331436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.150009997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.171551424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14951601 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17033423 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149415299 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170406516 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150123839 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.148978931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171138452 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149267934 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.171128116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150151916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171213183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150456284 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.170715913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149798589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.17065103 seconds)
  done (took 4.379220011 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.173095894 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152698188 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170508415 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.149145432 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.174549501 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.15035215 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.174970155 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149813116 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180968404 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145253806 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164428242 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145880702 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.169485659 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.15008815 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166483461 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.15133328 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.180232975 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153510652 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.176348612 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150210233 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162527162 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.150263522 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150014048 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164430686 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.154962723 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.177347342 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153988297 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.174816155 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141896955 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175282485 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.151219649 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.167125722 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142503806 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.163290528 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142306225 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175976079 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153914474 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.172317024 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152536506 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141989983 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.1739958 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153965458 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164892617 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151886773 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.173500066 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144630962 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.176043685 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151452849 seconds)
  done (took 8.567499052 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180068359 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210191812 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153712144 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.20239124 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.189576831 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160527885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177687749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180739744 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.17663105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154599339 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190239276 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164205448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179464581 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157815669 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.175956872 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154545072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178844391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154181058 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181292608 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.154700678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.181382982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.177556378 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166314236 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.185810989 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.157843675 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.175585527 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.15483177 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.179324689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164806922 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.18268615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.15788153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.18262902 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187674983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159649352 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176250486 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.158699161 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.188444704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.157888933 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178815756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153716964 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178395381 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158363784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.179213641 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.168511163 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179602588 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157036799 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178774131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.152333967 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.185736957 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156058393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183446373 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187771084 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159216266 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.179260994 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159702501 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189103307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.156851511 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.176054999 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.157795276 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.185854919 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.152921541 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179366734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.166034452 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178930644 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160253409 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.189566774 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156975827 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181313978 seconds)
  done (took 12.674408806 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187255795 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.181356651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168131646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189331199 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159888908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183092906 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.161017403 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.180132543 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.159397435 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.18724944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183015731 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.287628755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162539105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187613034 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.160859004 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183145986 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160743206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180824181 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.16038506 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181765014 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159526991 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190507605 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159968807 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.427194059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19387612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158031479 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183038499 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160091866 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.19007878 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159395549 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193293435 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159090831 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182181407 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.189232025 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.17231898 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182126582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155152272 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181086994 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160549326 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182274226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157248208 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.19172459 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160045073 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.178621318 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158194838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.181555839 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.166243207 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.194126153 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188099129 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165152147 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.180869927 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166898738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181891846 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158620101 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.189691441 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197703074 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168960033 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18952885 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158091962 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.189894888 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.188302646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175006821 seconds)
  done (took 12.130018349 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.154509103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.152812868 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.176355247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154023986 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.176479146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15369203 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.176460428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154159688 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175732752 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153831014 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.175491032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.153905046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174313298 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155101986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.175271102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157884463 seconds)
  done (took 3.527114377 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.171794192 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.193118204 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.252513046 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159208235 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.177512099 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162888311 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.178694372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.157960451 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.15396057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184885312 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158598241 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181014708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.196238712 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.156982392 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.176074345 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.160424381 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.15492878 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.182822201 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.157154411 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.252753999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.184899979 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.15830372 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.180461705 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.157955072 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.182336246 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.15955332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.189000221 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155171688 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181629032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156862336 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.181332277 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.160613232 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.178659172 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159099213 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.17961502 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157422114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.177969699 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.15719918 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.181943877 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155889657 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.180651883 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157968343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.179112512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.158546628 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.177403914 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.158095453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.177447635 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162055314 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.17923187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158225708 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.178557901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.161779512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.183349293 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.164837791 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.187287713 seconds)
  done (took 10.441876582 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168638904 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180801763 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169346046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178573406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158151466 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.180338994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.15870866 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15871725 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181973281 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154437237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181909934 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159209561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182573077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159237359 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182509591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157891307 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178674467 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.15719492 seconds)
  done (took 3.965581657 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156636469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153705929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.179322524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154475859 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179093165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.156835586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177883654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155832595 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179589318 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155909421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178335806 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.157271955 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154509104 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179533445 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.155574532 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179335165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154741605 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178856613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155359142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178064054 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157090996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179301013 seconds)
  done (took 4.578112831 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.168916312 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.253318736 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.185429307 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237066809 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.179939153 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.152367281 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.187880037 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.176903432 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.172335882 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176163324 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.154790215 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.175090282 seconds)
  done (took 3.140555793 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185128919 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.216398258 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158028755 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181272562 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167828605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184411859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16255454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184531287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169622827 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19601487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184062512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171566231 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192496057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170855247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190961714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167220636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185364214 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161668324 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179984969 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200822954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163618572 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193605206 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162754076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185928253 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162134445 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194066578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16988543 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196809804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185344799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171522929 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190175929 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162358216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194803962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173268752 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182848531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192772 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16454809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199496179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167292363 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193828698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158343459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190786202 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169992707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19330433 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194866191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163938655 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190393765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163573874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185741078 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183683763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191621085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195016699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168870217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195309962 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170800281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20729333 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197250014 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170977468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191840875 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174156923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194841747 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190484907 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172400624 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199056668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166281481 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19575548 seconds)
  done (took 12.918693642 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198181906 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183380303 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16360195 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197915322 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170621278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187954767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161699543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187720519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164018274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185395503 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.228569359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165687271 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196263785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17216065 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187009954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164176115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187029579 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195730477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161763657 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208844854 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163455772 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196355487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171560224 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196702178 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198245741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168754071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187293719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163796527 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187353783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164113048 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192985015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162360451 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195153937 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159784285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196039245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187037402 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166008541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19441327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164582032 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19180819 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172130269 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.203652294 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163393683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18779972 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199070566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165030484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186663681 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161523822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186463446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161556648 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198864465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175715431 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200042408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196075493 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164981315 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185814411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165869347 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187520424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165520699 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192986203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171120224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18904478 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.210358663 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166863607 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187808171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174442155 seconds)
  done (took 12.933804013 seconds)
done (took 227.116041928 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.303901146 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.335198631 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150673281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.354197765 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.151200373 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.869640476 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.747485767 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.239016847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.175224378 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150362347 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174339279 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.170182745 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.549527004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.150615801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.173486168 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.168109366 seconds)
  done (took 31.796952532 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.338756905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.38613807 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.167146255 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.17989194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156236348 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.179712867 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153927046 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181855039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154686151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.185261268 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.155220926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.176334645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.160920534 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.176194891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.155891681 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.179511095 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.160840356 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.178810379 seconds)
  done (took 4.377476494 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.17560138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.220294006 seconds)
  done (took 1.347777814 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185564031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.274990835 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.37885537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228651981 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177197603 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198562471 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204910764 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.192491028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270221862 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.168369665 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.194541219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177017483 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.183332671 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.185609287 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172375621 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176948619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18383064 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.194735727 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169616401 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.182354753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.181710328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182344906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.161018172 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196387264 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261315004 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.168552858 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.183760728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.155990926 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.181314816 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.170484459 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.18962125 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.17108691 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192806361 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.237310974 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.182176798 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.210880029 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.184477929 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.156881821 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.193869206 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156704774 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184474227 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.183026696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.167703728 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177187057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156830208 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.181998703 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155450634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.181243788 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.166430521 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.18219782 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.165714927 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.187921173 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233889239 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.15991426 seconds)
  done (took 11.248088323 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.993589897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203801335 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.181979636 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.147753565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207985387 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171054294 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.008849589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181931306 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309913432 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.074382434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17222225 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.192129599 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302837183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.339942251 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.370924194 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420763073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.845173537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.19817988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189224063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.225183314 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18576203 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17525839 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197346255 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.504348284 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158148323 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179213711 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162474012 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189601345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236026942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157468837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.185388938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258953111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.357584509 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.272987997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156711478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181485439 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.155872126 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.246441115 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.35522925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280488811 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251717555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154942678 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.178807096 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162083461 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.195351099 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155498336 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242559057 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.255721206 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25427633 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.184910875 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166213804 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.191055092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.161120349 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.240495876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.179981547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.42645863 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451277987 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.158760482 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187060938 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170463366 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.35075438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161072508 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301010974 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204524891 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.276302175 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181853153 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859845166 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249565116 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157528621 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188470405 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.162560057 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190091352 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.18504483 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219907364 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.484871855 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187837992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163633658 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181534537 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.299036141 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158888641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182404411 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242373139 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159397155 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188384081 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168029608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188818983 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253011085 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.337937177 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165925429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189292717 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.164232826 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192575048 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158551866 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.292226616 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31828426 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.240578917 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291735213 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163190236 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.24645222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249504983 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187901548 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.251872183 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163705036 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194099612 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16299021 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.310946036 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.198132179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186124716 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163774597 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190564387 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.225290031 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161976604 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189211701 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252427142 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.544854761 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248259713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156152259 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187465668 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164793372 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.243260753 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189910463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327023569 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164866846 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.268005659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190717409 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154979834 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189724685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.248664931 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.189794946 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166851944 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.18654083 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16933962 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343181071 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284500634 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192874177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313827477 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259532864 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.188104646 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.232803347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190453688 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250563078 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191596571 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165166674 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.184081649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869259632 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169583157 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189663783 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164202026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.266111563 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184613001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161075511 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184425687 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157761542 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854674047 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187648443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.157148545 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.18551123 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163693372 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190653085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163990267 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189859758 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244640537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310946105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192910914 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164214039 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.18534389 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.240886219 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.160271638 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.183938684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158832628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.185342144 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166431359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.189199967 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161779301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251181662 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241682269 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.319344521 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.644402545 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158542018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18478083 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306469838 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185361211 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390066711 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189307453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.30315964 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.251647644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155343427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.449344502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248189731 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268241444 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164552979 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256233701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.179158676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166887633 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.244669102 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158551796 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193189651 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242323762 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192611924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167999367 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.329781392 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184919325 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311277083 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.156470107 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253935085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186600055 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164542642 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.419735638 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160205918 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197133308 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.244338892 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16598682 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.186003122 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.957110677 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.159765707 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.193396241 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.16476362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.325635893 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246356468 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165618756 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.19256967 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168015849 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245359693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.292760413 seconds)
  done (took 61.431745407 seconds)
done (took 111.148049835 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31773845 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226139162 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.422340788 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233359144 seconds)
  done (took 2.245587165 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.334176853 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.200030884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.292333473 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.181577699 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.272406079 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.183374646 seconds)
  done (took 2.464209241 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229877696 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226900362 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225239187 seconds)
  done (took 1.688638827 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267093253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269400669 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.410871313 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323417245 seconds)
  done (took 2.335763368 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.332992833 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176187139 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.213776068 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.283900558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.297727455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267752903 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.182590398 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.235968624 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216254734 seconds)
  done (took 3.243096276 seconds)
done (took 12.976971933 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.200592757 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.224631428 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.180317553 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.197953315 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.190496221 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.218279084 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.188558266 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.214421122 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.187306151 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.198860763 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.18474968 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.195399639 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.274741711 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.188077269 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.195459283 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.186767814 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.196548807 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.196291092 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.215513998 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.170276891 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.216613649 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.169711875 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.19645948 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.176938701 seconds)
  done (took 5.760539452 seconds)
done (took 6.767702792 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.261491353 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.180252112 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.169685405 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.195845784 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.269310923 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179389991 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.209698244 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.17249484 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.205295729 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.170498218 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.182602411 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183528925 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.194846565 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.240066631 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.199198096 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.186172278 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.162274127 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.204365514 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.185757979 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.229781175 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.243748175 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190750444 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.18028375 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.187633357 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.274053007 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162690032 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.196323918 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.170920967 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.20963434 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.170526503 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.197010039 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.160929333 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.211481781 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.184757782 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1860789 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.170560795 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.185145192 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134940414 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.195343696 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.172226789 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.207266651 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.171776034 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.194872337 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.162149111 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.196363169 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.170891774 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.183466417 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.17475253 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.184053852 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.172825888 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.185391662 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.18738605 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.194024324 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16233 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.159293651 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.189547427 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.179758124 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187357344 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1842265 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.187396875 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.161778673 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.18833645 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.172876593 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.187827307 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.170068694 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.188684818 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.171648224 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.198538236 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.169189811 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189113155 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161107848 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.196459061 seconds)
done (took 14.577545301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.166658064 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.228693956 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.272473336 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.24551502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.219947243 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.204108847 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.176711438 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.209289603 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.175738479 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.204265082 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.195828115 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.220047535 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.276476709 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.177906423 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.205930586 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.172339373 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.198229258 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.167598198 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.274616695 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21377516 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.185694424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.206730059 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.186394164 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.205575793 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.165808864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.223975968 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.194131251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.175558848 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.19001725 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.175174022 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.211019851 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.165807537 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.19351574 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.183932328 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.208985863 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.177466212 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.205003443 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.173575565 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.191366374 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.166417531 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.199419842 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181091325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.192237854 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.17830808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.200534859 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.18009469 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.199792097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.177910124 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.192411689 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.172283081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.192611086 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.214346461 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.182377033 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.209157044 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.17986589 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.204567844 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.180030435 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.20384799 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.170220109 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.203404707 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.168330414 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.19465939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.169040979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.211967179 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.169874465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.202680872 seconds)
  done (took 13.936409652 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.185857643 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.223930991 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178301235 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.206134453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.172690466 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.187894913 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.160202564 seconds)
  done (took 2.348466031 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.162763156 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.282756418 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.278907324 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.279522557 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.276065833 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.289058755 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184728379 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.189127402 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.19771788 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.200134877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.280218315 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.308609425 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.171799151 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.203600961 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.283364455 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162735988 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.284781955 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.264539087 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.175161729 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.281728564 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.20871439 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.194392877 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.202117671 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.161049251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.274498175 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.192337447 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.332774161 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.180705242 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199870179 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.175453527 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.204713602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.267686065 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.275743864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176887368 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.195400267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.279263655 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.248900646 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.20549331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.292472598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.16568741 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.275463451 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206220637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.178632493 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.205298803 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.176964124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.268043234 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.210078879 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.179328461 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.2038211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.287820609 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.174938937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.28148335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.202646649 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.17834747 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.20058242 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179898645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211193965 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.178633051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.285922183 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209004301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.279704703 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253541389 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.279628436 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.282553668 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216299922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.282227091 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.270453177 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.178902429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.281107116 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.206163228 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.2808941 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.178117343 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.202929856 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.271516161 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182243636 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.284989593 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.284881199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175371044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.205939247 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.167727265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.205705698 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.163945709 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.270932637 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.206376803 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.177997216 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211918359 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.177559311 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.206826091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.276707953 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.187085662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.207062085 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.175921184 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.211861439 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.17737486 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209173318 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.288984654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.174355132 seconds)
  done (took 22.821693178 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.168386288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.164633086 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.196852547 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.165956858 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.192520362 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.164447168 seconds)
  done (took 2.119270753 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.203407151 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.205895526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.188894692 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.206858358 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.226837574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.287801263 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.295997836 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.202066617 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.197499836 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220501294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.291735003 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.292324883 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.290126838 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.183742989 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.295579417 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.208806721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.270649012 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.208088612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.213523871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178993153 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.205940923 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.18482022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203274662 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.253749307 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.210330518 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.21037368 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.174522402 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.218950399 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.188636069 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.200909767 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.184197167 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207088555 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.171427736 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.201433716 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.298777589 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.171898466 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.203956662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.182393166 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212722582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.181177648 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.293909093 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207583729 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.186288005 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.212149395 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.175365876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.200919684 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.181842049 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201642192 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.299281284 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.182697255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.211588568 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.180486848 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.209741127 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.181890029 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.200042967 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.199468522 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.184280208 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.298685887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.21215973 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.173009082 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.207034778 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.183545128 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.200198713 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.185971833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.207076472 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.183627332 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.198911258 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.181572671 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204415659 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.181518473 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.211082988 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.181018131 seconds)
  done (took 16.322785461 seconds)
done (took 58.571241288 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.726538899 seconds)
  done (took 2.793813515 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.152737859 seconds)
  done (took 2.223157917 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.056387688 seconds)
  done (took 19.16082967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487084077 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.410668004 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.08615069 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.237706764 seconds)
  done (took 3.294936109 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.147827807 seconds)
  done (took 2.23763839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.460369926 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.340069083 seconds)
  done (took 1.881715545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.797770443 seconds)
  done (took 1.888330003 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.788774676 seconds)
  done (took 2.86768513 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354776121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.282581674 seconds)
  done (took 1.727884111 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676744647 seconds)
  done (took 1.771917086 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.196474426 seconds)
  done (took 14.293284013 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.315607523 seconds)
  done (took 1.413685707 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.353326076 seconds)
  done (took 1.453874896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.632196525 seconds)
  done (took 4.731508595 seconds)
done (took 62.824309992 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.181829128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.208966727 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.185067389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.207019202 seconds)
  done (took 1.86987207 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.184911713 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.204985425 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.185318747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.204380738 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.187546056 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.20606552 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.180651813 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.208159921 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.181374182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180734226 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.208929501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178803324 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.211500429 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.177017692 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.2065278 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.182088379 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.210902518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.17963255 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.208841361 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.179404727 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.209028885 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.180017445 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.211196898 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.183392036 seconds)
  done (took 5.745568273 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.178579134 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.169940395 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.201971983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.170000669 seconds)
  done (took 1.826825394 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19156598 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.221270317 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.194955867 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.217594431 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.19628369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.219743097 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18128695 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.204725894 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.181293864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.217778113 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.196377068 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.223955504 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.192858463 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.214071706 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.192116749 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.204634542 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184860938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.220973351 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.188785599 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.220765084 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.183754303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.225301835 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.179298988 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.219614589 seconds)
  done (took 5.98117051 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.256256469 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221030412 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.206579761 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.254104101 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.237890656 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.1797202 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.23391557 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.186437256 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.213670328 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.181307483 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.207676479 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.226240013 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.212458372 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.182590817 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.209423838 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.18565182 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.217707852 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.183121052 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.250882602 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.211074118 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.18676998 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.218293332 seconds)
  done (took 5.769606736 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.265736515 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.201754008 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.168439017 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.19910849 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.182859636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.203566878 seconds)
  done (took 2.331245684 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.170354205 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.164865239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.194898318 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.164445982 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.19703993 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16589456 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.191817549 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.165962864 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.194360959 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.165378642 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.192290375 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.16552908 seconds)
  done (took 3.247370144 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267799977 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213256658 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344784697 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.458067468 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254405605 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249331217 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.369879997 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222701783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27147684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227154724 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272901044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226122539 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246149458 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278985477 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206101697 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.24196366 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264133868 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273942797 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234228738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307893902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247399268 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26709437 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256072088 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239611267 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230190166 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228242712 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.215401483 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190842844 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260424528 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257356469 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268186129 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241965267 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205741386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278124125 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319563751 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272378212 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358391176 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226382629 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.252380348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.258052438 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.354801404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206495952 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286178011 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246658252 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192528882 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28660565 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243975788 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.277620499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.197558083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236179894 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277225128 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242582454 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.262897538 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230767055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399711793 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2261444 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.206019564 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27096644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280610265 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295547849 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243491997 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.21728203 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263549227 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286370564 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312167839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.20419063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.257719225 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217967872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22639108 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300043393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275922727 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25290751 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.283515802 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194729511 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269946898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258959816 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246722715 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303772288 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23664371 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.213938449 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24370159 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199778617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218084018 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.254106126 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214351908 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313212665 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195723074 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.269876079 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26797898 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215643484 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254884996 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254402672 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253687707 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212438537 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.184713713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206765958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.252816088 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249579084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194992883 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243417756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203471265 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.220754399 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243906156 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.187944361 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263913379 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190498666 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253672691 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26356089 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.196488185 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274667121 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240448034 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.227750121 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261566852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293689372 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22278678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197058579 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316797548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267183138 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.227699137 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236817545 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.293571061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.236005849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199183151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261485975 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287479783 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236407157 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264940674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233135303 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228212051 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.193971174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270115914 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2536685 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.224539377 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222717358 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.259203702 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279853465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.192866356 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233164357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248895478 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229543855 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216642284 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201136681 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228227766 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.205686631 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.245947966 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.230613474 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219753992 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262552452 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260540185 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221310545 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230587074 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269345774 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194167988 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.265355252 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240469197 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.183939941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.268820149 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295443156 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192319917 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275612492 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.255331212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271780371 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267921012 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194071746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276808035 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220210335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.185856805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256796832 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264175214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227887569 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.286625974 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270604173 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.259115632 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.259245816 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212765744 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262728451 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.281121503 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252314348 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.205008611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269167748 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264324884 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.184963605 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.218324551 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.192378654 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231487887 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194869403 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231677366 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276046347 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257962343 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266313963 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233843424 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232835335 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292300369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.189033745 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255973263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.272761711 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203248402 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.285485187 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28941739 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277711712 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233295868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229627595 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.215362513 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191367212 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229283137 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.252771389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202886694 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229285722 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206247316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289732654 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265174642 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243805934 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280063478 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229337823 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.299378712 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.216916342 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.225372165 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26149282 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265104382 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2546761 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225685683 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.252924063 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286687574 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207414993 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28699271 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265762567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276220391 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258629048 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.262087519 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224110552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207806104 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256333086 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232843087 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225808045 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238282046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195091778 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243602486 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.23372595 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205660441 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282151103 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240076409 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271514136 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.220194342 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265087621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221393656 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207738498 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271436891 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240725235 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.160711638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262655258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287301688 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215186512 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247483845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265904275 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195234394 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.414692539 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279193465 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26718663 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202968688 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23494063 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270527139 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223235929 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255538362 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.280141071 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20587618 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308309947 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269794574 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.233663024 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197386414 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243523146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214919509 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.225716832 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.248764804 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.232000312 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.239920104 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285891034 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232842598 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242351489 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276174505 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.24174813 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.216215693 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23409143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328295728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265934795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239321145 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.262453696 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.259461695 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278181395 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191896749 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220873199 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.198310204 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280993414 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194477733 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277720652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257609365 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273718606 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273336993 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258054813 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207408009 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.221771149 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233689005 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24817297 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275185762 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229917505 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.203300643 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282457358 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.182050385 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228180832 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255515802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383278209 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214110886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266343227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.162458787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.382126317 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223729428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198619252 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255366692 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265311951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.199595703 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.282127147 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272965298 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207320149 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256171194 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200791805 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271962028 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277038791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265667303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272540942 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.210866271 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259309372 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255710031 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267751786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213617598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.243555064 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224423999 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293883251 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.272077546 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.227371092 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238656396 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270979152 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270141825 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270005844 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206351171 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2806257 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194045277 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264813842 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236328097 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190770697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258495861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.260676933 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197354915 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268472059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270565412 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227897835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195325467 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243918379 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233487582 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237932212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.225923911 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286192748 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.19705802 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281382639 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311416905 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195400617 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.265826331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238237348 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199151582 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234253672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210645222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229557055 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.242953451 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272402936 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.228130127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239045901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262638496 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262449925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250509719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210458048 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.364045456 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.196278521 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29384868 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249873116 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296214414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216434226 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276622258 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268394465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215698169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265128408 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246520245 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.318702749 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234291805 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.267978071 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228522775 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210719044 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237007234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.201275595 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249258442 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269104891 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209341705 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.236078485 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.266301113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213214334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.245025572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209228353 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301678726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.250073141 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288140971 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.284698843 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206666364 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277878423 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274120753 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196035125 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.26122847 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271180225 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210670086 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250722875 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.231958827 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.205142218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317440367 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.224592736 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227626782 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27673987 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26977006 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27222505 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.203744554 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279494341 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208471482 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277098505 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225310844 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.218889358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269955557 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231934173 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.194192432 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272754098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257811346 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.233950211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240902492 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.247242893 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291849194 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.222589129 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202283893 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385829232 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259070655 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293612197 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.191235212 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236514573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213020245 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258159924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.267039335 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270881863 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.198332414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227155841 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.214992703 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.248081129 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.195660495 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272100034 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28073151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224712864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283466284 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.233903208 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.322426337 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241063267 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27365994 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.176484664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.226501498 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208354917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234529125 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20913679 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275644968 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317416761 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.265745805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.246806804 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204320954 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.224722292 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199521112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259273543 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249057928 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238864453 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247837522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.160740692 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240497902 seconds)
  done (took 119.904204791 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312522494 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.239453146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.245053438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.29628642 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266758154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.363400052 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.303334593 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.317100171 seconds)
  done (took 3.580332527 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.187534253 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.233209055 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244635229 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.186696996 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.20834074 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.526691557 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.234392097 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.188946932 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.259874387 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.220742037 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.179612435 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.638670742 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.217682709 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.216381636 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.217484081 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.177536823 seconds)
  done (took 5.366422853 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430525907 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.740963149 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.332938008 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.415320761 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.374514944 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.291433569 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.943706948 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.2866148 seconds)
  done (took 14.057693091 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.239871635 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.272970606 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.43331467 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.370293597 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.284483243 seconds)
  done (took 2.845739741 seconds)
done (took 173.613351954 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.192185822 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.19205459 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.225650831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.194133207 seconds)
  done (took 2.031031321 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.234277488 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150076626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185927554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.149023699 seconds)
  done (took 1.965342381 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467393654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150466131 seconds)
  done (took 1.884287102 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.213980493 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.235173272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205281202 seconds)
  done (took 1.909534725 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.203608224 seconds)
  done (took 1.453198902 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.189191446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187105008 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.306911514 seconds)
  done (took 1.932416476 seconds)
done (took 12.423982059 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21158801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.028885027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.651637125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.202904014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.82310048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.467251108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.569049667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248403166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.271573361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214125483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242928937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.761725496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.552763379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954376601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.535319889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952873617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.855085413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.180593077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218536798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181760613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.552153455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.179332302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212289146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18065321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.80114713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.487073741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211126429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.959644589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.209930886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.189706246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50044674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181003325 seconds)
  done (took 24.024120735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.181795465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.268487983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236603342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.213688067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18793151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.212565718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191041194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.224666558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.310841134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.180111731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.2334271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.179297381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.217918982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.181038944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.235263577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.179541128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.214950379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.181655363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.21912612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182198379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.232572522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180466874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213984334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.182332613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.211036124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.198323404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212422054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193423479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.211562798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191714324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.21560961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181958334 seconds)
  done (took 7.916367298 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.223210647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.278644512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237896244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.252612222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.267144865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.182396519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.300306624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248965668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.287304343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215695096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.20204322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212625292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.221234627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.214004169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.204923196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.211233914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.183593528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.214398633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219721516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183972557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233882186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182195934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213054607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.182852372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.212051128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.201723208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211216943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193281282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.210853908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192567225 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.218592671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181527274 seconds)
  done (took 8.263590084 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.195189905 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.194974514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.236721723 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.236671367 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.191433492 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.19388981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.228700592 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.192251822 seconds)
  done (took 2.941942897 seconds)
done (took 44.40187841 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.20266369 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.22867496 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.202856383 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.19547821 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.300013709 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.222022996 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.199509798 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.220504717 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.195285029 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.235034078 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181373623 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.220373415 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.202266573 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.223010273 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.302436783 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.197895906 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.307566486 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.304973558 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.188435484 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.227516712 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.191024292 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.30797394 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.228822045 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.190318126 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.289013358 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.185930487 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.29381348 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.191411142 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.228638432 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.180831724 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.305245311 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.225530146 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.190116285 seconds)
  done (took 8.822835432 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.287694755 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.224656013 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.190900952 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.224148337 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.192099777 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.22338099 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.324385734 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.732409897 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228148356 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.18933553 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.188561757 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.307524721 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.230565004 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.186097757 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.224989994 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170995348 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.325391798 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.190839072 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.21555241 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.154136221 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.217543306 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193188045 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.337327812 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.186295757 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.222963619 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.191611308 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.223993009 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.195623271 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.225190997 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.192357073 seconds)
  done (took 8.481755396 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.19589174 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.203299665 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.243344213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29032833 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.221409649 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.23633131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209211381 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.234490294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.212844804 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.218715872 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201074313 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.254368171 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201346903 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.228360394 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.183990926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.233020903 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201034363 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.217975414 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19317226 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236082326 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.204645019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.236627647 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.207401584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.229391531 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.185448582 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.22667694 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.194963689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.229269029 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.19406532 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.233481507 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.187031465 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.2204501 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.187599066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.253551376 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.187041103 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.231940039 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.206621456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232852027 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.19966303 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.252000621 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.18728911 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.222163657 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.212604271 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.276013661 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.187396875 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.229846896 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.188952729 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.234397404 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.183361097 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236946612 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.22926847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.218207218 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.240988327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.184386995 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.183642487 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.22744694 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.185683878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.22251398 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.199996033 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.220991021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207194994 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.227796146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196702248 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.221945193 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.197346045 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.218791649 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.186161941 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.224118445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.21395081 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.226968248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.223136616 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.219307986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.19772661 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.233179373 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.197577081 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.231709284 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.18479424 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232253138 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197197144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.224167473 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.199179169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.222226373 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.188136076 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.235408567 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.207974282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.234582554 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.200895589 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.229998801 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188564622 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.221043403 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.2045471 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22184064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.19063751 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.232438706 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.186871948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.222435758 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.197897302 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.229007194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.185743452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.245865553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.191392425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.219152309 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.213023458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.222933657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.190539523 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.228814083 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.229425823 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.219176196 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.196174248 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.229190178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.188997637 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.226908254 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190122431 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.185688068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.234675443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.202338509 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.227285188 seconds)
  done (took 26.386300241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.404402403 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.395438554 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.289689353 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.443338779 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.235458014 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.318868762 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394267386 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.397936288 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.187191612 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.257032615 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.27677493 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.360261734 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.187703897 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.250359212 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.401443857 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.477687352 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.217920659 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.261853759 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.257011943 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.201105741 seconds)
  done (took 7.520663906 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.19817129 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.253960158 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211579489 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.237534955 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.199397004 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.233569995 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.187954628 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.24093008 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.200275119 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.227106952 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.190759523 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.227390857 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.201464446 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20161251 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.23650745 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.209801261 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.227589836 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.192086089 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.244186638 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.192733238 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.199885474 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.212924911 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.230006832 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.208656213 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.237710815 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.197478255 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.219277256 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.193226317 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.226280171 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.198322636 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.223519276 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.196831734 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.227013715 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168952211 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.231845893 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203708098 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.226032235 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.192554724 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.192634622 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.222352298 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.201248218 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.232764446 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.19708847 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.194636693 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.20792274 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173481278 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.236444871 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.200079982 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.202849539 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.209021203 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.233715894 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.203724161 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.228395385 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.210590607 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.228476331 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.206861641 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.231474687 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.202405069 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.225628482 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.186791421 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.218938036 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.192005981 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.230476236 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.203125062 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.232794617 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.197289753 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.228136414 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.189297955 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.225188273 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.191995853 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.190695758 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.233459576 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.242215159 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.198839601 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.194929118 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.232419919 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.196700293 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.191448856 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.197778991 seconds)
  done (took 18.047429635 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214185966 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.232913557 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.206133895 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.254198597 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.201846408 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.226514349 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.200379392 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.24068787 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.204407907 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.239965152 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.204962586 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.233975145 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.211647864 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.232443595 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.200407957 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.237856643 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.202030928 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.25906807 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.200919894 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.248658576 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.204708643 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.226234496 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.201966256 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.233978008 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217985821 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.233063297 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216514195 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.234200243 seconds)
  done (took 7.554721938 seconds)
done (took 78.088362565 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.505348271 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.731369401 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.415973428 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.422284217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.424868344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.44510765 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.41977014 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.42104167 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.004965017 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.394004712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.41726619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.417172812 seconds)
done (took 31.381594615 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.606798602 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.167843341 seconds)
    (2/2) benchmarking "String"...
    done (took 2.185121097 seconds)
  done (took 5.670718741 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.145193254 seconds)
    (2/2) benchmarking "String"...
    done (took 2.165866484 seconds)
  done (took 5.621586237 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.411790424 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.40467688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.887915915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.411540881 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.402606366 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.415178285 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.404449057 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.411689783 seconds)
  done (took 17.649071436 seconds)
done (took 35.271584257 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.49283823 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.606929554 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.660007813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.391788997 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.428655418 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.403952765 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.408880766 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.436808968 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.410449332 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.398619685 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.918148809 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.664511528 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.405286874 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.800273974 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.389538711 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.432555494 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.420520864 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.653081163 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.408892849 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.452023892 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.397299126 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.393690427 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.434180911 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.419224121 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.417685518 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.415705028 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.45964197 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.404424403 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.607037319 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.418104425 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.449077708 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.405985287 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.396433723 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.420770407 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.41404476 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.407292994 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.696318505 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.420930692 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.393423284 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.414381116 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.656220738 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.419264978 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.404480905 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.41258417 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.403203857 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.395702763 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.397200021 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.589141958 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.435921984 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.4154448 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.440237407 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.796978792 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.411610862 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.408959477 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.415860494 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.65414757 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.430676974 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.489218985 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.439233159 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.409677515 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.406790138 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.40486154 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.477517917 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.410716544 seconds)
  done (took 157.407900548 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.405607794 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.410723528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.410566595 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.420116064 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.409560881 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412738519 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.405198873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.405396524 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.410576722 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.422128471 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.412233009 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.411828697 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.4133365 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.423579912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.417382266 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.43025604 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.413740462 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.408563407 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.423121334 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.406668334 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.41807593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.411723726 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.413399079 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.412273795 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.424307379 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.500379762 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.425664046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.424243613 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.42226955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.406219813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.413966818 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.422714439 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.158368463 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.368242428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.425922947 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.453392083 seconds)
  done (took 88.087608768 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.408744855 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.409655586 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.408332651 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.444577484 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.408010055 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.03939209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.041904002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.423731607 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.900270768 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.003804325 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.732357306 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.41386464 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.502656588 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.423764712 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.411829465 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506099693 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.437527915 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.412531091 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.409658449 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.046201406 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.42850896 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.451228401 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.597687038 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.409632188 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.448098882 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.811708668 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.409097833 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.444648024 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.749995582 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.446056094 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.409391236 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.816124942 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.816265882 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.528422085 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.413131028 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.44456624 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.411495833 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.698368417 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.41137836 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.410763407 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.411768215 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.415164526 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.117269242 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.417453016 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.041858605 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.417548069 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.437586581 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.412640742 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.410807408 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.412022716 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.097189525 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.240352911 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.416889257 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.412249979 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.415173815 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.411912576 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412440088 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.447701485 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.106993145 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.308720334 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.414099377 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.415625688 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449154882 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.412058335 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.411821922 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.447521854 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.413291592 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.412709745 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.471114379 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.563533673 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.516423912 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.054835325 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.418942101 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5108313 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.534593401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.41423445 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.411808303 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.413404316 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.413492945 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.526561164 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.414355136 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.235624656 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.598770068 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.414607263 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.963924882 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.519672927 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.415454228 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.839224527 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.420645461 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.413887967 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.180483635 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.513077187 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.414734513 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.416048647 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41630685 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.235322034 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.025097325 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.746015398 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.420768451 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.398846949 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.420697004 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.370644759 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.016986098 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.121958106 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.416926971 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.528054091 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.602211356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.417980876 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.415252805 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.96640767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.418123003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.477729536 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.415527701 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.819035158 seconds)
  done (took 404.461799028 seconds)
done (took 651.269461238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403362118 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.403043991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.403934746 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401965571 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.404124296 seconds)
  done (took 13.336921825 seconds)
done (took 14.656491863 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.417622521 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.426288357 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.422663035 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.224600768 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.423745646 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.425670122 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.423702483 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.422239379 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.42538091 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.424213093 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.197182826 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.427050116 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.426377405 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.375413172 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.222101428 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.427172827 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.310547032 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.426448922 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.42159181 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.804925961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.431089037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.551298038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.768316558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.492445094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.799871409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.836631809 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.430855349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.664509642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.468630194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.470380138 seconds)
  done (took 21.041234434 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.323105892 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.801698177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.43021658 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.551525791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.780078039 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.493218376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808001702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82869756 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.430629621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.674823663 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.473698436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.470880899 seconds)
  done (took 21.06811795 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.174456403 seconds)
done (took 93.200332321 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.481334742 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.558295088 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.474577109 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.459765659 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.459249672 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.4605967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.463982327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.458331608 seconds)
  done (took 13.139203386 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.455311671 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.458414998 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.455062407 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.455016592 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.454093359 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.454029524 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.451861442 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.455973766 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.4565707 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.453933074 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.45561541 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.456528935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.458849341 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.457600369 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.45631976 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.456120084 seconds)
  done (took 24.615999005 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.45870463 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.457338884 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.454816426 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.455449817 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.455500452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.456536338 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.459624091 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.457924922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.456701582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.45599402 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.459626745 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.460159214 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.457989945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.458407874 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.457194033 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.462544224 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.454531054 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.456459582 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.459886693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.458349138 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.45785103 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.455169404 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.457814154 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.45521955 seconds)
  done (took 36.305293782 seconds)
done (took 75.385480027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.436178092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.433672885 seconds)
  done (took 6.198543894 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.55829425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.55682004 seconds)
  done (took 4.443989002 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.459125424 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.456999246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.460793233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.457833709 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.455766756 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.455943664 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.459989849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.461632028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.459101258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.456059252 seconds)
  done (took 15.91012244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.458484909 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.463062796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.459128357 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.457122794 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.461224434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.458602592 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.458768046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.458327278 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.456902655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.458779151 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.463000008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.460621075 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.460848967 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.460264605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.459854777 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.460409177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.460773539 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.462609596 seconds)
  done (took 27.606762565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.483855873 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.489074135 seconds)
  done (took 4.302425958 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.644845549 seconds)
    (2/7) benchmarking "second"...
    done (took 1.544558704 seconds)
    (3/7) benchmarking "month"...
    done (took 1.629249502 seconds)
    (4/7) benchmarking "year"...
    done (took 1.61534515 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.543459332 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.493319297 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.542741155 seconds)
  done (took 12.343272074 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.468819114 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.808056108 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995540843 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.684489767 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.455972299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.479818697 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.413077808 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.483461968 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.482106628 seconds)
  done (took 16.601559249 seconds)
done (took 88.731330012 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.430024657 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.47224441 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.467642149 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.455052769 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.827156862 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.480408438 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.437384251 seconds)
done (took 17.898413968 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.426842198 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.417166736 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.435198149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.438467769 seconds)
  done (took 11.047649216 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.439152074 seconds)
    (2/2) benchmarking "read"...
    done (took 1.836579568 seconds)
  done (took 5.607435345 seconds)
done (took 17.98510502 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.463733622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.460367761 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.461695653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.463288802 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.461250764 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.461332129 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.460690777 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.465844085 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.462134186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.462010776 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.461627977 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.464106015 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.460197487 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.461873958 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.466779749 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.46325926 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.470944944 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.461664294 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.466550391 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.462114142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.465814473 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.462445958 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.463127329 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.465121298 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.46220291 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.463509431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.464520174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.462441558 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.466538796 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.462609526 seconds)
  done (took 45.231356028 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.472475935 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.470690302 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.466594809 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.463819805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.469451108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.465596777 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.465072897 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.46839881 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.465557317 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.465966308 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.468150105 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.467894975 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.466623794 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.466454079 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.466080428 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.466028885 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.466335699 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.468481641 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.465554663 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.469003146 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.467846295 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.465735552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.465233463 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.464787457 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.470383699 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.465697908 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.466126244 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.463938047 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.46776947 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.46941514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.464528904 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.46540171 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.468122378 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.469997686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.468686695 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.466501571 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.475615789 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.474898449 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.467555685 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.46666961 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.464942435 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.469845851 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.466051793 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.466755794 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.466274796 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.467323184 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.466668422 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.46664272 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.469932035 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.466266904 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.468137394 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.468813248 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.46510279 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.4673294 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.468271419 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.468193406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.467284073 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.4695074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.469529191 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.46773413 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.467968588 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.46823126 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.470306664 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.46917328 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.473390646 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.469496296 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.470832219 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.467600804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.4700926 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.469259883 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.468711629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.469108327 seconds)
  done (took 107.019802172 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.469312613 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.468861298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.468634524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.469939368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.467903146 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.468637528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.470730181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.468229794 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.468478149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.469400753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47697951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.469867502 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470246671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.469246613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.472949109 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.469332448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.469122854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.467710245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.469582969 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.468501197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.4687682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.467607299 seconds)
  done (took 33.668350285 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.468455311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.470953673 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.468067832 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.475609364 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.475275103 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.470984823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.469930289 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.472483268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469106232 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.468628867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469379241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470555787 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.475194436 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.468826029 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.474419338 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.476056488 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.47029933 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.477380679 seconds)
  done (took 27.83106106 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.472658779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.469582969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.474288874 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.471131559 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.471674506 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.470615642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.471132746 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.474394126 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.470911839 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.471305255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.471259649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.471017997 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.47045347 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.471030639 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47147462 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.474429395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.471251757 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.473171972 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.471246239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.47217387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.472274791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.472227299 seconds)
  done (took 33.720753038 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.472371451 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.472410912 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.471270893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.473491217 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.478442195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.471927261 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.475274614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.472660874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.475149389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.472679731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.474367027 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.479085225 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.478117923 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.472710671 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.473821427 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.47172123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.474221408 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.475827757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.473235598 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.473596818 seconds)
  done (took 30.823857908 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.478557853 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.478570494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.47859005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.479277218 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.478250062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.47976506 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.477819351 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.477617859 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.478094176 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.479569015 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.477954703 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.479610571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.479251586 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.479757796 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.478615472 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.478247967 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.477817885 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.479556863 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.478741465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.47983546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.480714412 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.478672882 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480247244 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.481038685 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.480716577 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.479915078 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.48208819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.481460178 seconds)
  done (took 42.762777726 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.505946391 seconds)
    (2/2) benchmarking "in"...
    done (took 1.505976842 seconds)
  done (took 4.357889645 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.478630348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.47736189 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.477559472 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.47925424 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.47657457 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.478057719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.474253954 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.476078068 seconds)
  done (took 13.16073727 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.473095147 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.480549308 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.479619301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.477265719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.480474717 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.470305826 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.489791334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.484612254 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.469522906 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.475198418 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.480553218 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.475178373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.47357335 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.473200468 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.471050963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.475387128 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.482159568 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.483550666 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.484547092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.480308146 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.480742209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.474118112 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.490973468 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.485184673 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.474650442 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.494167729 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.484596679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.489588794 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.474287827 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.482357708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.476034837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.48439868 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.47983979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.482621009 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.480306609 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.481728018 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.490665468 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480058812 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.491011951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.487849188 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.48089118 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.481694076 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.479284412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.478579295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480466266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.483261245 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.481016197 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.482871879 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.473466982 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.481110621 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.48783089 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.473849363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.483779467 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.483425581 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.479857599 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.492660135 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.488663608 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.480246615 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.48114673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.497502999 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.50368968 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.492571227 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.483705086 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.484955315 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.492562567 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.488904909 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.492927278 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.494728485 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.488277455 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.486080528 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.496881552 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.505755306 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.495894415 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.489281284 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.487548311 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.48351875 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.478558272 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.485583747 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.491980021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.491965145 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.489443874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.483251257 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.491287754 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.48855235 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.479374717 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.487860153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.486620121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.484447778 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.476428183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.495235113 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.49248211 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.484199911 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.477586151 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.482970285 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.482957295 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.486008731 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.479298241 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.482426431 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.486516058 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.485368636 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.483994019 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.483014356 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.493360085 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.494506738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.48809489 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.498302472 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.49180423 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.484298597 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.499558498 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.49819785 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.484558686 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.479492818 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.489215074 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.492496916 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.48606635 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.492193037 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.498230955 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.487619549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.490540033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.486579613 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.492384681 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.500018473 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.49440484 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.484854883 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.487920356 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.491130471 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.485809473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.490295239 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.49149183 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.486868407 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.488396674 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.489847696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.494321171 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.482855955 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.490588712 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.485681594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.503088556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.487380065 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.487662433 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.491020471 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.488679531 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.488810763 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.493732478 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.49857241 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.494789875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.492208402 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.50941932 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.489330312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.49513112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.493654256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.495378986 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.490613506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.486192622 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.493204129 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.482386622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.491660567 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.484114915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.494921666 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.489213887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.48947656 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.489657449 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.483251536 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.490269747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.495248663 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.49487159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.492157976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.4952979 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.489944915 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.496029209 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.483730089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.492919526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.48475941 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.490739709 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.497098689 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.491285588 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.489572661 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.497051895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496962288 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.489385207 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.491638288 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.489666877 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.497214695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.495092986 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.505236245 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.499544251 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.490818491 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.491628509 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.487993969 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.48920362 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.495080485 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.487396267 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.505140772 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.507312208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.506227294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.489062681 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.495789793 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.487255467 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.501092282 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.500366073 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.499169762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.494172827 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.492354649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.486769232 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.497437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.491291107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.496127545 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.48658101 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.50068427 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.497796333 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.498996904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.494671145 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.489220731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.494177437 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.503472754 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.493031481 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.499565413 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.492206656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.496677964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.485417804 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.4928339 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.500522378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.496252771 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.506918303 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.500840645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.498105241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.502375337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.495935691 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.490302294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.49704086 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.500815502 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.492839907 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.506616379 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.50129601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.492092047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.507363332 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.498942568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.489513366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.501345178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.504093223 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.495052339 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.495068123 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.502979534 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.499099362 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.495039208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.495470269 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.490414249 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.500170168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.510877815 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.504181781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.494449888 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.500289317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.494588522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.500570708 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.501082994 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.503193388 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.501876042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.504489642 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.503504182 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.497170276 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.494334371 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.498327406 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.49713738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.49566792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.49313757 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.504673884 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.509521777 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.495950847 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.506409369 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.496559513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.499957223 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.491053157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.499370834 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.4932035 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.51829461 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.515046431 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.507559935 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.503031147 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.503236201 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.508322462 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.502056162 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.494216129 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.498151336 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.499451082 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.493047475 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.494912376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.502814289 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.495855514 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.503619769 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.503610689 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.499693432 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.503414365 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.497896346 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.49255705 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.503611109 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.497531006 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.49953594 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.491215608 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.501013991 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.499569463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.507736424 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.49780632 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.498513743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.514154838 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.502530106 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.499699089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.497331818 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.499043978 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.494007863 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.505632315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.512146272 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.498812524 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.505192246 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.498295559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.502901661 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.496918428 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.517028038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.509644907 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.498368333 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.504511153 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.500651584 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.492472471 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.494776815 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.501692568 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.51097685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.510646151 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.496097863 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.50258982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.501388759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.502005877 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.501757102 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.499572466 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.506516087 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.506226735 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.512300691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.505502061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.501696619 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.511938774 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.510990539 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.503316867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.501418581 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.494774091 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.512900488 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.512911314 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.510548933 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.503937546 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.505035871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.509681364 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.508240608 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.503492728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.509244157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.505272074 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.517720305 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.509706297 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.51217805 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.506798526 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.521269848 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.517707384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.515577645 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.522280801 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.504094341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.511159554 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.507727624 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.501796702 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.499704467 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.501825756 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.5111217 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.499406104 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.514877206 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.507722804 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.511888628 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.516882279 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.519176076 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.496736282 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.515643994 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.521021074 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.498960028 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.515641898 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.507835668 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.50043808 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.513288247 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.512257739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.499582943 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.506981649 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.506769541 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.51294819 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.502183064 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.51336591 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.500837781 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.515953112 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.509032748 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.507811434 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.511875637 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.509882437 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.500635311 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.513724336 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.515647067 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.517407346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.509788081 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.511206907 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.503934823 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.526601462 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.52028376 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.511018475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.519564953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.514805339 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.501373883 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.511895752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.518529206 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.504854493 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.51505125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.5015598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.512083485 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.50611855 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.520583029 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.509705599 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.518506718 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.500419781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.50322747 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.513174406 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.514101828 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.514820564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.515285149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.519516413 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.503515496 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.503511445 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.514021441 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.511157389 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.518307671 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.505749509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.508324976 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508592608 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.515192679 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.510529237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.514041555 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.501807388 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.502751572 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.527955894 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.517258515 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.511810894 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.509694564 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.517215352 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.50659431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.512440933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.512112679 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.509473307 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.509036799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.518412921 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.507286716 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.506827929 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.505055566 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.515524914 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.527910149 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.514742972 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.504784722 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.528341628 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.52561698 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.51975981 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.509248139 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.510684075 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.508623198 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.515415542 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.514670825 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.506285331 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.529860117 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.518161492 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.517954134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.518746134 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.510940253 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.505844842 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.522638318 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.514776564 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.518656528 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.522644674 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.522104522 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.524405164 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.517833518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.516229682 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.505550113 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.508857237 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.51322546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.512778825 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.516562755 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.521909664 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.517435213 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.519300744 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.520210426 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.514161892 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.514682838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.515527359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.506856633 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.521698116 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.510268799 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.524652192 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.513893562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.507051001 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.517186089 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.518422699 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514624032 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.515744146 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.522236732 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.517383391 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.512727771 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.517609537 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.529438276 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.525391602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.518632991 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.510196653 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.515354502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.520516331 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.519028502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.563831965 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.514556914 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.534990448 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.526719983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.51456285 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.514321689 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.528839037 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.524509646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.517690273 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.515046292 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.52223303 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.520333906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.523360547 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.52075882 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528775063 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.520853315 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.514538755 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.519685429 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.51551765 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.514538895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.527873062 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.528203761 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.519455163 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.522792668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.538092798 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.526960726 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.527016669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.539193077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.524607424 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.527374536 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.526023106 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.510892482 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.523705075 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.52396251 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.524232236 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.520361213 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.519851722 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.528225552 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.515377898 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.528828212 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.534779039 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.534785743 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.523537735 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.510656139 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.514412203 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.521101462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.521840033 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.525880631 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.522181068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.52056927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.524973183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.516442209 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.541681313 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.543614589 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.52909312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.523958878 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.519591772 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.529427311 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.525447405 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520503201 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.527240092 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.521236814 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.525489868 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.530532968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.528871164 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.527088396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.519433372 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.516412877 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.517035162 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.526042662 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.542475478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.541775669 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.535267858 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.522195874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.52768966 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.522911119 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.51820626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.528328778 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.52482484 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.519623829 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.520667258 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.528415171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.523661004 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.526370637 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.521316014 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.52824832 seconds)
  done (took 897.242891664 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.523020281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.525361081 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.522596414 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.527031405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.526107475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.52468404 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.523943443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.523005335 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.522332414 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.524491976 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.523506306 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.523408948 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.530364232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.533751324 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.52948032 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.52564792 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.52629863 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.523991494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.523336312 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.524810941 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.524255214 seconds)
  done (took 33.415278787 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.525395793 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.526899335 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.523122529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.528305171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.525673691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.522692097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.525144433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.526711393 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.529560778 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.525653158 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.524210377 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.526167189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.524097583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.529174206 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.529218066 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.529707514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.527723673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.526066757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.526044967 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.528447297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.528080351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.525755055 seconds)
  done (took 34.970261163 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.527730098 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.532674581 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.520422744 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.531462206 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.529874783 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.530427019 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.528530898 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.52739032 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.526608587 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.520074166 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.520750928 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.52388296 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.525304231 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.531934962 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.533425863 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.537997534 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.529862142 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.526697215 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.53052773 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.528688181 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.538445706 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.542248703 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.527678694 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.518944133 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.534416981 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.527187431 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.526353735 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.528726942 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.521558223 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.530673349 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.528991012 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.522978167 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.539435287 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.528616593 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.522198459 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.530336505 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.530289431 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.527715431 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.526829564 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.538707681 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.539496189 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.53134187 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.541454469 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.539105846 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.528931996 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.530030949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.536381547 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.527634066 seconds)
  done (took 74.819877166 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.529968022 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.529703673 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.533632245 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.529308999 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.536424988 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.530161133 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.53108241 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.530224199 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.535778188 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.529681882 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.529776517 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.531494333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.529388479 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.537731928 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.530251298 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.528440173 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.52884679 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.529574955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.530025571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.531318961 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.529800333 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.531425959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.531604612 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.53012258 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.531020949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.529545831 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.530651419 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.530353057 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.530962841 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.530564466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.531479387 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.532390886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.530396498 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.533212708 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.537204417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.532408346 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.532630581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.537407934 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.532099089 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.532565838 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.533094047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.532759508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.533350226 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.534260677 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.534058696 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.533241972 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.536370372 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.534048009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.532586582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.534242588 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.53438255 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.533063946 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.535321845 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.53446594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.539497655 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.538426989 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.536307516 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.534309426 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.538410785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.535857737 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.533222975 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.536084023 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.53651662 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.537168169 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.53514822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.537538258 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.536434347 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.538686798 seconds)
  done (took 105.641815697 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.537856734 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.53858497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.540490519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.541200596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.539512182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.53916123 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.541390284 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.538634208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.54103151 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.540695922 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.540220513 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.541122443 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.537899756 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.534640403 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.542404869 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.542220418 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.545135662 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.542071237 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.540983948 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.542840539 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.541247598 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.540930659 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.543607396 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.543846952 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.541016982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.538168995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.540605618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.54268619 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.542202399 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.543187859 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.543254767 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.541929599 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.541391332 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.54305586 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.541936583 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.543339345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.538905192 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.541343002 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.543596431 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.543070386 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.53764721 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.544382773 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.544534749 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.537824468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.541473675 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.543307357 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.543119624 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.546121682 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.541893421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.544289606 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.54618859 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.542682069 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543642526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.54501358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.544564431 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.539246995 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.544977751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.546737193 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.544494869 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.545705428 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.545807955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.538508004 seconds)
  done (took 96.995452497 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.539043757 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.540755776 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.539246436 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.540311516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.542133116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.540175186 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.540871922 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.538910709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.539188608 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540017205 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.54325826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.545418311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540418303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.543357434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.54277859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.54300306 seconds)
  done (took 26.057708037 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.539780234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.542786342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.540207871 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.545188044 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.543375244 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.539881014 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.542969535 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.540936805 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.539646976 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.544986133 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.541120837 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.538580988 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.543272856 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.544981873 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.541479192 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.542499992 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.543457586 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.539158366 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.545324095 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.543159225 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.542974284 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.546221346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.544442208 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.550054934 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.545437447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.543621155 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.543045034 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.54637779 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.545507987 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.542646101 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.543769637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.544421116 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.543002291 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.544426495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.5428925 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.548509137 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.542773631 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.542300247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.542686399 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.54309064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.54358372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.544700202 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.543832354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.542952006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.543260285 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.543342767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.542735637 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.542459415 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.543409256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.543892348 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.544157186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.544612272 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.544271796 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.543392354 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.544197136 seconds)
  done (took 86.287568973 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.545205714 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.544944927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.545615682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.545869764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.543638335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.544624564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.544015548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.55120487 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.544329695 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.546075237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.544653898 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.552634521 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.544038526 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.547115105 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.547084654 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.546442254 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.545604159 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.546586196 seconds)
  done (took 29.232807329 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.544801751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.553072636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.552343911 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.546260387 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.546182234 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.55206315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.546654082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.545763117 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.547564533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.553229289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.546061339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.547432184 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.545151726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.547631092 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.546786991 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.555049982 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.548385308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.54713501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.548232705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.547000774 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.551885334 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.556251602 seconds)
  done (took 35.480378057 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.53559688 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.53740996 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.570436715 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.563211007 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.54798407 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.53669262 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.538588602 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.536645896 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.565160416 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.570629268 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.569710435 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.550904343 seconds)
  done (took 20.030154324 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548857645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550259499 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.549023867 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549254483 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.54801899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548861207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.556769265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550447023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549613816 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548801632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547523606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549792401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549459816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.554755741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549804762 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553247728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55496743 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552418013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549110679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550196991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557945183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550865791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549791492 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550605143 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549612978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550997722 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552580395 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.550809918 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549934946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549616121 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551407131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551221842 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548819791 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551964255 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549582387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.55338776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.551998477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549833956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551297061 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551695645 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.553408432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552845023 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.551127766 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552134249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.556669881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552385118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55218663 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551375492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551323042 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550555207 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552937354 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.551639982 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556911881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.558432116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552795576 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.553767696 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554864833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551898953 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.557908167 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55195322 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552336509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553597563 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.551237207 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.55225689 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.557878205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554978745 seconds)
  done (took 103.83417249 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.559243044 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.552395665 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.553663144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552918985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552589893 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555302807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.553460394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552952718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554570173 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.552628585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555605361 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.560386066 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55444348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552690534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551266191 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.553987836 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556184274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560572402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555971887 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.554773341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.561346873 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555220605 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554118998 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.55502477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559370643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553998801 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561819069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562414955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560555361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555742738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.560478326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55590037 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.560354148 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.556502751 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554669767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554669557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561434803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555777519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555394579 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560312313 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.556638941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553553424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.55860204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.556472998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556091316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556125399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555761595 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563553298 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555970142 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557107855 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.557155138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.558450554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563551064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557636694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563069927 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556288827 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.557535564 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.557184332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557133068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557423189 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556999532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.55926679 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563870657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.559462415 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.558473392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.557078662 seconds)
  done (took 104.172480036 seconds)
done (took 1988.087953764 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.527342967 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.525971425 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.545883104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.692497698 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.547594844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.203406103 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.159712488 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.549042235 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.54792233 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.548206934 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.548132273 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.530388187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.883031006 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.546090394 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.547691714 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.530072225 seconds)
  done (took 57.848165889 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.586525912 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.56439754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.703612519 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.553779989 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.588190579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.807720172 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.624665958 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.554160135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.762671985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.565495514 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.529936593 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.586752128 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.55771296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.544947091 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.579009244 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.815288243 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895506195 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.532867273 seconds)
  done (took 33.767783739 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.129706997 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.536996779 seconds)
  done (took 6.08189568 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.583678414 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.558234325 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.559741082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.554603487 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.529531723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.531562289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.552640947 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.536427433 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.532888505 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.717437043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.563720777 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.580921428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.555148389 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.557637113 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.565720194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.618733081 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.753951952 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.567287991 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.563238035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.570833833 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.553010267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.808794121 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.621008789 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.569441757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.713908103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.54153276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.576831173 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.580144165 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.771239834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.56614434 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.554632401 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.554441734 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.558828815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.532850231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.208240657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.553961855 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.600092442 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.570695477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.56959003 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.771477155 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.562788746 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.577047892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.547554895 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.19745835 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.748115316 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.854209184 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.558298161 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.56818161 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.562196142 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.765829789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.563998327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.566901699 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.670418145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.55059781 seconds)
  done (took 99.050561041 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.556536065 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.535066296 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.799590646 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.558284333 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.534684195 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.539424531 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.540094589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932589822 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.593273977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.533855038 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957000817 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.327704103 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.548240387 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.622613672 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.594103273 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.581718248 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.534120296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.542938736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.540338894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.538820475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.220161726 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.544691891 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.542407244 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.698112867 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.607502882 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.236908129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.542477992 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.541610494 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.545106818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.536156867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.28445384 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.542814837 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.606255656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.538952055 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938254997 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.070200058 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037266401 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.543600272 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.546589269 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.541451675 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.53840904 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233667913 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.05877151 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.545702704 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.545677771 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.233389805 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543615428 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.546150527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.537998023 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.895748685 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.544714171 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.539466507 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.542667262 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.542719923 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.534868645 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.615979378 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.591981215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.242270613 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.544610526 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.545307682 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.555675132 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.539531249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.547378896 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.54136116 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.541399434 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.058911751 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.711847924 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.542885446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.052021699 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.280755395 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.545604577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.359016534 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.548073257 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.566170879 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.621226205 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.538709566 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.545710736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234032694 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.577188971 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.539732462 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036307131 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.549672413 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959217999 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.566586016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.546352857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.250387567 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.553316522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.612089707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.540092354 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.545483892 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.546887841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.544625961 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.940333963 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.61594355 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.541315904 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.539209211 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.584649137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.541354036 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.548120609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.549775778 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.360431728 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.555548719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.542045256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.54693673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.542089186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.566329559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.540482627 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.544363288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.91750592 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.549742184 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.544785689 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.545658355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.544281714 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.555813487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.699913795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.550636711 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.989968557 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.548226279 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.542507535 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.566981528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.542556006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.605337173 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.545783511 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.565038613 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.544018272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.946200212 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.566226543 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.567430887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.542796469 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.54464 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.556334503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.550092858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.588488034 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.545785187 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.507672868 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.559115653 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.564707845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.544123244 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.55693849 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.54551972 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.550041315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.54458224 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.960631726 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949143254 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.747966135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.548073327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.545140762 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.500676098 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.550424813 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.81180854 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.568166524 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.546317936 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935797143 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731613147 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.546662813 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.545912648 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.549262863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.944926725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.55163628 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.966161549 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.311855229 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.550974464 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.553271823 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.506548494 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.388988083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.547251574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.552100096 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.95497549 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.56462152 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.545692786 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.547136964 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.548565708 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.547987143 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.562243425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.553369811 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.546735797 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.547863034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.664760442 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.828083027 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.565024784 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.557271284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236951919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.571272646 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.553913944 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.551813048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.548412267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.546420394 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.57868106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.55188268 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.574414805 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.548127943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.555980827 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.270444517 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.556227157 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.552758211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.827683255 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.451009448 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.553812045 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.549399473 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.548823981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.590745303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266019652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.607682443 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.00016294 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.557047233 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.616252318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.550676102 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.58576101 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.262821341 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.562478511 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.549315035 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.429269113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.551857817 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.245340486 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.550272838 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.551492337 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.362893493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.551289029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.554528128 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.555420071 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.549944026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977668109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.552248857 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.550202369 seconds)
  done (took 552.532162449 seconds)
done (took 750.693043387 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.548373016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.55681571 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.556596618 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.555460859 seconds)
  done (took 11.650915735 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.591177761 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.573621548 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.584957207 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.573976691 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.585490446 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.574348805 seconds)
  done (took 10.919003248 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.551059042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.555655297 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.556893652 seconds)
  done (took 9.098470274 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870869124 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.555919995 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.044347818 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.55995284 seconds)
  done (took 10.465414981 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.585047442 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.583482648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.585098217 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.586761627 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.591382885 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.590749843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.587512421 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.586049664 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.591025437 seconds)
  done (took 15.721208403 seconds)
done (took 59.287852109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.706813276 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.714866884 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.564386435 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.628284784 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.766408564 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.721439018 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.714850261 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.71973999 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.716581348 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.62234157 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.712898198 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.615740032 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.71604308 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.839570171 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.62682147 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.711519321 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.612597384 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.807688324 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.712487671 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.62664973 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.742519213 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.62209538 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.622936828 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.553584014 seconds)
  done (took 43.836235601 seconds)
done (took 45.273621319 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.627180313 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.749220764 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.586572566 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.582316858 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597815617 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.557009799 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.620755126 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.581212806 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.609119987 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.608516069 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.559583869 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.602500988 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.610767403 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.597569286 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.632453959 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.581354584 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.589686859 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.595632866 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.609182704 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.614400896 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.589468885 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.59899321 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.623536555 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.583656274 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.606220037 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.605766837 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.602889306 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.564310447 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.598422956 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.611069396 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.563188029 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.610271529 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.6125772 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.599598665 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.591623488 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.595431584 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.593614174 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.746730083 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.617604096 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.600333534 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.598676549 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.61305226 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.603473878 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.602250188 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.5986146 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.627153285 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.607538152 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.614383435 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.563545127 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.56988015 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.617439131 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.609575142 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.59976768 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.562483539 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.565656987 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.618466916 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.599739464 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.618444496 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.592501603 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.593533158 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.631109165 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.620930847 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.609688983 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.607927237 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.592523044 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.615283061 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.599000473 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.616685125 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.594976498 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.598045325 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.594833533 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.599801623 seconds)
done (took 124.940797153 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.765229223 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.561855247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.803476545 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.591729368 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.813485849 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.764625865 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.592721952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.598798423 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.599151191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.457114275 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.598015502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.59663439 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.564807647 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.599629184 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.761408556 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.593714187 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.594462397 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.354805035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.595139018 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.778752941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.565656848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.593807285 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.593941101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.461789031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.561993603 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.569529268 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.775781683 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.594102015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.362788801 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.567676099 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.560864618 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.360573855 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.779372223 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.613567061 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.607554913 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.60419415 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.816857926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.598915686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.767874602 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.767787649 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.808168902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.636216589 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.570039948 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.564393419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.6029669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.597816803 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.595464689 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.627663686 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.563967527 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.597517673 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.358005582 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.606465599 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.609375466 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.596348879 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.598154905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.619261081 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.597619292 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.59846521 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.784062065 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.598242766 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.772246038 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.464509139 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.461528593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.597652956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.565949972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.597116086 seconds)
  done (took 126.744298283 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.71794032 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.726303952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.765940836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.586485824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.686375342 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.766598113 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.588483074 seconds)
  done (took 13.285640234 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.601142716 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.599642525 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.723907628 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.683337315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.59769528 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.827035058 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.600490887 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.607136215 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.596541502 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.685874999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.600889889 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.600144823 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.607821777 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.568459578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.684098166 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.608448114 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.770139695 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.590826459 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.602295586 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.809882458 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.59952093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.608839015 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.68758143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.609689682 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.599651254 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.611297777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.418555461 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.60503937 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.602765617 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.605648875 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.59863269 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.718477259 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.603845643 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.569974297 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.599763769 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.765363458 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.607105764 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.601649833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.60136502 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.571696513 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.601424804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.602913681 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.607866755 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.601620849 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.602209052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.623459659 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.601406086 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.601357896 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.600620931 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.607915434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.69152886 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.602246417 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.600177369 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.600554722 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.691485838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.61307468 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.601563858 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.601222334 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.602283014 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.601517344 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.810608808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.688606422 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.603664195 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.687572282 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.601450576 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.602243763 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.603036462 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.601511128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747326179 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.602756398 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.688359392 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.607448755 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.841710038 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.630924784 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.60306782 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.597500283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.598458994 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.602144658 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.579831556 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.605815865 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.603609649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.594825571 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.610294088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.6019065 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.600693915 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815552662 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770147866 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.603619776 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.617498496 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.614500909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.60200721 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.692278816 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.603899769 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.603276157 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.693641559 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.772668368 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.692675375 seconds)
  done (took 164.857766135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.616227315 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.615573251 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.598162936 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.633950169 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.594699019 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.594190435 seconds)
  done (took 11.105876034 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.601040468 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.60793953 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.605162639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.605857141 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.605895484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.604973439 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.605917135 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.602588779 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.616204337 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.605915599 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.604299821 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.610112152 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.607561688 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.604680525 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.609437415 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.607605688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.606048018 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.605710474 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.606701103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.606873612 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.581374698 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.607783853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.608098278 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.605507167 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.610736323 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.608348799 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.632922106 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.606574412 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.606550316 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.609441396 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.608124678 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.608267224 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.604409891 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.607055129 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.611652013 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.603449084 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.61181586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.613118261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.608834196 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.607756964 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.613245441 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.608466063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.61446061 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.613369619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.605452272 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.60786913 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.616372306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.637476944 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.607770932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.614001473 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.612428648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.608660152 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.610333758 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.612718838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.605498227 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.606996043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.618764928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.610660615 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.610710901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.607026285 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.619962706 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.610494812 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.606625046 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.614681308 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.616176331 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.613035569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.606865929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.612439193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.610362114 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.610496349 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.615902413 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.610719213 seconds)
  done (took 118.342336902 seconds)
done (took 435.775769053 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.929148881 seconds)
  done (took 4.3862128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.796604512 seconds)
  done (took 4.25923981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.859375275 seconds)
  done (took 25.324428128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.581271124 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.586459633 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.601785185 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.585500712 seconds)
  done (took 11.81403557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.211144029 seconds)
  done (took 4.67094377 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.588571215 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.594739666 seconds)
  done (took 6.644577708 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.985630366 seconds)
  done (took 4.446886298 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.308567241 seconds)
  done (took 4.778147277 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.606670094 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.600940665 seconds)
  done (took 6.675073137 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.565867838 seconds)
  done (took 4.026285745 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.775521665 seconds)
  done (took 17.237127361 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.590545069 seconds)
  done (took 4.052117451 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.627031972 seconds)
  done (took 4.085997808 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.567711858 seconds)
  done (took 7.027576063 seconds)
done (took 110.888229365 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.579846222 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.579973892 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.580726082 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.580982959 seconds)
  done (took 11.780892459 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.734067091 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.735184551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.737564323 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.72929714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.725353273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.737889225 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.645792597 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.647703734 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.714123423 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.711460305 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.742544425 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.72072999 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.740202159 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.647971854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.710970717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.745135048 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.714049251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.74071661 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.650054313 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.728587134 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.614734806 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.730411458 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.714054071 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.615716565 seconds)
  done (took 42.395234409 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.194124966 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.730856975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.822777324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.706088113 seconds)
  done (took 8.918005565 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.781002668 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.788741711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.801625263 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.839808051 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.886607019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.796269903 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.653643525 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.651401829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.638713624 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.787621107 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.857558632 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.781590662 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.006595531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.616285842 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.00531974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.615300102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.6153624 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.789442918 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.836758432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.867178641 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.61640995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.781951811 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.791004359 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.782293265 seconds)
  done (took 44.053515326 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.63105441 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.640592145 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.624704091 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.641913194 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.61625609 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.624837488 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.619045551 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.631566765 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.617890027 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.617171848 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.624454618 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.64227092 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.619304382 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.617589988 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.630318073 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.620513894 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.626717056 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.637330069 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.641163865 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.627610536 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.624902021 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.633299807 seconds)
  done (took 37.27527956 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.585677969 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.5882695 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.025070507 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.926626284 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.586988122 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.593037285 seconds)
  done (took 15.771108253 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.705626742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.907703347 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.613643607 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.0530557 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.194030679 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.621196802 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.611069257 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.95770782 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.331409253 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.288145301 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.682382096 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.711757549 seconds)
  done (took 24.145704703 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752798523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598400397 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.599827604 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64505619 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598608175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598690239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656175551 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229243258 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.627583018 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947825698 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600284017 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763392398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933094285 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608890418 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.607427732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.584229601 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917248975 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278622791 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607264444 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603205966 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665573884 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.609099035 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.613361797 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891397572 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.60932979 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601882683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.084619839 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.602319051 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006916103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969359442 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969842394 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.608931206 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960124049 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173780479 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784898345 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881090396 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600983267 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608800463 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.580888463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.613665816 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.61210675 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.61302139 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964230438 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609741504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602082639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600401629 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264543557 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.637568436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.602667421 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603453623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969237429 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771419117 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.629733362 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.60223189 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679380597 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602724341 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.630164982 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799736336 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323634452 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603812748 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630577604 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.60954078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614372261 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606302519 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437086518 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.641740825 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.630949857 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627205526 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60366224 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613711283 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661180587 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60344608 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.651114642 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604012284 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568442608 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613322476 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61337821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353566609 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618187131 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.610119485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914425011 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606880736 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603390277 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.604304919 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6045157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610531409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646231829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.586917931 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674736501 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240752961 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894725369 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66166794 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664488131 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912418332 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.581176908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604851147 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.605743021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614450344 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657055691 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231435995 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609341174 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.633305185 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941684763 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.904761283 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619280497 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.607271288 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251245776 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630841813 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.660530226 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.620985183 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896728628 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.40385827 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990945287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623745031 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672804063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.607875205 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.608642831 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620160427 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.636898519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.607601427 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996902748 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.58388696 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616976992 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758536334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611144755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.610094342 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616241633 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61574988 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.605788488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.891852588 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628495914 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975512808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.618776033 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609476596 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.608173917 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638046779 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.616764674 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912290034 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613149968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96616525 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610866787 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609150577 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609092748 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.914883589 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.609471498 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.661366365 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034212311 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623919355 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.632058797 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981581527 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683605716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807024483 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673070228 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.626829362 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952556188 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.636820926 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.638172425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621157621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.618892039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62100858 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.640351123 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624677551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402762251 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624412504 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.619476681 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610974063 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.6512875 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763067287 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638881872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894626195 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.627077926 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618226103 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.636376805 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.626098402 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919486759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971078654 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.628637552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86314384 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.220746018 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391808483 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655499977 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.612892742 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.608985822 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.611576235 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612020635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61185979 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.611885353 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889016962 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985664029 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.615675918 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396495392 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617809779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.614259257 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.661024771 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975218637 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.648383779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615513188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.611765016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644495016 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615289626 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002057384 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916470384 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.655766352 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613142146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.219354152 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640005339 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.618442192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615263994 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669429611 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.61318873 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318519136 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041113259 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.623106402 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981378707 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635283649 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.656869774 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.61586833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614930292 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653195075 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.637187243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645473003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.893187884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.617720801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61857077 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33681853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577692247 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339764505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620656789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.638229904 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.620864497 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248651941 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622221024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616743931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981314872 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233292307 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617388217 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229540153 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.629114988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.581097987 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985603058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939369524 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631387622 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.630818975 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993426748 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923313921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673487529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615922877 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627882498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.595149705 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307484772 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625567748 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878081423 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258229277 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633550677 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628979216 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.699165864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.63899718 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17499446 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.626579469 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620564878 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.623831774 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636916817 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313820773 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.628187705 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621337182 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447751491 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637910101 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.266947494 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627923705 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.906485036 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998351606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.982460619 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.628003324 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.630152689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.958076443 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987606175 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629851394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.626822307 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352291377 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.57003883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.649107823 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624167221 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.641544781 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628710536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02886184 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.629129934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.626206587 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633128487 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.623621621 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62109204 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.621739678 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.63321963 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621768243 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286952691 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.61574967 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637874551 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645046832 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629284841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957878932 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.661135539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402657559 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941171779 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620919322 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681421988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.645111645 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630182162 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.600511071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.621981189 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6205947 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624769881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926037941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.630900899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.607217091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.69262006 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922163077 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6227463 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.625434352 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94862538 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.631266657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.649771874 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591441621 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684683856 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.62850632 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623440034 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.619362001 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705452069 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774238889 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903094241 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.991706906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000132489 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184476811 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64721687 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632526245 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.664088848 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782280554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62783347 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.626835787 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.632043013 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406367668 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583499341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417542412 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999465854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.636250392 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629051781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624734124 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952091743 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.626144358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977463056 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626634923 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.621322027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693811762 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63288907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639350297 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928996487 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98179573 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62787328 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626204631 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629142924 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.625115735 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009328351 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.931034107 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314852538 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392440827 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635062531 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.630071673 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251306887 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977479259 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627928244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629143343 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627871673 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.638526729 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635346297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.68381482 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627193654 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968125276 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994615796 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223461657 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000500831 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.67203057 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.580491765 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633046912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.969431867 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545267383 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.914548631 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442448513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.556584326 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971245925 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782258973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918793514 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.635466842 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952133997 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.646384432 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.635964182 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628620162 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631175794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.628972162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993413269 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438826404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971982471 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.651885761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.645802654 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689132047 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.913160884 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939601956 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.643231727 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942846643 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009568186 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644602641 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.633201122 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440415852 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01454305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638767681 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.652999798 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952540404 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63586417 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695347642 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.587147849 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.632794366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387508914 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.940145601 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679338693 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63972325 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.561711095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447689542 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.639100196 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324103715 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638890951 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633126811 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984605375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.658921292 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.645281918 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006928535 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.656309716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650120242 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928580653 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.437300721 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.6281722 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.652027328 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654848288 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.645038381 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632895635 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708711911 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635500087 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636623973 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.181220461 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64059033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634181344 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674856139 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.65116402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646203334 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.63809057 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63461471 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.665296404 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.630439528 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.623660174 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647512927 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834699161 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33104517 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642542393 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.33536178 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.05983177 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970107791 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642925891 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.618017067 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.659660771 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636240405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635077338 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634239033 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.635198861 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397210427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.649909531 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.007718439 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667178906 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.931799428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934802743 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645323124 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933805269 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65099696 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687965208 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.613824845 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638988869 seconds)
  done (took 1119.325494703 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.683249385 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.654097773 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.668010506 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.6690869 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.647169518 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.679021404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.69246592 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.671917637 seconds)
  done (took 22.865209047 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.635658208 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.659870225 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.645850425 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.661220746 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.643734933 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.271397571 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.654071583 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.661195534 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.686926529 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.634044525 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.6508783 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.445352374 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.663725534 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.629136638 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.6458484 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.665438182 seconds)
  done (took 37.363579127 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.099726369 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.060484227 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.406858093 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.637249332 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.673339116 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.655307005 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.153960011 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.636559929 seconds)
  done (took 30.827253732 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.667432011 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.665955007 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.674506304 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.673216406 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.66751184 seconds)
  done (took 9.851812651 seconds)
done (took 1406.033769484 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.66279867 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.663064905 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.664841318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.661195534 seconds)
  done (took 8.154232882 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.615478756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.623019101 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.620668592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.658286714 seconds)
  done (took 11.019682322 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145297736 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.373820372 seconds)
  done (took 6.023407167 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.641173992 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.486202261 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.47426003 seconds)
  done (took 9.106001469 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.024504582 seconds)
  done (took 3.527968885 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.137630979 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.212164899 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.629118898 seconds)
  done (took 8.484441422 seconds)
done (took 47.818015686 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.63482137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.402989793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.795300576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.632720683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.798423459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.792905159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.956134924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.632596785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.64291765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.641867866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.632060683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.797544576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.943066782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.407225528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.942141176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.397964364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.820105546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.631494969 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.637670824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.640804882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.952794905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.63211488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.63278396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.650685328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.82141912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.783972599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.633405966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.405138322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.632814131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.632254772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.78376517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.639078126 seconds)
  done (took 91.486511311 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.632737166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.649256306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.633793306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.633482442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.633677649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.636933789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.633459185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.635852646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.637056779 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.632508157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.634870817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.632883623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.636423878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.632910652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.636711694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.635645496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.634584747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.636328614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.647236007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.634959586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.637607757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.649547334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.649767264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.65148536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.650235271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.636495814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.651623227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.637912754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.634215916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.636110151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.654633596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.635410271 seconds)
  done (took 85.954753536 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.634380182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.634766194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.635621332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.664882315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.633114588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.635741249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.65497498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.635117427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.65252837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.652048839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.637828036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.638897307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.640011136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.637274265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.641442253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.637419256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.638373427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.634433052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.655430903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.637887192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.638683033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.651702915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.636212817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.648088559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.637485884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.637415973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.637534075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.645584679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.638325516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.634882271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.639752583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.638618291 seconds)
  done (took 86.025027906 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.96462113 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.670078926 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.678460927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.64932517 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.681679423 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.669367243 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.649618991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.968323416 seconds)
  done (took 17.440614062 seconds)
done (took 282.413383092 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.650725697 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.650541944 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.732958221 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.658918568 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.692287965 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.706915244 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.969415105 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.712530553 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.950835019 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.660731089 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.695830733 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.663653108 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.652137538 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.891176735 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.65059202 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.650804827 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.657567209 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.64585273 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.660475749 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.994669922 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.713983322 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.65603531 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.658215475 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.658784402 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.63472464 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.752503444 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.764211566 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.892577122 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.864438976 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.758927794 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.650551582 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.652698224 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.653751012 seconds)
  done (took 76.372268431 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.664502867 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.674476901 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.674594723 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.672622824 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.674979898 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.676594908 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.667891706 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.676574025 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.675487644 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.674205497 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.674786857 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.675725524 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.67961722 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.674704653 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.677195403 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.660640714 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.666307216 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.677411492 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.664949851 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.659888803 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.677233257 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.675871142 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.678894083 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.675745219 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.677187511 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.675880291 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.675710857 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.679067359 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.67570031 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.676781454 seconds)
  done (took 51.723586849 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.67647094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.654355907 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.65323223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682949207 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.668322627 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.672992983 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.070185392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.686856268 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.673813619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.674941136 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.664519559 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.691472149 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.73988466 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.645600883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.701400856 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.682301011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.677283683 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.671112507 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.645715143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.719217507 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.083713788 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.685239862 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.071115468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.701031046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.674777219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.670933433 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.682611106 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.647785378 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.681198636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.666678283 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.640267803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.062232355 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.653851094 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.658210657 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.632421413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.693735844 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.682213849 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.647303054 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.683678141 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.669925624 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.068700636 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.678410153 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.646413835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.672988862 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.672852323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.68219569 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.64842708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.698606995 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978088973 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.686729786 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.662092505 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.684583913 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.684848611 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.67572741 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.97159129 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.675217009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.671842418 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.65185049 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.692098764 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.059331777 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.690092434 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.674590742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.6681365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.674403568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.664764912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.676573746 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.697561959 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.674511193 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.657576917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.680013988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.651017144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.679935835 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.682217131 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.651509595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.663293287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.652679995 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.675311993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.6509135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.652135792 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.057360297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.689281717 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.650766763 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.087055694 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.689056968 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.688380345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.687360243 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.6848711 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.862726049 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.056898437 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.653370446 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.652549602 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.675904248 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.071614833 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.696814378 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.676419746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.651254674 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.690617361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.68832517 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.666232067 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.659228104 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.69666415 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.700710056 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.672192113 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.678738197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.071075379 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.697189356 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.655536923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.684823747 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.811301284 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.688454028 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.698397959 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.684273119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.088510208 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.687315685 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.690538929 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.664555737 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.666376989 seconds)
  done (took 241.115819064 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.666164112 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.655551869 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.674047866 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.654050071 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.656622606 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.676854089 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.655416028 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.656887095 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.674375491 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.655142878 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.65624651 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.682404655 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.680784547 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.654479666 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.66054175 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.656419647 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.654925602 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.658045133 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.659942511 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.655551519 seconds)
  done (took 50.767430762 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.692172517 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.402615863 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.373885185 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.693869451 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.692033953 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.681594427 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.754602593 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.693206797 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.690872003 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.083851375 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.909806757 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.700315871 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.691825826 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.693578073 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.373262689 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.673821092 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.086091185 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.405168772 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.695307902 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.405444156 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.674679091 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.689126529 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.679207111 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.405544099 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.096383485 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.066279728 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.760000067 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.407143534 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.694261819 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.693295635 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.404262861 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.696485566 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.682986083 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.438496963 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.697728391 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.718882618 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.695318518 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.761969941 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.763863617 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.089626481 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.413714481 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.072113361 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.715232992 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.922182981 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.694358899 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.673835689 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.4177372 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.696553521 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.672357777 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.698266448 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.708029492 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.39439736 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.686478218 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.401820861 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.703327008 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.695690213 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.408710632 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.386963105 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.388959238 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.917414917 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.684168007 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.07011576 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.705612354 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.420104609 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.695991928 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.697833014 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.695727648 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.911263437 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.410847287 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.074120738 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.105784192 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.098256839 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.693752257 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.774938699 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.698655045 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.092354133 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.775128947 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.174492231 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.093650456 seconds)
  done (took 154.577747496 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.050575565 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.811833335 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.218546995 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.435598898 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.350316615 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.89208942 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.834047821 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.013004167 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.684503595 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.852718562 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.555211246 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.806504654 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.56490787 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.780303208 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.820655057 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.883187101 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.239995393 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.663812347 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.539941217 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.529060574 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.674518736 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.856324187 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.553351722 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154256347 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.663765553 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.568042417 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.664354315 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.379887764 seconds)
  done (took 64.569694793 seconds)
done (took 640.634257627 seconds)
SAVING RESULT...
DONE!
